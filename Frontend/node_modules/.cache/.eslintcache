[{"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\index.js":"1","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Profile.js":"2","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Landing.js":"3","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Index.js":"4","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Admin.js":"5","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Auth.js":"6","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Test.js":"7","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Postule.js":"8","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Employe.js":"9","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signup.js":"10","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\TestForm.js":"11","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signin.js":"12","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Maps.js":"13","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Dashboard.js":"14","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Tables.js":"15","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Settings.js":"16","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\IndexNavbar.js":"17","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AuthNavbar.js":"18","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\Footer.js":"19","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\FooterAdmin.js":"20","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Headers\\HeaderStats.js":"21","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AdminNavbar.js":"22","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\forget.js":"24","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Recrutement.js":"25","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Personnels.js":"26","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Departement.js":"27","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Cong√©.js":"28","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Formation.js":"29","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeFormation.js":"30","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\SettingsEmploye.js":"31","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\SlidebarEmploye.js":"32","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeAvance.js":"33","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeConge.js":"34","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSocialTraffic.js":"35","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardBarChart.js":"36","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardTable.js":"37","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSettings.js":"38","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPageVisits.js":"39","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardLineChart.js":"40","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardStats.js":"41","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Maps\\MapExample.js":"42","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\IndexDropdown.js":"43","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\PagesDropdown.js":"44","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\NotificationDropdown.js":"45","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\UserDropdown.js":"46","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardRecrutement.js":"47","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPersonnels.js":"48","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDepartment.js":"49","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardFormation.js":"50","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeFormation.js":"51","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeAvance.js":"52","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\TableDropdown.js":"53"},{"size":1611,"mtime":1743931043799,"results":"54","hashOfConfig":"55"},{"size":6604,"mtime":1741431010756,"results":"56","hashOfConfig":"55"},{"size":27259,"mtime":1741431010756,"results":"57","hashOfConfig":"55"},{"size":2142,"mtime":1744904085955,"results":"58","hashOfConfig":"55"},{"size":2031,"mtime":1743725239727,"results":"59","hashOfConfig":"55"},{"size":723,"mtime":1743110458655,"results":"60","hashOfConfig":"55"},{"size":5369,"mtime":1743809094069,"results":"61","hashOfConfig":"55"},{"size":26086,"mtime":1745072751426,"results":"62","hashOfConfig":"55"},{"size":1562,"mtime":1743810841753,"results":"63","hashOfConfig":"55"},{"size":8733,"mtime":1742861437019,"results":"64","hashOfConfig":"55"},{"size":5078,"mtime":1742520569715,"results":"65","hashOfConfig":"55"},{"size":12288,"mtime":1742770882724,"results":"66","hashOfConfig":"55"},{"size":444,"mtime":1741431010757,"results":"67","hashOfConfig":"55"},{"size":1067,"mtime":1743701116584,"results":"68","hashOfConfig":"55"},{"size":29614,"mtime":1744499656394,"results":"69","hashOfConfig":"55"},{"size":272,"mtime":1743721484237,"results":"70","hashOfConfig":"55"},{"size":3407,"mtime":1744904432165,"results":"71","hashOfConfig":"55"},{"size":1138,"mtime":1742030410813,"results":"72","hashOfConfig":"55"},{"size":7192,"mtime":1744061726167,"results":"73","hashOfConfig":"55"},{"size":895,"mtime":1742218811241,"results":"74","hashOfConfig":"55"},{"size":2799,"mtime":1745108226387,"results":"75","hashOfConfig":"55"},{"size":848,"mtime":1743717836528,"results":"76","hashOfConfig":"55"},{"size":10240,"mtime":1744497047607,"results":"77","hashOfConfig":"55"},{"size":2404,"mtime":1741431010758,"results":"78","hashOfConfig":"55"},{"size":199,"mtime":1742947662951,"results":"79","hashOfConfig":"55"},{"size":357,"mtime":1742516294347,"results":"80","hashOfConfig":"55"},{"size":294,"mtime":1742309635114,"results":"81","hashOfConfig":"55"},{"size":21744,"mtime":1743384353078,"results":"82","hashOfConfig":"55"},{"size":337,"mtime":1745236991061,"results":"83","hashOfConfig":"55"},{"size":300,"mtime":1743699950581,"results":"84","hashOfConfig":"55"},{"size":214,"mtime":1743810790877,"results":"85","hashOfConfig":"55"},{"size":6789,"mtime":1744193594283,"results":"86","hashOfConfig":"55"},{"size":243,"mtime":1743810665950,"results":"87","hashOfConfig":"55"},{"size":19113,"mtime":1744193363476,"results":"88","hashOfConfig":"55"},{"size":7759,"mtime":1741564694275,"results":"89","hashOfConfig":"55"},{"size":3562,"mtime":1741431010747,"results":"90","hashOfConfig":"55"},{"size":20942,"mtime":1741431010749,"results":"91","hashOfConfig":"92"},{"size":11279,"mtime":1744202800570,"results":"93","hashOfConfig":"55"},{"size":6405,"mtime":1742216514480,"results":"94","hashOfConfig":"55"},{"size":3776,"mtime":1741431010747,"results":"95","hashOfConfig":"55"},{"size":2574,"mtime":1741431010749,"results":"96","hashOfConfig":"55"},{"size":2413,"mtime":1741431010753,"results":"97","hashOfConfig":"55"},{"size":3805,"mtime":1741741857414,"results":"98","hashOfConfig":"55"},{"size":4046,"mtime":1741431010750,"results":"99","hashOfConfig":"55"},{"size":2481,"mtime":1741431010750,"results":"100","hashOfConfig":"55"},{"size":2434,"mtime":1743717986858,"results":"101","hashOfConfig":"55"},{"size":21225,"mtime":1745071040995,"results":"102","hashOfConfig":"55"},{"size":29702,"mtime":1745279177737,"results":"103","hashOfConfig":"55"},{"size":21045,"mtime":1745281548612,"results":"104","hashOfConfig":"55"},{"size":32704,"mtime":1745243500433,"results":"105","hashOfConfig":"55"},{"size":28522,"mtime":1745250722385,"results":"106","hashOfConfig":"55"},{"size":5842,"mtime":1744193397488,"results":"107","hashOfConfig":"55"},{"size":2092,"mtime":1741431010750,"results":"108","hashOfConfig":"92"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"dzmoog",{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"111"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"111"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"111"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"111"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"1in0o1e",{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"111"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"111"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"111"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"111"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\index.js",[],["229","230"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Profile.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Landing.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Index.js",["231","232"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Signin from \"./auth/Signin\";\r\nimport Postule from \"./Postule\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <IndexNavbar fixed />\r\n      <section className=\"header relative pt-16 items-center flex h-screen max-h-860-px\">\r\n        <div className=\"container mx-auto items-center flex flex-wrap\">\r\n          <div className=\"w-full md:w-8/12 lg:w-6/12 xl:w-6/12 px-4\">\r\n            <div className=\"pt-32 sm:pt-0\">\r\n              <h2 className=\"font-semibold text-4xl text-blueGray-600\">\r\n               BIENVENUE SUR UBCI HR MANAGER\r\n              </h2>\r\n              <p className=\"mt-4 text-lg leading-relaxed text-blueGray-500\">\r\n              UBCI RH est un site web d√©di√© √† la gestion des ressources humaines de la banque UBCI, facilitant le suivi du personnel, la gestion des cong√©s et l'automatisation des t√¢ches administratives.\r\n              </p>\r\n              <div className=\"mt-12\">\r\n                <Link\r\n                  to=\"/postule\"\r\n                  className=\"get-started text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-lightBlue-500 active:bg-lightBlue-600 uppercase text-sm shadow hover:shadow-lg ease-linear transition-all duration-150\"\r\n                >\r\n                  Postuler\r\n                </Link>\r\n                <Link\r\n                  to=\"/signin\"\r\n                  className=\"github-star ml-1 text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-blueGray-700 active:bg-blueGray-600 uppercase text-sm shadow hover:shadow-lg ease-linear transition-all duration-150\"\r\n                >\r\n                  Mon Espace\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <img\r\n          className=\"absolute top-0 right-0 pt-1 sm:w-6/12 sm:max-h-full -mt-48 sm:mt-0 w-full h-full object-cover\"\r\n          src={require(\"assets/img/ubci.jpg\").default}\r\n          alt=\"...\"\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Admin.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Auth.js",["233","234"],"import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\nimport Navbar from \"components/Navbars/IndexNavbar\";\r\n\r\n\r\n// views\r\nimport Signin from \"views/auth/Signin\";\r\nimport Signup from \"views/auth/Signup\";\r\nimport Forget from \"views/auth/forget\";\r\n\r\nexport default function Auth() {\r\n  return (\r\n    <>\r\n      <Navbar transparent />\r\n      <main>\r\n      \r\n          \r\n          <Switch>\r\n            <Route path=\"/auth/signin\" exact component={Signin} />\r\n           \r\n            <Route path=\"/auth/signup\" exact component={Signup} />\r\n            \r\n          \r\n         \r\n            \r\n           \r\n          </Switch>\r\n       \r\n        \r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Test.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Postule.js",["235"],"import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"components/Navbars/IndexNavbar\";\r\nimport axios from \"axios\"; // Make sure axios is installed\r\n\r\nconst Postule = () => {\r\n  // State for job listings and search\r\n  const [jobListings, setJobListings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // State for modal and selected job\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [fileName, setFileName] = useState(\"Aucun fichier s√©lectionn√©\");\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  // Search and filter states\r\n  const [dateFilter, setDateFilter] = useState(\"N'importe quand\");\r\n  const [isDateExpanded, setIsDateExpanded] = useState(true);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n\r\n  // Fetch job listings from backend\r\n  useEffect(() => {\r\n    const fetchJobListings = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get('/alloffre');\r\n        \r\n        // Transform data to match our component's expected format\r\n        const formattedJobs = response.data.map(job => ({\r\n          id: job._id,\r\n          title: job.titre,\r\n          location: job.lieu,\r\n          date: formatDate(new Date(job.date))\r\n        }));\r\n        \r\n        setJobListings(formattedJobs);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error(\"Error fetching job listings:\", err);\r\n        setError(\"Une erreur s'est produite lors du chargement des offres d'emploi.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobListings();\r\n  }, []);\r\n\r\n  // Helper function to format date as DD/MM/YYYY\r\n  const formatDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  // Function to toggle date filter section\r\n  const toggleDateSection = () => {\r\n    setIsDateExpanded(!isDateExpanded);\r\n  };\r\n\r\n  // Reset all filters\r\n  const resetFilters = () => {\r\n    setDateFilter(\"N'importe quand\");\r\n    setSearchKeyword(\"\");\r\n    setFilteredJobs([]);\r\n    setHasSearched(false);\r\n  };\r\n\r\n  // Function for exact match search\r\n  const exactMatch = (text, query) => {\r\n    if (!query || query.trim() === \"\") return true;\r\n\r\n    const formattedText = text.toLowerCase();\r\n    const formattedQuery = query.toLowerCase().trim();\r\n\r\n    const queryWords = formattedQuery.split(/\\s+/);\r\n\r\n    return queryWords.every((word) => {\r\n      const regex = new RegExp(`\\\\b${word}\\\\b`, \"i\");\r\n      return regex.test(formattedText);\r\n    });\r\n  };\r\n\r\n  // Apply filters function\r\n  const applyFilters = () => {\r\n    let results = [...jobListings];\r\n    \r\n    if (searchKeyword && searchKeyword.trim() !== \"\") {\r\n      results = results.filter((job) => exactMatch(job.title, searchKeyword));\r\n    }\r\n\r\n    if (dateFilter === \"Sous 30 jours\") {\r\n      const today = new Date();\r\n      const thirtyDaysAgo = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 30);\r\n\r\n      results = results.filter((job) => {\r\n        const [day, month, year] = job.date.split(\"/\");\r\n        const jobDate = new Date(year, month - 1, day);\r\n\r\n        return jobDate >= thirtyDaysAgo && jobDate <= today;\r\n      });\r\n    }\r\n\r\n    setFilteredJobs(results);\r\n    setHasSearched(true);\r\n  };\r\n\r\n  // Handle search form submission\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    applyFilters();\r\n  };\r\n\r\n  // Handle date filter change\r\n  const handleDateFilterChange = (newDateFilter) => {\r\n    setDateFilter(newDateFilter);\r\n    // This will trigger the useEffect to apply filters\r\n  };\r\n\r\n  // Apply filters when dateFilter changes\r\n  useEffect(() => {\r\n    if (jobListings.length > 0) {\r\n      applyFilters();\r\n    }\r\n  }, [dateFilter, jobListings]);\r\n\r\n  // Open application modal\r\n  const openApplicationModal = (job) => {\r\n    setSelectedJob(job);\r\n    setIsModalOpen(true);\r\n    setFileError(\"\"); // Reset file error when opening modal\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedJob(null);\r\n    setFileName(\"Aucun fichier s√©lectionn√©\");\r\n    setFileError(\"\"); // Reset file error when closing modal\r\n  };\r\n\r\n  // Handle file upload with PDF validation\r\n  const handleFileChange = (e) => {\r\n    setFileError(\"\"); // Reset error message\r\n    \r\n    if (e.target.files.length > 0) {\r\n      const files = Array.from(e.target.files);\r\n      \r\n      // Check if all files are PDFs\r\n      const nonPdfFiles = files.filter(file => file.type !== 'application/pdf');\r\n      \r\n      if (nonPdfFiles.length > 0) {\r\n        setFileError(\"Erreur: Veuillez ne s√©lectionner que des fichiers PDF.\");\r\n        e.target.value = ''; // Clear the file input\r\n        setFileName(\"Aucun fichier s√©lectionn√©\");\r\n        return;\r\n      }\r\n      \r\n      const fileNames = files.map(file => file.name).join(\", \");\r\n      setFileName(fileNames);\r\n    } else {\r\n      setFileName(\"Aucun fichier s√©lectionn√©\");\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (fileName === \"Aucun fichier s√©lectionn√©\") {\r\n      setFileError(\"Erreur: Veuillez t√©l√©charger votre CV et lettre de motivation.\");\r\n      return;\r\n    }\r\n    \r\n    // Here you would typically submit the form data to your backend\r\n    alert(\"Candidature soumise avec succ√®s!\");\r\n    closeModal();\r\n  };\r\n\r\n  // Trigger the file input when clicking on the upload area\r\n  const triggerFileInput = () => {\r\n    document.getElementById(\"file-upload-input\").click();\r\n  };\r\n\r\n  const displayedJobs = hasSearched ? filteredJobs : jobListings;\r\n\r\n  // Count jobs that are within 30 days\r\n  const countJobsWithin30Days = () => {\r\n    const today = new Date();\r\n    const thirtyDaysAgo = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 30);\r\n\r\n    return jobListings.filter((job) => {\r\n      const [day, month, year] = job.date.split(\"/\");\r\n      const jobDate = new Date(year, month - 1, day);\r\n      return jobDate >= thirtyDaysAgo && jobDate <= today;\r\n    }).length;\r\n  };\r\n\r\n  const jobsWithin30DaysCount = countJobsWithin30Days();\r\n\r\n  return (\r\n    <div className=\"careers-page\">\r\n      <Navbar />\r\n      \r\n      {/* Banner and search bar */}\r\n      <div className=\"banner\">\r\n        <div className=\"search-container\">\r\n          <form onSubmit={handleSearch}>\r\n            <div className=\"search-bar\">\r\n              <div className=\"search-input-container\">\r\n                <span className=\"search-icon\">üîç</span>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"Saisissez un titre de poste ou un mot-cl√©\"\r\n                  value={searchKeyword}\r\n                  onChange={(e) => setSearchKeyword(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"search-button\">\r\n                Rechercher\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n        <div className=\"filters-container\">\r\n          {/* Filters section */}\r\n          <div className=\"filters-header\">\r\n            <h2>Filtres</h2>\r\n            <button className=\"reset-button\" onClick={resetFilters}>\r\n              R√©initialiser\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"filter-section\">\r\n            <div className=\"filter-header\" onClick={toggleDateSection}>\r\n              <h3>Date de publication</h3>\r\n              <span className={`arrow ${isDateExpanded ? \"expanded\" : \"\"}`}>\r\n                ‚ñº\r\n              </span>\r\n            </div>\r\n\r\n            {isDateExpanded && (\r\n              <div className=\"filter-options\">\r\n                <label className=\"filter-radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"dateFilter\"\r\n                    checked={dateFilter === \"Sous 30 jours\"}\r\n                    onChange={() => handleDateFilterChange(\"Sous 30 jours\")}\r\n                  />\r\n                  Sous 30 jours ({jobsWithin30DaysCount})\r\n                </label>\r\n                <label className=\"filter-radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"dateFilter\"\r\n                    checked={dateFilter === \"N'importe quand\"}\r\n                    onChange={() => handleDateFilterChange(\"N'importe quand\")}\r\n                  />\r\n                  N'importe quand ({jobListings.length})\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"job-listings-container\">\r\n          <h1>Postes √† pourvoir actuellement</h1>\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading-state\">\r\n              <p>Chargement des offres d'emploi...</p>\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"error-state\">\r\n              <p>{error}</p>\r\n              <button \r\n                className=\"retry-button\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                R√©essayer\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {hasSearched && (\r\n                <div className=\"search-results-info\">\r\n                  <p>\r\n                    {filteredJobs.length} offre(s) d'emploi trouv√©e(s){\" \"}\r\n                    {searchKeyword && `pour \"${searchKeyword}\"`}\r\n                    {dateFilter === \"Sous 30 jours\" && \" des 30 derniers jours\"}\r\n                  </p>\r\n                  {filteredJobs.length === 0 && (\r\n                    <p className=\"no-results\">\r\n                      Aucun r√©sultat trouv√©. Veuillez essayer d'autres crit√®res de\r\n                      recherche.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"job-cards\">\r\n                {displayedJobs.length === 0 && !isLoading ? (\r\n                  <p className=\"no-jobs\">Aucune offre d'emploi disponible pour le moment.</p>\r\n                ) : (\r\n                  displayedJobs.map((job) => (\r\n                    <div className=\"job-card\" key={job.id}>\r\n                      <div className=\"job-card-content\">\r\n                        <h3 className=\"job-title\">{job.title}</h3>\r\n                        <div className=\"job-details\">\r\n                          <p className=\"job-location\">{job.location}</p>\r\n                          <p className=\"job-date\">{job.date}</p>\r\n                        </div>\r\n                      </div>\r\n                      <button \r\n                        className=\"postuler-button\"\r\n                        onClick={() => openApplicationModal(job)}\r\n                      >\r\n                        Postuler\r\n                      </button>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for job application */}\r\n      {isModalOpen && selectedJob && (\r\n        <div className=\"modal-overlay\" onClick={closeModal}>\r\n          <div \r\n            className=\"modal-content\" \r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <button className=\"modal-close\" onClick={closeModal}>√ó</button>\r\n            <div className=\"modal-title\">\r\n              <h2>Candidature pour {selectedJob.title}</h2>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-section\">\r\n                <label>Nom complet</label> \r\n                <div className=\"name-inputs\">\r\n                  <input type=\"text\" placeholder=\"Pr√©nom\" required />\r\n                  <input type=\"text\" placeholder=\"Nom de famille\" required />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <label>Adresse actuelle</label>\r\n                <input type=\"text\" placeholder=\"Adresse\" className=\"mb-3\" required />\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <label>Adresse E-mail</label>\r\n                <input type=\"email\" placeholder=\"Pr√©nom@gmail.com\" required />\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <label>Num√©ro de t√©l√©phone</label>\r\n                <div className=\"phone-input\">\r\n                  <select className=\"country-code\" required>\r\n                    <option value=\"+216\">Tunisie (+216)</option>\r\n                    <option value=\"+33\">France (+33)</option>\r\n                    <option value=\"+212\">Maroc (+212)</option>\r\n                    <option value=\"+213\">Alg√©rie (+213)</option>\r\n                    <option value=\"+32\">Belgique (+32)</option>\r\n                    <option value=\"+1\">Canada/USA (+1)</option>\r\n                    <option value=\"+41\">Suisse (+41)</option>\r\n                    <option value=\"\">Autre</option>\r\n                  </select>\r\n                  <input type=\"text\" placeholder=\"Num√©ro de t√©l√©phone\" required />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <label>D√©posez votre CV et lettre de motivation (format PDF uniquement)</label>\r\n                <div className={`file-upload ${fileError ? \"file-error\" : \"\"}`} onClick={triggerFileInput}>\r\n                  <input \r\n                    type=\"file\" \r\n                    id=\"file-upload-input\" \r\n                    multiple \r\n                    accept=\".pdf,application/pdf\" \r\n                    onChange={handleFileChange}\r\n                  />\r\n                  <div className=\"file-upload-content\">\r\n                    <span className=\"upload-icon\">üìÅ</span>\r\n                    <span className=\"browse-text\">Parcourir les fichiers PDF</span>\r\n                    <p className=\"selected-files\">{fileName}</p>\r\n                    {fileError && <p className=\"error-message\">{fileError}</p>}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"submit-application\">\r\n                Postuler\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        * {\r\n          margin: 0;\r\n          padding: 0;\r\n          box-sizing: border-box;\r\n          font-family: Arial, sans-serif;\r\n        }\r\n        \r\n        .careers-page {\r\n          width: 100%;\r\n          background-color: #f5f5f5;\r\n          min-height: 100vh;\r\n        }\r\n        \r\n        .banner {\r\n          width: 100%;\r\n          height: 380px;\r\n          background-image: url('https://ubci.csod.com/clientimg/ubci/careersite/banner/Backgroundpicture_6372a143-698a-40dd-99a1-fcbf9c1d104e.jpg');\r\n          background-size: cover;\r\n          background-position: center;\r\n          position: relative;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        \r\n        .banner::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: rgba(0, 0, 0, 0.3);\r\n        }\r\n        \r\n        .search-container {\r\n          width: 100%;\r\n          max-width: 800px;\r\n          padding: 0 20px;\r\n          z-index: 10;\r\n        }\r\n        \r\n        .search-bar {\r\n          display: flex;\r\n          background: white;\r\n          border-radius: 4px;\r\n          overflow: hidden;\r\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n        \r\n        .search-input-container {\r\n          flex: 1;\r\n          display: flex;\r\n          align-items: center;\r\n          padding: 0 15px;\r\n        }\r\n        \r\n        .search-icon {\r\n          margin-right: 10px;\r\n          color: #777;\r\n        }\r\n        \r\n        .search-input {\r\n          flex: 1;\r\n          padding: 15px 0;\r\n          border: none;\r\n          font-size: 16px;\r\n          outline: none;\r\n        }\r\n        \r\n        .search-input:focus {\r\n          outline: none;\r\n          box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n        }\r\n        \r\n        .search-button {\r\n          padding: 0 30px;\r\n          background-color: #0052cc;\r\n          color: white;\r\n          border: none;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n        \r\n        .search-button:hover {\r\n          background-color: #003d99;\r\n        }\r\n        \r\n        .content-container {\r\n          display: flex;\r\n          max-width: 1200px;\r\n          margin: 30px auto;\r\n          padding: 0 20px;\r\n        }\r\n        \r\n        .filters-container {\r\n          width: 300px;\r\n          background-color: white;\r\n          border-radius: 4px;\r\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n          padding: 15px;\r\n          margin-right: 20px;\r\n          height: fit-content;\r\n        }\r\n        \r\n        .filters-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        .filters-header h2 {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: #333;\r\n        }\r\n        \r\n        .reset-button {\r\n          color: #1a73e8;\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .filter-section {\r\n          margin-bottom: 15px;\r\n          border-bottom: 1px solid #e0e0e0;\r\n          padding-bottom: 15px;\r\n        }\r\n        \r\n        .filter-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          cursor: pointer;\r\n        }\r\n        \r\n        .filter-header h3 {\r\n          font-size: 16px;\r\n          font-weight: normal;\r\n          color: #333;\r\n        }\r\n        \r\n        .arrow {\r\n          font-size: 12px;\r\n          transition: transform 0.3s;\r\n        }\r\n        \r\n        .arrow.expanded {\r\n          transform: rotate(180deg);\r\n        }\r\n        \r\n        .filter-options {\r\n          margin-top: 10px;\r\n        }\r\n        \r\n        .filter-radio {\r\n          display: flex;\r\n          align-items: center;\r\n          margin-bottom: 8px;\r\n          font-size: 14px;\r\n          color: #555;\r\n        }\r\n        \r\n        .filter-radio input {\r\n          margin-right: 8px;\r\n        }\r\n        \r\n        .job-listings-container {\r\n          flex: 1;\r\n        }\r\n        \r\n        .job-listings-container h1 {\r\n          font-size: 22px;\r\n          color: #333;\r\n          margin-bottom: 20px;\r\n          font-weight: normal;\r\n        }\r\n        \r\n        .search-results-info {\r\n          margin-bottom: 15px;\r\n          font-size: 14px;\r\n          color: #555;\r\n        }\r\n        \r\n        .no-results {\r\n          color: #d32f2f;\r\n          margin-top: 5px;\r\n        }\r\n        \r\n        .job-cards {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        \r\n        .job-card {\r\n          background-color: white;\r\n          border-radius: 4px;\r\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n          padding: 15px;\r\n          margin-bottom: 10px;\r\n          cursor: pointer;\r\n          transition: transform 0.2s;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n        \r\n        .job-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\r\n        }\r\n        \r\n        .job-title {\r\n          color: #1a73e8;\r\n          font-size: 16px;\r\n          margin-bottom: 8px;\r\n          font-weight: normal;\r\n        }\r\n        \r\n        .job-details {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        \r\n        .job-location, .job-date {\r\n          font-size: 14px;\r\n          color: #555;\r\n          margin-bottom: 3px;\r\n        }\r\n\r\n        .postuler-button {\r\n          background-color:#2563eb;\r\n          color: white;\r\n          border: none;\r\n          padding: 10px 20px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n\r\n        .postuler-button:hover {\r\n          background-color: #2563eb;\r\n        }\r\n\r\n        .loading-state, .error-state, .no-jobs {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          flex-direction: column;\r\n          padding: 40px 0;\r\n          color: #555;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .error-state {\r\n          color: #d32f2f;\r\n        }\r\n\r\n        .retry-button {\r\n          margin-top: 15px;\r\n          padding: 8px 16px;\r\n          background-color: #1a73e8;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n\r\n        .retry-button:hover {\r\n          background-color: #0d47a1;\r\n        }\r\n\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          z-index: 1000;\r\n        }\r\n\r\n        .modal-content {\r\n          background: white;\r\n          padding: 30px;\r\n          border-radius: 8px;\r\n          width: 100%;\r\n          max-width: 600px;\r\n          max-height: 80vh;\r\n          overflow-y: auto;\r\n          position: relative;\r\n        }\r\n\r\n        .modal-close {\r\n          position: absolute;\r\n          top: 10px;\r\n          right: 10px;\r\n          font-size: 24px;\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          z-index: 1001;\r\n        }\r\n\r\n        .modal-title {\r\n          text-align: center;\r\n          margin-bottom: 25px;\r\n          padding-bottom: 15px;\r\n          \r\n        }\r\n\r\n        .modal-title h2 {\r\n          font-size: 22px;\r\n          color: #1a73e8;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .form-section {\r\n          margin-bottom: 25px;\r\n        }\r\n\r\n        .form-section label {\r\n          display: block;\r\n          margin-bottom: 10px;\r\n          font-weight: bold;\r\n          color: #333;\r\n        }\r\n\r\n        .form-section input,\r\n        .form-section select {\r\n          width: 100%;\r\n          padding: 12px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .form-section input:focus,\r\n        .form-section select:focus {\r\n          outline: none;\r\n          border-color: #1a73e8;\r\n          box-shadow: 0 0 0 2px rgba(26, 115, 232, 0.2);\r\n        }\r\n\r\n        .name-inputs,\r\n        .address-details,\r\n        .phone-input {\r\n          display: flex;\r\n          gap: 15px;\r\n        }\r\n\r\n        .name-inputs input,\r\n        .address-details input,\r\n        .phone-input input,\r\n        .phone-input select {\r\n          flex: 1;\r\n        }\r\n\r\n        .country-code {\r\n          width: 40%;\r\n          flex: 0.4;\r\n        }\r\n\r\n        .file-upload {\r\n          border: 2px dashed #1a73e8;\r\n          padding: 20px;\r\n          text-align: center;\r\n          cursor: pointer;\r\n          border-radius: 4px;\r\n          background-color: #f5f9ff;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .file-upload:hover {\r\n          background-color: #e8f1fe;\r\n          border-color: #0d47a1;\r\n        }\r\n\r\n        .file-upload.file-error {\r\n          border-color: #d32f2f;\r\n          background-color: #fff5f5;\r\n        }\r\n\r\n        .file-upload input[type=\"file\"] {\r\n          display: none;\r\n        }\r\n\r\n        .file-upload-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 10px;\r\n        }\r\n\r\n        .upload-icon {\r\n          font-size: 24px;\r\n          color: #1a73e8;\r\n        }\r\n\r\n        .browse-text {\r\n          color: #1a73e8;\r\n          font-weight: bold;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .selected-files {\r\n          font-size: 14px;\r\n          color: #555;\r\n          margin-top: 5px;\r\n          word-break: break-word;\r\n        }\r\n\r\n        .error-message {\r\n          color: #d32f2f;\r\n          font-size: 14px;\r\n          margin-top: 5px;\r\n        }\r\n\r\n        .submit-application {\r\n          width: 100%;\r\n          padding: 15px;\r\n          background-color: #1a73e8;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .submit-application:hover {\r\n          background-color: #0d47a1;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .search-bar {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .search-button {\r\n            padding: 15px 0;\r\n          }\r\n          \r\n          .content-container {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .filters-container {\r\n            width: 100%;\r\n            margin-right: 0;\r\n            margin-bottom: 20px;\r\n          }\r\n          \r\n          .job-listings-container {\r\n            width: 100%;\r\n          }\r\n\r\n          .name-inputs,\r\n          .address-details,\r\n          .phone-input {\r\n            flex-direction: column;\r\n            gap: 10px;\r\n          }\r\n\r\n          .modal-content {\r\n            padding: 20px;\r\n            max-height: 90vh;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postule;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Employe.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signup.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\TestForm.js",["236","237","238","239","240","241"],"import React from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\n\r\nconst TestForm = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"screen\">\r\n        <div className=\"screen__content\">\r\n          <form className=\"login\">\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-user\"></i>\r\n              <input type=\"text\" className=\"login__input\" placeholder=\"User name / Email\" />\r\n            </div>\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-lock\"></i>\r\n              <input type=\"password\" className=\"login__input\" placeholder=\"Password\" />\r\n            </div>\r\n            <button className=\"button login__submit\">\r\n              <span className=\"button__text\">Log In Now</span>\r\n              <i className=\"button__icon fas fa-chevron-right\"></i>\r\n            </button>\r\n          </form>\r\n          <div className=\"social-login\">\r\n            <h3>log in via</h3>\r\n            <div className=\"social-icons\">\r\n              <a href=\"#\" className=\"social-login__icon fab fa-instagram\"></a>\r\n              <a href=\"#\" className=\"social-login__icon fab fa-facebook\"></a>\r\n              <a href=\"#\" className=\"social-login__icon fab fa-twitter\"></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"screen__background\">\r\n          <span className=\"screen__background__shape screen__background__shape4\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape3\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape2\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape1\"></span>\r\n        </div>\r\n      </div>\r\n      <style>\r\n        {`\r\n          @import url('https://fonts.googleapis.com/css?family=Raleway:400,700');\r\n          * {\r\n            box-sizing: border-box;\r\n            margin: 0;\r\n            padding: 0;\r\n            font-family: Raleway, sans-serif;\r\n          }\r\n          body {\r\n            background: linear-gradient(90deg, #C7C5F4, #776BCC);\r\n          }\r\n          .container {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            min-height: 100vh;\r\n          }\r\n          .screen {\r\n            background: linear-gradient(90deg, #5D54A4, #7C78B8);\r\n            position: relative;\r\n            height: 600px;\r\n            width: 360px;\r\n            box-shadow: 0px 0px 24px #5C5696;\r\n          }\r\n          .screen__content {\r\n            z-index: 1;\r\n            position: relative;\r\n            height: 100%;\r\n          }\r\n          .login {\r\n            width: 320px;\r\n            padding: 30px;\r\n            padding-top: 156px;\r\n          }\r\n          .login__field {\r\n            padding: 20px 0px;\r\n            position: relative;\r\n          }\r\n          .login__icon {\r\n            position: absolute;\r\n            top: 30px;\r\n            color: #7875B5;\r\n          }\r\n          .login__input {\r\n            border: none;\r\n            border-bottom: 2px solid #D1D1D4;\r\n            background: none;\r\n            padding: 10px;\r\n            padding-left: 24px;\r\n            font-weight: 700;\r\n            width: 75%;\r\n            transition: .2s;\r\n          }\r\n          .login__input:active,\r\n          .login__input:focus,\r\n          .login__input:hover {\r\n            outline: none;\r\n            border-bottom-color: #6A679E;\r\n          }\r\n          .login__submit {\r\n            background: #fff;\r\n            font-size: 14px;\r\n            margin-top: 30px;\r\n            padding: 16px 20px;\r\n            border-radius: 26px;\r\n            border: 1px solid #D4D3E8;\r\n            text-transform: uppercase;\r\n            font-weight: 700;\r\n            display: flex;\r\n            align-items: center;\r\n            width: 100%;\r\n            color: #4C489D;\r\n            box-shadow: 0px 2px 2px #5C5696;\r\n            cursor: pointer;\r\n            transition: .2s;\r\n          }\r\n          .login__submit:active,\r\n          .login__submit:focus,\r\n          .login__submit:hover {\r\n            border-color: #6A679E;\r\n            outline: none;\r\n          }\r\n          .button__icon {\r\n            font-size: 24px;\r\n            margin-left: auto;\r\n            color: #7875B5;\r\n          }\r\n          .social-login {\r\n            position: absolute;\r\n            height: 140px;\r\n            width: 160px;\r\n            text-align: center;\r\n            bottom: 0px;\r\n            right: 0px;\r\n            color: #fff;\r\n          }\r\n          .social-icons {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n          }\r\n          .social-login__icon {\r\n            padding: 20px 10px;\r\n            color: #fff;\r\n            text-decoration: none;\r\n            text-shadow: 0px 0px 8px #7875B5;\r\n          }\r\n          .social-login__icon:hover {\r\n            transform: scale(1.5);\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestForm;\r\n","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signin.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Maps.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Dashboard.js",["242"],"import React from \"react\";\r\nimport HeaderStats from \"components/Headers/HeaderStats\";\r\n// components\r\nimport CardLineChart from \"components/Cards/CardLineChart.js\";\r\nimport CardBarChart from \"components/Cards/CardBarChart.js\";\r\nimport CardPageVisits from \"components/Cards/CardPageVisits.js\";\r\nimport CardSocialTraffic from \"components/Cards/CardSocialTraffic.js\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <>\r\n\r\n    <div style={{ backgroundColor: \"#49babd\" }}>\r\n     {/* <HeaderStats />*/}\r\n      <div className=\"flex flex-wrap\">\r\n        <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\r\n          <CardLineChart />\r\n        </div>\r\n        <div className=\"w-full xl:w-4/12 px-4\">\r\n          <CardBarChart />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-wrap mt-4\">\r\n        <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\r\n          <CardPageVisits />\r\n        </div>\r\n        <div className=\"w-full xl:w-4/12 px-4\">\r\n          <CardSocialTraffic />\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Tables.js",["243"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n  Search,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  Filter,\r\n  Eye,\r\n  Check,\r\n  X,\r\n  AlertCircle,\r\n  ThumbsUp,\r\n  ThumbsDown,\r\n} from \"lucide-react\";\r\n\r\n// CSS encapsul√© avec pr√©fixe \"gdp-\" (Gestion Demandes Personnel)\r\nconst encapsulatedStyles = `\r\n  .gdp-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n  \r\n  .gdp-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gdp-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gdp-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .gdp-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gdp-tab-button {\r\n    padding: 0.5rem 1rem;\r\n    border-bottom: 2px solid transparent;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gdp-tab-button.gdp-active {\r\n    border-bottom-color: #14b8a6;\r\n    color: #14b8a6;\r\n  }\r\n  \r\n  .gdp-tab-button:hover:not(.gdp-active) {\r\n    color: #374151;\r\n  }\r\n  \r\n  .gdp-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gdp-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gdp-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gdp-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gdp-tr {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .gdp-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gdp-department-badge {\r\n    background-color: #e6fffa;\r\n    color: #047857;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gdp-type-badge {\r\n    background-color: #ede9fe;\r\n    color: #5b21b6;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gdp-status-badge {\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    width: fit-content;\r\n  }\r\n  \r\n  .gdp-status-completed {\r\n    background-color: #dcfce7;\r\n    color: #166534;\r\n  }\r\n  \r\n  .gdp-status-pending {\r\n    background-color: #fef3c7;\r\n    color: #92400e;\r\n  }\r\n  \r\n  .gdp-status-rejected {\r\n    background-color: #fee2e2;\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gdp-expanded-row {\r\n    background-color: #f8fafc;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gdp-expanded-content {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .gdp-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .gdp-page-button {\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.875rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gdp-page-button.gdp-active {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    border-color: #14b8a6;\r\n  }\r\n  \r\n  .gdp-page-button:hover:not(.gdp-active) {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gdp-form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gdp-form-label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gdp-form-input {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gdp-form-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gdp-form-select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gdp-form-select:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gdp-expanded-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    color: #1f2937;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gdp-detail-row {\r\n    display: flex;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    padding-bottom: 0.75rem;\r\n    margin-bottom: 0.75rem;\r\n  }\r\n  \r\n  .gdp-detail-label {\r\n    width: 33.333333%;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gdp-detail-value {\r\n    flex: 1;\r\n    color: #4b5563;\r\n  }\r\n  \r\n  .gdp-expander-icon {\r\n    color: #6b7280;\r\n    transition: transform 0.2s ease;\r\n  }\r\n  \r\n  /* Nouveaux styles pour les boutons d'action et les toasts */\r\n  .gdp-action-buttons {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .gdp-btn {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .gdp-btn-success {\r\n    background-color: #10b981;\r\n    color: white;\r\n  }\r\n  \r\n  .gdp-btn-success:hover {\r\n    background-color: #059669;\r\n  }\r\n  \r\n  .gdp-btn-danger {\r\n    background-color: #ef4444;\r\n    color: white;\r\n  }\r\n  \r\n  .gdp-btn-danger:hover {\r\n    background-color: #dc2626;\r\n  }\r\n  \r\n  .gdp-btn-disabled {\r\n    background-color: #d1d5db;\r\n    color: #6b7280;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  /* Toast notifications */\r\n  .gdp-toast-container {\r\n    position: fixed;\r\n    bottom: 2rem;\r\n    right: 2rem;\r\n    z-index: 50;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .gdp-toast {\r\n    min-width: 300px;\r\n    padding: 1rem;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75rem;\r\n    animation: gdp-slide-in 0.3s ease, gdp-fade-out 0.5s ease 4.5s forwards;\r\n  }\r\n  \r\n  .gdp-toast-success {\r\n    background-color: #dcfce7;\r\n    border-left: 4px solid #10b981;\r\n    color: #166534;\r\n  }\r\n  \r\n  .gdp-toast-error {\r\n    background-color: #fee2e2;\r\n    border-left: 4px solid #ef4444;\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gdp-toast-info {\r\n    background-color: #dbeafe;\r\n    border-left: 4px solid #3b82f6;\r\n    color: #1e40af;\r\n  }\r\n  \r\n  @keyframes gdp-slide-in {\r\n    from {\r\n      transform: translateX(100%);\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      transform: translateX(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  @keyframes gdp-fade-out {\r\n    from {\r\n      opacity: 1;\r\n    }\r\n    to {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\n// Composant Toast\r\nconst Toast = ({ type, message, onClose }) => {\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onClose();\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n\r\n  let icon;\r\n  let toastClass;\r\n\r\n  switch (type) {\r\n    case \"success\":\r\n      icon = <Check size={20} />;\r\n      toastClass = \"gdp-toast-success\";\r\n      break;\r\n    case \"error\":\r\n      icon = <X size={20} />;\r\n      toastClass = \"gdp-toast-error\";\r\n      break;\r\n    default:\r\n      icon = <AlertCircle size={20} />;\r\n      toastClass = \"gdp-toast-info\";\r\n  }\r\n\r\n  return (\r\n    <div className={`gdp-toast ${toastClass}`}>\r\n      {icon}\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Tables() {\r\n  // Donn√©es fictives des demandes\r\n  const [demandes, setDemandes] = useState([\r\n    {\r\n      id: 1,\r\n      employeId: 1,\r\n      nom: \"Dupont\",\r\n      prenom: \"Jean\",\r\n      departement: \"Marketing\",\r\n      typeDemande: \"Demande de cong√©\",\r\n      statut: \"Compl√©t√©\",\r\n      dateDemande: \"12/03/2025\",\r\n      dateDebut: \"20/04/2025\",\r\n      dateFin: \"30/04/2025\",\r\n      motif: \"Vacances annuelles\",\r\n      commentaire:\r\n        \"Je souhaite prendre mes cong√©s annuels pour partir en voyage avec ma famille.\",\r\n      reponse: \"Demande approuv√©e. Bon cong√© !\",\r\n    },\r\n    {\r\n      id: 2,\r\n      employeId: 2,\r\n      nom: \"Lambert\",\r\n      prenom: \"Marie\",\r\n      departement: \"RH\",\r\n      typeDemande: \"Demande d'avance sur salaire\",\r\n      statut: \"En attente\",\r\n      dateDemande: \"05/04/2025\",\r\n      montant: \"1500\",\r\n      motif: \"Achat d'√©quipement\",\r\n      commentaire:\r\n        \"J'ai besoin d'une avance pour l'achat d'un ordinateur n√©cessaire √† mon travail √† distance.\",\r\n      reponse: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      employeId: 3,\r\n      nom: \"Martin\",\r\n      prenom: \"Paul\",\r\n      departement: \"Technique\",\r\n      typeDemande: \"Demande de formation\",\r\n      statut: \"Refus√©\",\r\n      dateDemande: \"28/03/2025\",\r\n      formation: \"D√©veloppement React avanc√©\",\r\n      cout: \"2500\",\r\n      dateDebut: \"15/05/2025\",\r\n      dateFin: \"20/05/2025\",\r\n      motif: \"Am√©lioration des comp√©tences\",\r\n      commentaire:\r\n        \"Cette formation me permettrait d'am√©liorer mes comp√©tences en React pour les projets √† venir.\",\r\n      reponse:\r\n        \"Budget formation √©puis√© pour ce trimestre. Veuillez r√©essayer plus tard.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      employeId: 4,\r\n      nom: \"Bernard\",\r\n      prenom: \"Sophie\",\r\n      departement: \"Finance\",\r\n      typeDemande: \"Demande de cong√©\",\r\n      statut: \"Compl√©t√©\",\r\n      dateDemande: \"01/04/2025\",\r\n      dateDebut: \"12/04/2025\",\r\n      dateFin: \"14/04/2025\",\r\n      motif: \"Raison familiale\",\r\n      commentaire: \"Besoin de m'absenter pour un √©v√©nement familial important.\",\r\n      reponse: \"Demande approuv√©e.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      employeId: 1,\r\n      nom: \"Dupont\",\r\n      prenom: \"Jean\",\r\n      departement: \"Marketing\",\r\n      typeDemande: \"Demande de formation\",\r\n      statut: \"En attente\",\r\n      dateDemande: \"08/04/2025\",\r\n      formation: \"Marketing digital\",\r\n      cout: \"1800\",\r\n      dateDebut: \"10/05/2025\",\r\n      dateFin: \"12/05/2025\",\r\n      motif: \"Formation professionnelle\",\r\n      commentaire:\r\n        \"Cette formation me permettrait de mieux comprendre les nouvelles strat√©gies de marketing digital.\",\r\n      reponse: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [demandesAffichees, setDemandesAffichees] = useState([]);\r\n  const [recherche, setRecherche] = useState(\"\");\r\n  const [filtreType, setFiltreType] = useState(\"tous\");\r\n  const [filtreStatut, setFiltreStatut] = useState(\"tous\");\r\n  const [expandedRowId, setExpandedRowId] = useState(null);\r\n  \r\n  // √âtat pour les toasts\r\n  const [toasts, setToasts] = useState([]);\r\n\r\n  // Filtrer les demandes en fonction de la recherche et des filtres\r\n  useEffect(() => {\r\n    let filtres = [...demandes];\r\n\r\n    // Filtre par type de demande\r\n    if (filtreType !== \"tous\") {\r\n      filtres = filtres.filter((d) => d.typeDemande === filtreType);\r\n    }\r\n\r\n    // Filtre par statut\r\n    if (filtreStatut !== \"tous\") {\r\n      filtres = filtres.filter((d) => d.statut === filtreStatut);\r\n    }\r\n\r\n    // Filtre par recherche (nom ou ID)\r\n    if (recherche !== \"\") {\r\n      filtres = filtres.filter((demande) => {\r\n        const searchTerm = recherche.toLowerCase();\r\n        return (\r\n          demande.nom.toLowerCase().includes(searchTerm) ||\r\n          demande.prenom.toLowerCase().includes(searchTerm) ||\r\n          demande.employeId.toString().includes(searchTerm)\r\n        );\r\n      });\r\n    }\r\n\r\n    setDemandesAffichees(filtres);\r\n  }, [recherche, filtreType, filtreStatut, demandes]);\r\n\r\n  // Basculer l'affichage des d√©tails d'une demande\r\n  const toggleExpandedRow = (id) => {\r\n    setExpandedRowId(expandedRowId === id ? null : id);\r\n  };\r\n\r\n  // Fonction pour ajouter un toast\r\n  const addToast = (type, message) => {\r\n    const id = Date.now();\r\n    setToasts((prevToasts) => [...prevToasts, { id, type, message }]);\r\n  };\r\n\r\n  // Fonction pour supprimer un toast\r\n  const removeToast = (id) => {\r\n    setToasts((prevToasts) => prevToasts.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  // Fonction pour accepter une demande\r\n  const accepterDemande = (e, demande) => {\r\n    e.stopPropagation(); // Emp√™cher la propagation du clic\r\n    \r\n    // Mettre √† jour l'√©tat de la demande\r\n    const demandesUpdated = demandes.map((d) => {\r\n      if (d.id === demande.id) {\r\n        return {\r\n          ...d,\r\n          statut: \"Compl√©t√©\",\r\n          reponse: \"Demande approuv√©e le \" + new Date().toLocaleDateString(),\r\n        };\r\n      }\r\n      return d;\r\n    });\r\n    \r\n    setDemandes(demandesUpdated);\r\n    \r\n    // Afficher le toast\r\n    addToast(\"success\", `Demande de ${demande.prenom} ${demande.nom} accept√©e avec succ√®s`);\r\n  };\r\n\r\n  // Fonction pour refuser une demande\r\n  const refuserDemande = (e, demande) => {\r\n    e.stopPropagation(); // Emp√™cher la propagation du clic\r\n    \r\n    // Mettre √† jour l'√©tat de la demande\r\n    const demandesUpdated = demandes.map((d) => {\r\n      if (d.id === demande.id) {\r\n        return {\r\n          ...d,\r\n          statut: \"Refus√©\",\r\n          reponse: \"Demande refus√©e le \" + new Date().toLocaleDateString(),\r\n        };\r\n      }\r\n      return d;\r\n    });\r\n    \r\n    setDemandes(demandesUpdated);\r\n    \r\n    // Afficher le toast\r\n    addToast(\"error\", `Demande de ${demande.prenom} ${demande.nom} refus√©e`);\r\n  };\r\n\r\n  // Rendu des d√©tails du formulaire de demande\r\n  const renderFormDetails = (demande) => {\r\n    switch (demande.typeDemande) {\r\n      case \"Demande de cong√©\":\r\n        return (\r\n          <>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Date de d√©but:</span>\r\n              <span className=\"gdp-detail-value\">{demande.dateDebut}</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Date de fin:</span>\r\n              <span className=\"gdp-detail-value\">{demande.dateFin}</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Motif:</span>\r\n              <span className=\"gdp-detail-value\">{demande.motif}</span>\r\n            </div>\r\n          </>\r\n        );\r\n      case \"Demande d'avance sur salaire\":\r\n        return (\r\n          <>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Montant demand√©:</span>\r\n              <span className=\"gdp-detail-value\">{demande.montant} ‚Ç¨</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Motif:</span>\r\n              <span className=\"gdp-detail-value\">{demande.motif}</span>\r\n            </div>\r\n          </>\r\n        );\r\n      case \"Demande de formation\":\r\n        return (\r\n          <>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Formation:</span>\r\n              <span className=\"gdp-detail-value\">{demande.formation}</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Co√ªt:</span>\r\n              <span className=\"gdp-detail-value\">{demande.cout} ‚Ç¨</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Date de d√©but:</span>\r\n              <span className=\"gdp-detail-value\">{demande.dateDebut}</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Date de fin:</span>\r\n              <span className=\"gdp-detail-value\">{demande.dateFin}</span>\r\n            </div>\r\n            <div className=\"gdp-detail-row\">\r\n              <span className=\"gdp-detail-label\">Motif:</span>\r\n              <span className=\"gdp-detail-value\">{demande.motif}</span>\r\n            </div>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Rendu du statut avec l'ic√¥ne appropri√©e\r\n  const renderStatus = (statut) => {\r\n    switch (statut) {\r\n      case \"Compl√©t√©\":\r\n        return (\r\n          <span className=\"gdp-status-badge gdp-status-completed\">\r\n            <Check size={14} />\r\n            Compl√©t√©\r\n          </span>\r\n        );\r\n      case \"En attente\":\r\n        return (\r\n          <span className=\"gdp-status-badge gdp-status-pending\">\r\n            <AlertCircle size={14} />\r\n            En attente\r\n          </span>\r\n        );\r\n      case \"Refus√©\":\r\n        return (\r\n          <span className=\"gdp-status-badge gdp-status-rejected\">\r\n            <X size={14} />\r\n            Refus√©\r\n          </span>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Rendu des boutons d'action en fonction du statut\r\n  const renderActionButtons = (demande) => {\r\n    // Si la demande n'est pas en attente, d√©sactiver les boutons\r\n    if (demande.statut !== \"En attente\") {\r\n      return (\r\n        <div className=\"gdp-action-buttons\">\r\n          <button className=\"gdp-btn gdp-btn-disabled\" disabled>\r\n            <ThumbsUp size={16} />\r\n            Accepter\r\n          </button>\r\n          <button className=\"gdp-btn gdp-btn-disabled\" disabled>\r\n            <ThumbsDown size={16} />\r\n            Refuser\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"gdp-action-buttons\">\r\n        <button \r\n          className=\"gdp-btn gdp-btn-success\"\r\n          onClick={(e) => accepterDemande(e, demande)}\r\n        >\r\n          <ThumbsUp size={16} />\r\n          Accepter\r\n        </button>\r\n        <button \r\n          className=\"gdp-btn gdp-btn-danger\"\r\n          onClick={(e) => refuserDemande(e, demande)}\r\n        >\r\n          <ThumbsDown size={16} />\r\n          Refuser\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\"\r\n        }\r\n      >\r\n        {/* Injection du CSS */}\r\n        <style>{encapsulatedStyles}</style>\r\n\r\n        <div className=\"gdp-container\">\r\n          <div className=\"gdp-header-section\">\r\n            <h1\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"700\",\r\n                marginBottom: \"1.5rem\",\r\n                color: \"#1f2937\",\r\n              }}\r\n            >\r\n              Gestion des demandes de personnel\r\n            </h1>\r\n\r\n            {/* Partie recherche et filtration */}\r\n            <div className=\"gdp-search-container\">\r\n              <div className=\"gdp-search-input\">\r\n                <div className=\"gdp-search-icon\">\r\n                  <Search size={20} />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par nom ou ID d'employ√©\"\r\n                  value={recherche}\r\n                  onChange={(e) => setRecherche(e.target.value)}\r\n                  className=\"gdp-form-input\"\r\n                  style={{ paddingLeft: \"2.5rem\" }}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}\r\n              >\r\n                <Filter size={20} style={{ color: \"#9ca3af\" }} />\r\n                <select\r\n                  value={filtreType}\r\n                  onChange={(e) => setFiltreType(e.target.value)}\r\n                  className=\"gdp-form-select\"\r\n                >\r\n                  <option value=\"tous\">Tous les types</option>\r\n                  <option value=\"Demande de cong√©\">Demande de cong√©</option>\r\n                  <option value=\"Demande d'avance sur salaire\">\r\n                    Demande d'avance sur salaire\r\n                  </option>\r\n                  <option value=\"Demande de formation\">\r\n                    Demande de formation\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Onglets de filtration par statut */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginBottom: \"1.5rem\",\r\n                borderBottom: \"1px solid #e5e7eb\",\r\n              }}\r\n            >\r\n              <button\r\n                className={`gdp-tab-button ${\r\n                  filtreStatut === \"tous\" ? \"gdp-active\" : \"\"\r\n                }`}\r\n                onClick={() => setFiltreStatut(\"tous\")}\r\n              >\r\n                Tous\r\n              </button>\r\n              <button\r\n                className={`gdp-tab-button ${\r\n                  filtreStatut === \"Compl√©t√©\" ? \"gdp-active\" : \"\"\r\n                }`}\r\n                onClick={() => setFiltreStatut(\"Compl√©t√©\")}\r\n              >\r\n                Compl√©t√©\r\n              </button>\r\n              <button\r\n                className={`gdp-tab-button ${\r\n                  filtreStatut === \"En attente\" ? \"gdp-active\" : \"\"\r\n                }`}\r\n                onClick={() => setFiltreStatut(\"En attente\")}\r\n              >\r\n                En attente\r\n              </button>\r\n              <button\r\n                className={`gdp-tab-button ${\r\n                  filtreStatut === \"Refus√©\" ? \"gdp-active\" : \"\"\r\n                }`}\r\n                onClick={() => setFiltreStatut(\"Refus√©\")}\r\n              >\r\n                Refus√©\r\n              </button>\r\n            </div>\r\n\r\n            {/* Tableau des demandes */}\r\n            <div className=\"gdp-table-container\">\r\n              <table className=\"gdp-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"gdp-th\" style={{ width: \"5%\" }}></th>\r\n                    <th className=\"gdp-th\" style={{ width: \"8%\" }}>\r\n                      ID\r\n                    </th>\r\n                    <th className=\"gdp-th\" style={{ width: \"15%\" }}>\r\n                      Nom\r\n                    </th>\r\n                    <th className=\"gdp-th\" style={{ width: \"15%\" }}>\r\n                      Pr√©nom\r\n                    </th>\r\n                    <th className=\"gdp-th\" style={{ width: \"12%\" }}>\r\n                      D√©partement\r\n                    </th>\r\n                    <th className=\"gdp-th\" style={{ width: \"25%\" }}>\r\n                      Type de demande\r\n                    </th>\r\n                    <th className=\"gdp-th\" style={{ width: \"20%\" }}>\r\n                      Statut\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {demandesAffichees.length > 0 ? (\r\n                    demandesAffichees.map((demande) => (\r\n                      <>\r\n                        <tr\r\n                          key={demande.id}\r\n                          className=\"gdp-tr\"\r\n                          onClick={() => toggleExpandedRow(demande.id)}\r\n                        >\r\n                          <td\r\n                            className=\"gdp-td\"\r\n                            style={{ textAlign: \"center\" }}\r\n                          >\r\n                            {expandedRowId === demande.id ? (\r\n                              <ChevronUp\r\n                                size={20}\r\n                                className=\"gdp-expander-icon\"\r\n                              />\r\n                            ) : (\r\n                              <ChevronDown\r\n                                size={20}\r\n                                className=\"gdp-expander-icon\"\r\n                              />\r\n                            )}\r\n                          </td>\r\n                          <td className=\"gdp-td\">{demande.employeId}</td>\r\n                          <td className=\"gdp-td\" style={{ fontWeight: 500 }}>\r\n                            {demande.nom}\r\n                          </td>\r\n                          <td className=\"gdp-td\" style={{ fontWeight: 500 }}>\r\n                            {demande.prenom}\r\n                          </td>\r\n                          <td className=\"gdp-td\">\r\n                            <span className=\"gdp-department-badge\">\r\n                              {demande.departement}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"gdp-td\">\r\n                            <span className=\"gdp-type-badge\">\r\n                              {demande.typeDemande}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"gdp-td\">\r\n                            {renderStatus(demande.statut)}\r\n                          </td>\r\n                        </tr>\r\n                        {expandedRowId === demande.id && (\r\n                          <tr className=\"gdp-expanded-row\">\r\n                            <td colSpan=\"7\" className=\"gdp-expanded-content\">\r\n                              <h3 className=\"gdp-expanded-title\">\r\n                                D√©tails de la demande #{demande.id}\r\n                              </h3>\r\n\r\n                              <div className=\"gdp-detail-row\">\r\n                                <span className=\"gdp-detail-label\">\r\n                                  Employ√©:\r\n                                </span>\r\n                                <span className=\"gdp-detail-value\">\r\n                                  {demande.nom} {demande.prenom} (ID:{\" \"}\r\n                                  {demande.employeId})\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"gdp-detail-row\">\r\n                                <span className=\"gdp-detail-label\">\r\n                                  Type de demande:\r\n                                </span>\r\n                                <span className=\"gdp-detail-value\">\r\n                                  {demande.typeDemande}\r\n                                </span>\r\n                              </div>\r\n\r\n                              <div className=\"gdp-detail-row\">\r\n                                <span className=\"gdp-detail-label\">\r\n                                  Date de la demande:\r\n                                </span>\r\n                                <span className=\"gdp-detail-value\">\r\n                                  {demande.dateDemande}\r\n                                </span>\r\n                              </div>\r\n\r\n                              {renderFormDetails(demande)}\r\n\r\n                              <div className=\"gdp-detail-row\">\r\n                                <span className=\"gdp-detail-label\">\r\n                                  Commentaire:\r\n                                </span>\r\n                                <span className=\"gdp-detail-value\">\r\n                                  {demande.commentaire}\r\n                                </span>\r\n                              </div>\r\n\r\n                              <div className=\"gdp-detail-row\">\r\n                                <span className=\"gdp-detail-label\">\r\n                                  Statut:\r\n                                </span>\r\n                                <span className=\"gdp-detail-value\">\r\n                                  {renderStatus(demande.statut)}\r\n                                </span>\r\n                              </div>\r\n\r\n                              {demande.reponse && (\r\n                                <div className=\"gdp-detail-row\">\r\n                                  <span className=\"gdp-detail-label\">\r\n                                    R√©ponse:\r\n                                  </span>\r\n                                  <span className=\"gdp-detail-value\">\r\n                                    {demande.reponse}\r\n                                  </span>\r\n                                </div>\r\n                              )}\r\n                              \r\n                              {/* Ajout des boutons d'action */}\r\n                              {renderActionButtons(demande)}\r\n                            </td>\r\n                          </tr>\r\n                        )}\r\n                      </>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"7\"\r\n                        className=\"gdp-td\"\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"#6b7280\",\r\n                          padding: \"1.5rem 0\",\r\n                        }}\r\n                      >\r\n                        Aucune demande trouv√©e\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"gdp-pagination\">\r\n              <div style={{ fontSize: \"0.875rem\", color: \"#6b7280\" }}>\r\n                Affichage de {demandesAffichees.length} sur {demandes.length}{\" \"}\r\n                demandes\r\n              </div>\r\n              <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\r\n                <button className=\"gdp-page-button\">Pr√©c√©dent</button>\r\n                <button className=\"gdp-page-button gdp-active\">1</button>\r\n                <button className=\"gdp-page-button\">2</button>\r\n                <button className=\"gdp-page-button\">Suivant</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Conteneur des toasts */}\r\n      <div className=\"gdp-toast-container\">\r\n        {toasts.map((toast) => (\r\n          <Toast\r\n            key={toast.id}\r\n            type={toast.type}\r\n            message={toast.message}\r\n            onClose={() => removeToast(toast.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Settings.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\IndexNavbar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\Footer.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\FooterAdmin.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Headers\\HeaderStats.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\forget.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Recrutement.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Personnels.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Departement.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Cong√©.js",["244"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/fr';\r\n\r\nconst Cong√© = () => {\r\n  const [currentDate, setCurrentDate] = useState(moment());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [newEventTitle, setNewEventTitle] = useState('');\r\n  const [newEventType, setNewEventType] = useState('cong√©-paye');\r\n\r\n  // Configuration de la langue fran√ßaise\r\n  moment.locale('fr');\r\n\r\n  // Jours f√©ri√©s en Tunisie (dates fixes pour 2025)\r\n  const joursFeries = [\r\n    { date: '2025-01-01', nom: \"Jour de l'an\" },\r\n    { date: '2025-01-14', nom: \"F√™te de la R√©volution et de la Jeunesse\" },\r\n    { date: '2025-03-20', nom: \"F√™te de l'Ind√©pendance\" },\r\n    { date: '2025-04-09', nom: \"Jour des Martyrs\" },\r\n    { date: '2025-05-01', nom: \"F√™te du Travail\" },\r\n    { date: '2025-07-25', nom: \"F√™te de la R√©publique\" },\r\n    { date: '2025-08-13', nom: \"F√™te de la Femme\" },\r\n    { date: '2025-10-15', nom: \"F√™te de l'√âvacuation\" }\r\n  ];\r\n  \r\n  // Jours f√©ri√©s √† dates variables (bas√©s sur calendriers lunaires)\r\n  // Ces dates sont approximatives pour 2025 et devraient √™tre mises √† jour\r\n  const joursFeriesVariables = [\r\n    { date: '2025-04-10', nom: \"A√Ød El-Fitr\", duree: 3 },\r\n    { date: '2025-06-17', nom: \"A√Ød El-Idha\", duree: 3 },\r\n    { date: '2025-07-07', nom: \"Nouvel An H√©gire\" },\r\n    { date: '2025-09-16', nom: \"Mouled\" }\r\n  ];\r\n\r\n  // Types de cong√©s disponibles\r\n  const typesConges = [\r\n    { id: 'cong√©-paye', label: 'Cong√© pay√©', color: '#2ecc71' },\r\n    { id: 'rtt', label: 'RTT', color: '#3498db' },\r\n    { id: 'cong√©-maladie', label: 'Cong√© maladie', color: '#e74c3c' },\r\n    { id: 'cong√©-maternit√©', label: 'Cong√© maternit√©', color: '#9b59b6' },\r\n    { id: 'cong√©-formation', label: 'Cong√© formation', color: '#f39c12' },\r\n    { id: 'sans-solde', label: 'Cong√© sans solde', color: '#95a5a6' }\r\n  ];\r\n\r\n  // Fonction pour v√©rifier si une date est un jour f√©ri√©\r\n  const estJourFerie = (date) => {\r\n    const dateFormatee = moment(date).format('YYYY-MM-DD');\r\n    \r\n    // V√©rifier les jours f√©ri√©s fixes\r\n    const fixe = joursFeries.find(jour => jour.date === dateFormatee);\r\n    if (fixe) return fixe.nom;\r\n    \r\n    // V√©rifier les jours f√©ri√©s variables\r\n    for (const jour of joursFeriesVariables) {\r\n      const dateDebut = moment(jour.date);\r\n      const dateFin = moment(jour.date).add((jour.duree || 1) - 1, 'days');\r\n      \r\n      if (moment(date).isBetween(dateDebut, dateFin, null, '[]')) {\r\n        return jour.nom;\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  // G√©n√©ration des jours du mois\r\n  const genererJoursDuMois = () => {\r\n    const debutMois = moment(currentDate).startOf('month');\r\n    const finMois = moment(currentDate).endOf('month');\r\n    const debutCalendrier = moment(debutMois).startOf('week');\r\n    const finCalendrier = moment(finMois).endOf('week');\r\n    \r\n    const jours = [];\r\n    let jour = moment(debutCalendrier);\r\n    \r\n    while (jour.isSameOrBefore(finCalendrier)) {\r\n      jours.push(moment(jour));\r\n      jour.add(1, 'day');\r\n    }\r\n    \r\n    return jours;\r\n  };\r\n\r\n  // Changement de mois\r\n  const moisPrecedent = () => {\r\n    setCurrentDate(moment(currentDate).subtract(1, 'month'));\r\n  };\r\n  \r\n  const moisSuivant = () => {\r\n    setCurrentDate(moment(currentDate).add(1, 'month'));\r\n  };\r\n\r\n  // S√©lection d'une date\r\n  const selectionnerDate = (date) => {\r\n    setSelectedDate(date);\r\n    setShowModal(true);\r\n    setNewEventTitle(''); // R√©initialiser le titre\r\n    setNewEventType('cong√©-paye'); // D√©finir le type par d√©faut\r\n  };\r\n\r\n  // Ajout d'un √©v√©nement\r\n  const ajouterEvenement = () => {\r\n    if (selectedDate && newEventTitle.trim() !== '') {\r\n      const nouvelEvenement = {\r\n        date: moment(selectedDate).format('YYYY-MM-DD'),\r\n        titre: newEventTitle,\r\n        type: newEventType\r\n      };\r\n      \r\n      setEvents([...events, nouvelEvenement]);\r\n      setShowModal(false);\r\n      setSelectedDate(null);\r\n    }\r\n  };\r\n\r\n  // Suppression d'un √©v√©nement\r\n  const supprimerEvenement = (date, titre) => {\r\n    const eventsFiltered = events.filter(event => \r\n      !(event.date === date && event.titre === titre)\r\n    );\r\n    setEvents(eventsFiltered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"formationadmin\">\r\n      <div className=\"calendrier-container\">\r\n        <div className=\"calendrier-header\">\r\n          <h2>Calendrier des Cong√©s</h2>\r\n          <div className=\"navigation-mois\">\r\n            <button className=\"btn-navigation\" onClick={moisPrecedent}>\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <path d=\"M15 18l-6-6 6-6\"></path>\r\n              </svg>\r\n            </button>\r\n            <h3>{currentDate.format('MMMM YYYY')}</h3>\r\n            <button className=\"btn-navigation\" onClick={moisSuivant}>\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <path d=\"M9 18l6-6-6-6\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"jours-semaine\">\r\n          {['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'].map(jour => (\r\n            <div key={jour} className=\"jour-semaine\">{jour}</div>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"jours-mois\">\r\n          {genererJoursDuMois().map(jour => {\r\n            const estMoisCourant = jour.month() === currentDate.month();\r\n            const estAujourdhui = jour.isSame(moment(), 'day');\r\n            const estSelectionne = selectedDate && jour.isSame(selectedDate, 'day');\r\n            const jourFerie = estJourFerie(jour);\r\n            const evenementsDuJour = events.filter(e => moment(e.date).isSame(jour, 'day'));\r\n            const dateFormatee = jour.format('YYYY-MM-DD');\r\n            \r\n            return (\r\n              <div \r\n                key={dateFormatee} \r\n                className={`jour-calendrier ${estMoisCourant ? 'mois-courant' : 'autre-mois'} \r\n                          ${estAujourdhui ? 'aujourdhui' : ''} \r\n                          ${estSelectionne ? 'selectionne' : ''} \r\n                          ${jourFerie ? 'jour-ferie' : ''}`}\r\n                onClick={() => selectionnerDate(jour)}\r\n              >\r\n                <div className=\"numero-jour\">{jour.date()}</div>\r\n                {jourFerie && (\r\n                  <div className=\"indicateur-ferie\" title={jourFerie}>\r\n                    <span className=\"tooltip-text\">{jourFerie}</span>\r\n                    üåô\r\n                  </div>\r\n                )}\r\n                <div className=\"evenements-container\">\r\n                  {evenementsDuJour.map((evt, index) => {\r\n                    const typeConge = typesConges.find(t => t.id === evt.type);\r\n                    return (\r\n                      <div \r\n                        key={index} \r\n                        className=\"evenement\"\r\n                        style={{ backgroundColor: typeConge ? typeConge.color : '#999' }}\r\n                        title={evt.titre}\r\n                      >\r\n                        <span className=\"evenement-titre\">{evt.titre}</span>\r\n                        <button \r\n                          className=\"btn-supprimer\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            supprimerEvenement(dateFormatee, evt.titre);\r\n                          }}\r\n                          title=\"Supprimer ce cong√©\"\r\n                        >\r\n                          √ó\r\n                        </button>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        \r\n        {/* Modal pour ajouter un cong√© */}\r\n        {showModal && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowModal(false)}>\r\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h3>Ajouter un cong√©</h3>\r\n                <button className=\"btn-fermer\" onClick={() => setShowModal(false)}>√ó</button>\r\n              </div>\r\n              \r\n              <div className=\"modal-body\">\r\n                <div className=\"date-selection\">\r\n                  <span className=\"label\">Date s√©lectionn√©e:</span>\r\n                  <span className=\"value\">{selectedDate.format('DD MMMM YYYY')}</span>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"nom-conge\">Nom du cong√©</label>\r\n                  <input \r\n                    type=\"text\"\r\n                    id=\"nom-conge\"\r\n                    value={newEventTitle}\r\n                    onChange={(e) => setNewEventTitle(e.target.value)}\r\n                    placeholder=\"Saisissez un nom pour ce cong√©\"\r\n                    className=\"input-field\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Type de cong√©</label>\r\n                  <div className=\"types-conges\">\r\n                    {typesConges.map((type) => (\r\n                      <div \r\n                        key={type.id} \r\n                        className={`type-conge ${newEventType === type.id ? 'selected' : ''}`}\r\n                        onClick={() => setNewEventType(type.id)}\r\n                        style={{ \r\n                          borderColor: newEventType === type.id ? type.color : 'transparent',\r\n                          backgroundColor: `${type.color}20` \r\n                        }}\r\n                      >\r\n                        <div className=\"type-color\" style={{ backgroundColor: type.color }}></div>\r\n                        <span>{type.label}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"modal-footer\">\r\n                <button \r\n                  className=\"btn btn-annuler\" \r\n                  onClick={() => setShowModal(false)}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-ajouter\" \r\n                  onClick={ajouterEvenement}\r\n                  disabled={!newEventTitle.trim()}\r\n                >\r\n                  Ajouter\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <style jsx>{`\r\n          .calendrier-container {\r\n            max-width: 1000px;\r\n            margin: 0 auto;\r\n            font-family: 'Roboto', 'Arial', sans-serif;\r\n            background-color: #fff;\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\r\n            padding: 20px;\r\n          }\r\n          \r\n          .calendrier-header {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            margin-bottom: 25px;\r\n            padding-bottom: 15px;\r\n            border-bottom: 1px solid #eaeaea;\r\n          }\r\n          \r\n          .calendrier-header h2 {\r\n            font-size: 24px;\r\n            font-weight: 500;\r\n            color: #333;\r\n            margin: 0;\r\n          }\r\n          \r\n          .navigation-mois {\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 20px;\r\n          }\r\n          \r\n          .navigation-mois h3 {\r\n            font-size: 18px;\r\n            margin: 0;\r\n            text-transform: capitalize;\r\n            min-width: 140px;\r\n            text-align: center;\r\n          }\r\n          \r\n          .btn-navigation {\r\n            background: #fff;\r\n            color: #555;\r\n            border: 1px solid #eaeaea;\r\n            border-radius: 50%;\r\n            width: 36px;\r\n            height: 36px;\r\n            cursor: pointer;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            transition: all 0.2s ease;\r\n          }\r\n            \r\n          .btn-navigation:hover {\r\n            background-color: #f6f6f6;\r\n            color: #333;\r\n            transform: scale(1.05);\r\n          }\r\n          \r\n          .jours-semaine {\r\n            display: grid;\r\n            grid-template-columns: repeat(7, 1fr);\r\n            text-align: center;\r\n            font-weight: 500;\r\n            background-color: #f8f9fa;\r\n            padding: 12px 0;\r\n            border-radius: 8px;\r\n            margin-bottom: 10px;\r\n          }\r\n          \r\n          .jour-semaine {\r\n            font-size: 14px;\r\n            color: #555;\r\n          }\r\n          \r\n          .jours-mois {\r\n            display: grid;\r\n            grid-template-columns: repeat(7, 1fr);\r\n            grid-gap: 8px;\r\n          }\r\n          \r\n          .jour-calendrier {\r\n            aspect-ratio: 1;\r\n            border-radius: 8px;\r\n            border: 1px solid #eaeaea;\r\n            padding: 8px;\r\n            cursor: pointer;\r\n            position: relative;\r\n            overflow: hidden;\r\n            transition: all 0.2s ease;\r\n            display: flex;\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .jour-calendrier:hover {\r\n            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.3);\r\n          }\r\n          \r\n          .mois-courant {\r\n            background-color: white;\r\n          }\r\n          \r\n          .autre-mois {\r\n            background-color: #f9f9f9;\r\n            color: #aaa;\r\n          }\r\n          \r\n          .aujourdhui {\r\n            background-color: #e6f7ff;\r\n            font-weight: bold;\r\n            border: 2px solid #48aff0;\r\n          }\r\n          \r\n          .selectionne {\r\n            box-shadow: 0 0 0 2px #3498db;\r\n          }\r\n          \r\n          .jour-ferie {\r\n            background-color: #fff5f5;\r\n          }\r\n          \r\n          .numero-jour {\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            margin-bottom: 4px;\r\n          }\r\n          \r\n          .indicateur-ferie {\r\n            position: absolute;\r\n            top: 8px;\r\n            right: 8px;\r\n            font-size: 12px;\r\n            cursor: help;\r\n            position: relative;\r\n          }\r\n          \r\n          .indicateur-ferie .tooltip-text {\r\n            visibility: hidden;\r\n            width: 120px;\r\n            background-color: rgba(0, 0, 0, 0.8);\r\n            color: #fff;\r\n            text-align: center;\r\n            border-radius: 4px;\r\n            padding: 5px;\r\n            position: absolute;\r\n            z-index: 1;\r\n            bottom: 125%;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            opacity: 0;\r\n            transition: opacity 0.3s;\r\n            font-size: 11px;\r\n            font-weight: normal;\r\n          }\r\n          \r\n          .indicateur-ferie:hover .tooltip-text {\r\n            visibility: visible;\r\n            opacity: 1;\r\n          }\r\n          \r\n          .evenements-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 4px;\r\n            margin-top: 4px;\r\n            flex: 1;\r\n            overflow-y: auto;\r\n          }\r\n          \r\n          .evenement {\r\n            padding: 4px 6px;\r\n            border-radius: 4px;\r\n            font-size: 12px;\r\n            color: white;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            transition: all 0.2s ease;\r\n          }\r\n          \r\n          .evenement-titre {\r\n            flex: 1;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n          }\r\n          \r\n          .btn-supprimer {\r\n            background: none;\r\n            border: none;\r\n            color: rgba(255, 255, 255, 0.8);\r\n            cursor: pointer;\r\n            width: 16px;\r\n            height: 16px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n            padding: 0;\r\n            margin-left: 4px;\r\n            opacity: 0.7;\r\n            transition: opacity 0.2s;\r\n            border-radius: 50%;\r\n          }\r\n          \r\n          .btn-supprimer:hover {\r\n            opacity: 1;\r\n            background-color: rgba(0, 0, 0, 0.1);\r\n          }\r\n          \r\n          /* Modal */\r\n          .modal-overlay {\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background-color: rgba(0, 0, 0, 0.5);\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            z-index: 1000;\r\n          }\r\n          \r\n          .modal-content {\r\n            background-color: white;\r\n            border-radius: 10px;\r\n            width: 90%;\r\n            max-width: 500px;\r\n            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n            animation: modalAppear 0.3s ease;\r\n          }\r\n          \r\n          @keyframes modalAppear {\r\n            from { opacity: 0; transform: translateY(20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n          }\r\n          \r\n          .modal-header {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            padding: 15px 20px;\r\n            border-bottom: 1px solid #eaeaea;\r\n          }\r\n          \r\n          .modal-header h3 {\r\n            margin: 0;\r\n            font-size: 18px;\r\n            color: #333;\r\n          }\r\n          \r\n          .btn-fermer {\r\n            background: none;\r\n            border: none;\r\n            font-size: 24px;\r\n            color: #777;\r\n            cursor: pointer;\r\n            width: 30px;\r\n            height: 30px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            border-radius: 50%;\r\n            transition: all 0.2s;\r\n          }\r\n          \r\n          .btn-fermer:hover {\r\n            background-color: #f0f0f0;\r\n            color: #333;\r\n          }\r\n          \r\n          .modal-body {\r\n            padding: 20px;\r\n          }\r\n          \r\n          .date-selection {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-bottom: 20px;\r\n            padding: 10px 15px;\r\n            background-color: #f8f9fa;\r\n            border-radius: 6px;\r\n          }\r\n          \r\n          .date-selection .label {\r\n            font-weight: 500;\r\n            color: #555;\r\n            margin-right: 10px;\r\n          }\r\n          \r\n          .date-selection .value {\r\n            font-weight: 600;\r\n            color: #333;\r\n          }\r\n          \r\n          .form-group {\r\n            margin-bottom: 20px;\r\n          }\r\n          \r\n          .form-group label {\r\n            display: block;\r\n            margin-bottom: 8px;\r\n            font-weight: 500;\r\n            color: #444;\r\n          }\r\n          \r\n          .input-field {\r\n            width: 100%;\r\n            padding: 12px 15px;\r\n            border: 1px solid #ddd;\r\n            border-radius: 6px;\r\n            font-size: 14px;\r\n            transition: border-color 0.2s;\r\n          }\r\n          \r\n          .input-field:focus {\r\n            outline: none;\r\n            border-color: #3498db;\r\n            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);\r\n          }\r\n          \r\n          .types-conges {\r\n            display: grid;\r\n            grid-template-columns: repeat(2, 1fr);\r\n            gap: 10px;\r\n          }\r\n          \r\n          .type-conge {\r\n            padding: 10px;\r\n            border-radius: 6px;\r\n            display: flex;\r\n            align-items: center;\r\n            cursor: pointer;\r\n            transition: all 0.2s;\r\n            border: 2px solid transparent;\r\n          }\r\n          \r\n          .type-conge:hover {\r\n            transform: translateY(-2px);\r\n          }\r\n          \r\n          .type-conge.selected {\r\n            font-weight: 500;\r\n          }\r\n          \r\n          .type-color {\r\n            width: 14px;\r\n            height: 14px;\r\n            border-radius: 50%;\r\n            margin-right: 8px;\r\n          }\r\n          \r\n          .modal-footer {\r\n            padding: 15px 20px;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            gap: 10px;\r\n            border-top: 1px solid #eaeaea;\r\n          }\r\n          \r\n          .btn {\r\n            padding: 10px 18px;\r\n            border-radius: 6px;\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            cursor: pointer;\r\n            transition: all 0.2s;\r\n            border: none;\r\n          }\r\n          \r\n          .btn-annuler {\r\n            background-color: #f0f0f0;\r\n            color: #555;\r\n          }\r\n          \r\n          .btn-annuler:hover {\r\n            background-color: #e0e0e0;\r\n            color: #333;\r\n          }\r\n          \r\n          .btn-ajouter {\r\n            background-color: #3498db;\r\n            color: white;\r\n          }\r\n          \r\n          .btn-ajouter:hover {\r\n            background-color: #2980b9;\r\n          }\r\n          \r\n          .btn-ajouter:disabled {\r\n            background-color: #b2d6f5;\r\n            cursor: not-allowed;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cong√©;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Formation.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeFormation.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\SettingsEmploye.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\SlidebarEmploye.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeAvance.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeConge.js",["245","246"],"import React, { useState } from 'react';\r\n\r\nconst CardDemandeConge = () => {\r\n  const [formData, setFormData] = useState({\r\n    startDate: '',\r\n    endDate: '',\r\n    reason: '',\r\n    type: 'cong√© pay√©',\r\n    notes: ''\r\n  });\r\n  \r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [activeCategory, setActiveCategory] = useState('Tous');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  const styles = {\r\n    container: {\r\n      backgroundColor: '#f0f4f8',\r\n      minHeight: '100vh',\r\n      padding: '20px',\r\n      fontFamily: '\"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n      color: '#334155'\r\n    },\r\n   \r\n    mainContent: {\r\n      maxWidth: '1200px',\r\n      margin: '0 auto',\r\n      paddingTop: '8rem'\r\n    },\r\n    header: {\r\n      textAlign: 'center',\r\n      marginBottom: '40px',\r\n      padding: '20px 0' \r\n    },\r\n    title: {\r\n      fontSize: '2.2rem', \r\n  fontWeight: '700',\r\n  color: '#1e40af',\r\n  margin: '0 0 10px 0',\r\n  position: 'relative',\r\n  display: 'inline-block',\r\n  paddingBottom: '15px',\r\n  fontWeight: 'inherit',\r\n    },\r\n    titleAfter: {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      width: '60%',\r\n      height: '4px',\r\n      background: 'linear-gradient(90deg, #1e40af, #3b82f6)',\r\n      borderRadius: '2px'\r\n    },\r\n    subtitle: {\r\n      fontSize: '17px',\r\n      color: '#64748b',\r\n      marginTop: '10px',\r\n      margin: '0',\r\n      letterSpacing: '0.3px'\r\n    },\r\n    searchSection: {\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '12px',\r\n      padding: '30px',\r\n      marginBottom: '35px',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.06)',\r\n      border: '1px solid rgba(0,0,0,0.04)'\r\n    },\r\n    searchContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n      gap: '20px'\r\n    },\r\n    searchInputContainer: {\r\n      position: 'relative',\r\n      flexGrow: '1'\r\n    },\r\n    searchIcon: {\r\n      position: 'absolute',\r\n      left: '12px',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      color: '#6b7280',\r\n      fontSize: '16px'\r\n    },\r\n    searchInput: {\r\n      width: '100%',\r\n      padding: '14px 14px 14px 40px',\r\n      border: '1px solid #e2e8f0',\r\n      borderRadius: '8px',\r\n      fontSize: '16px',\r\n      boxShadow: '0 1px 2px rgba(0,0,0,0.04)',\r\n      transition: 'all 0.2s ease',\r\n      '&:focus': {\r\n        outline: 'none',\r\n        borderColor: '#3b82f6',\r\n        boxShadow: '0 0 0 3px rgba(59, 130, 246, 0.2)'\r\n      }\r\n    },\r\n    categoryLabel: {\r\n      fontSize: '15px',\r\n      fontWeight: '600',\r\n      color: '#475569',\r\n      marginRight: '12px'\r\n    },\r\n    categoriesContainer: {\r\n      display: 'flex',\r\n      gap: '10px',\r\n      flexWrap: 'wrap'\r\n    },\r\n    category: {\r\n      padding: '10px 18px',\r\n      borderRadius: '8px',\r\n      fontSize: '14px',\r\n      fontWeight: '600',\r\n      cursor: 'pointer',\r\n      transition: 'all 0.2s ease'\r\n    },\r\n    activeCategory: {\r\n      backgroundColor: '#2563eb',\r\n      color: '#ffffff',\r\n      boxShadow: '0 2px 4px rgba(37, 99, 235, 0.3)'\r\n    },\r\n    inactiveCategory: {\r\n      backgroundColor: '#f1f5f9',\r\n      color: '#475569',\r\n      '&:hover': {\r\n        backgroundColor: '#e2e8f0'\r\n      }\r\n    },\r\n    cardsContainer: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(auto-fill, minmax(350px, 1fr))',\r\n      gap: '30px'\r\n    },\r\n    card: {\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '12px',\r\n      overflow: 'hidden',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.06)',\r\n      border: '1px solid rgba(0,0,0,0.04)',\r\n      transition: 'transform 0.3s ease, box-shadow 0.3s ease',\r\n      '&:hover': {\r\n        transform: 'translateY(-5px)',\r\n        boxShadow: '0 8px 20px rgba(0,0,0,0.08)'\r\n      }\r\n    },\r\n    cardHeader: {\r\n      backgroundColor: '#f8fafc',\r\n      padding: '25px',\r\n      borderBottom: '1px solid #e2e8f0'\r\n    },\r\n    cardTitle: {\r\n      fontSize: '22px',\r\n      fontWeight: '700',\r\n      color: '#1e40af',\r\n      margin: '0 0 8px 0'\r\n    },\r\n    cardDescription: {\r\n      fontSize: '15px',\r\n      color: '#64748b',\r\n      margin: '0'\r\n    },\r\n    cardBody: {\r\n      padding: '25px'\r\n    },\r\n    placesTag: {\r\n      display: 'inline-block',\r\n      backgroundColor: '#e0f2fe',\r\n      color: '#0369a1',\r\n      padding: '6px 12px',\r\n      borderRadius: '20px',\r\n      fontSize: '13px',\r\n      fontWeight: '600',\r\n      marginBottom: '20px',\r\n      boxShadow: '0 1px 2px rgba(0,0,0,0.04)'\r\n    },\r\n    formGroup: {\r\n      marginBottom: '20px'\r\n    },\r\n    label: {\r\n      display: 'block',\r\n      fontSize: '15px',\r\n      fontWeight: '600',\r\n      color: '#475569',\r\n      marginBottom: '8px'\r\n    },\r\n    input: {\r\n      width: '100%',\r\n      padding: '12px 14px',\r\n      border: '1px solid #e2e8f0',\r\n      borderRadius: '8px',\r\n      fontSize: '15px',\r\n      boxShadow: '0 1px 2px rgba(0,0,0,0.04)',\r\n      transition: 'all 0.2s ease',\r\n      '&:focus': {\r\n        outline: 'none',\r\n        borderColor: '#3b82f6',\r\n        boxShadow: '0 0 0 3px rgba(59, 130, 246, 0.2)'\r\n      }\r\n    },\r\n    formGrid: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '20px',\r\n      marginBottom: '20px'\r\n    },\r\n    alert: {\r\n      backgroundColor: '#e0f2fe',\r\n      borderRadius: '8px',\r\n      padding: '14px',\r\n      marginBottom: '20px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: '10px',\r\n      boxShadow: '0 1px 2px rgba(0,0,0,0.04)'\r\n    },\r\n    alertIcon: {\r\n      color: '#0369a1',\r\n      fontSize: '18px'\r\n    },\r\n    alertText: {\r\n      color: '#0369a1',\r\n      fontSize: '15px',\r\n      fontWeight: '500',\r\n      margin: '0'\r\n    },\r\n    buttonContainer: {\r\n      marginTop: '25px'\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      padding: '14px',\r\n      backgroundColor: '#2563eb',\r\n      color: '#ffffff',\r\n      border: 'none',\r\n      borderRadius: '8px',\r\n      fontSize: '16px',\r\n      fontWeight: '600',\r\n      cursor: 'pointer',\r\n      transition: 'all 0.2s ease',\r\n      boxShadow: '0 2px 5px rgba(37, 99, 235, 0.3)',\r\n      '&:hover': {\r\n        backgroundColor: '#1d4ed8',\r\n        boxShadow: '0 4px 8px rgba(37, 99, 235, 0.4)'\r\n      }\r\n    },\r\n    formContainer: {\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '12px',\r\n      padding: '35px',\r\n      marginBottom: '35px',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.06)',\r\n      border: '1px solid rgba(0,0,0,0.04)'\r\n    },\r\n    successAlert: {\r\n      backgroundColor: '#dcfce7',\r\n      borderRadius: '8px',\r\n      padding: '18px',\r\n      marginBottom: '30px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: '15px',\r\n      boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\r\n    },\r\n    successIcon: {\r\n      color: '#16a34a',\r\n      fontSize: '24px',\r\n      fontWeight: 'bold'\r\n    },\r\n    successText: {\r\n      color: '#166534',\r\n      fontSize: '17px',\r\n      fontWeight: '600',\r\n      margin: '0'\r\n    },\r\n    summaryTitle: {\r\n      fontSize: '28px',\r\n      fontWeight: '700',\r\n      color: '#1e40af',\r\n      marginBottom: '25px',\r\n      textAlign: 'center'\r\n    },\r\n    summaryCard: {\r\n      backgroundColor: '#f8fafc',\r\n      padding: '30px',\r\n      borderRadius: '10px',\r\n      marginBottom: '30px',\r\n      border: '1px solid #e2e8f0',\r\n      boxShadow: '0 2px 5px rgba(0,0,0,0.04)'\r\n    },\r\n    summaryGrid: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '20px'\r\n    },\r\n    summaryLabel: {\r\n      fontSize: '14px',\r\n      color: '#64748b',\r\n      marginBottom: '6px',\r\n      fontWeight: '500'\r\n    },\r\n    summaryValue: {\r\n      fontSize: '16px',\r\n      fontWeight: '600',\r\n      color: '#334155'\r\n    },\r\n    colSpan2: {\r\n      gridColumn: 'span 2'\r\n    },\r\n    noResults: {\r\n      textAlign: 'center',\r\n      padding: '50px',\r\n      color: '#64748b',\r\n      fontSize: '17px',\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '12px',\r\n      marginBottom: '35px',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.06)',\r\n      border: '1px solid rgba(0,0,0,0.04)'\r\n    },\r\n    noResultsIcon: {\r\n      fontSize: '50px',\r\n      marginBottom: '15px',\r\n      color: '#94a3b8'\r\n    },\r\n    noResultsText: {\r\n      margin: '0',\r\n      fontWeight: '500'\r\n    }\r\n  };\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n  \r\n  const calculateDays = () => {\r\n    if (!formData.startDate || !formData.endDate) return 0;\r\n    \r\n    const start = new Date(formData.startDate);\r\n    const end = new Date(formData.endDate);\r\n    const diffTime = Math.abs(end - start);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\r\n    \r\n    return diffDays;\r\n  };\r\n\r\n  // Types de cong√©s avec des ic√¥nes\r\n  const congeTypes = [\r\n    {\r\n      type: 'cong√© pay√©',\r\n      title: 'Cong√© Pay√© Standard',\r\n      description: 'Cong√© annuel r√©mun√©r√©',\r\n      remainingDays: 15,\r\n      category: 'Pay√©s',\r\n      icon: 'üèñÔ∏è'\r\n    },\r\n    {\r\n      type: 'cong√© sans solde',\r\n      title: 'Cong√© Sans Solde',\r\n      description: 'Absence autoris√©e non r√©mun√©r√©e',\r\n      remainingDays: 'Illimit√©',\r\n      category: 'Sans solde',\r\n      icon: 'üìÖ'\r\n    },\r\n    {\r\n      type: 'cong√© maladie',\r\n      title: 'Cong√© Maladie',\r\n      description: 'Absence pour raison m√©dicale',\r\n      remainingDays: 10,\r\n      category: 'Maladie',\r\n      icon: 'üè•'\r\n    }\r\n  ];\r\n\r\n  // Filter cong√© types based on active category and search term\r\n  const filteredCongeTypes = congeTypes.filter(conge => {\r\n    // Filter by category\r\n    const categoryMatch = activeCategory === 'Tous' || conge.category === activeCategory;\r\n    \r\n    // Filter by search term\r\n    const searchMatch = conge.title.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                        conge.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                        conge.type.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    return categoryMatch && searchMatch;\r\n  });\r\n  \r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.mainContent}>\r\n        <div style={styles.header}>\r\n          <h1 style={styles.title}>\r\n            Demande de Cong√©\r\n            <span style={styles.titleAfter}></span>\r\n          </h1>\r\n          <p style={styles.subtitle}>D√©couvrez et soumettez vos demandes de cong√©s en quelques clics</p>\r\n        </div>\r\n\r\n        {submitted ? (\r\n          <div style={styles.formContainer}>\r\n            <div style={styles.successAlert}>\r\n              <span style={styles.successIcon}>‚úì</span>\r\n              <p style={styles.successText}>\r\n                Votre demande de cong√© a √©t√© soumise avec succ√®s!\r\n              </p>\r\n            </div>\r\n            \r\n            <h2 style={styles.summaryTitle}>R√©capitulatif de votre demande</h2>\r\n            \r\n            <div style={styles.summaryCard}>\r\n              <div style={styles.summaryGrid}>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Type de cong√©</p>\r\n                  <p style={styles.summaryValue}>\r\n                    {congeTypes.find(c => c.type === formData.type)?.icon || ''} {formData.type}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Nombre de jours</p>\r\n                  <p style={styles.summaryValue}>{calculateDays()} jours</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Date de d√©but</p>\r\n                  <p style={styles.summaryValue}>{new Date(formData.startDate).toLocaleDateString('fr-FR')}</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Date de fin</p>\r\n                  <p style={styles.summaryValue}>{new Date(formData.endDate).toLocaleDateString('fr-FR')}</p>\r\n                </div>\r\n                <div style={styles.colSpan2}>\r\n                  <p style={styles.summaryLabel}>Motif</p>\r\n                  <p style={styles.summaryValue}>{formData.reason}</p>\r\n                </div>\r\n                {formData.notes && (\r\n                  <div style={styles.colSpan2}>\r\n                    <p style={styles.summaryLabel}>Notes compl√©mentaires</p>\r\n                    <p style={styles.summaryValue}>{formData.notes}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={{textAlign: 'center'}}>\r\n              <button \r\n                onClick={() => setSubmitted(false)} \r\n                style={{...styles.button, maxWidth: '300px'}}\r\n              >\r\n                Nouvelle demande\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div style={styles.searchSection}>\r\n              <div style={styles.searchContainer}>\r\n                <div style={styles.searchInputContainer}>\r\n                  <span style={styles.searchIcon}>üîç</span>\r\n                  <input \r\n                    type=\"text\" \r\n                    placeholder=\"Rechercher un type de cong√©...\" \r\n                    style={styles.searchInput}\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n                \r\n                <div style={{display: 'flex', alignItems: 'center', flexWrap: 'wrap'}}>\r\n                  <span style={styles.categoryLabel}>Cat√©gorie:</span>\r\n                  <div style={styles.categoriesContainer}>\r\n                    {['Tous', 'Pay√©s', 'Sans solde', 'Maladie'].map(cat => (\r\n                      <span \r\n                        key={cat}\r\n                        style={{\r\n                          ...styles.category, \r\n                          ...(activeCategory === cat ? styles.activeCategory : styles.inactiveCategory)\r\n                        }}\r\n                        onClick={() => setActiveCategory(cat)}\r\n                      >\r\n                        {cat}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {filteredCongeTypes.length > 0 ? (\r\n              <div style={styles.cardsContainer}>\r\n                {filteredCongeTypes.map((conge, index) => (\r\n                  <div style={styles.card} key={index}>\r\n                    <div style={styles.cardHeader}>\r\n                      <h3 style={styles.cardTitle}>\r\n                        {conge.icon} {conge.title}\r\n                      </h3>\r\n                      <p style={styles.cardDescription}>{conge.description}</p>\r\n                    </div>\r\n                    <div style={styles.cardBody}>\r\n                      <div style={styles.placesTag}>\r\n                        {typeof conge.remainingDays === 'number' \r\n                          ? `${conge.remainingDays} jours disponibles` \r\n                          : conge.remainingDays}\r\n                      </div>\r\n                      \r\n                      <form onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        if (formData.type !== conge.type) {\r\n                          setFormData(prev => ({ ...prev, type: conge.type }));\r\n                        }\r\n                        setSubmitted(true);\r\n                      }}>\r\n                        <div style={styles.formGroup}>\r\n                          <label style={styles.label} htmlFor={`reason-${index}`}>\r\n                            Motif\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id={`reason-${index}`}\r\n                            name=\"reason\"\r\n                            value={formData.reason}\r\n                            onChange={handleChange}\r\n                            style={styles.input}\r\n                            placeholder=\"Pr√©cisez le motif de votre demande\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        \r\n                        <div style={styles.formGrid}>\r\n                          <div style={styles.formGroup}>\r\n                            <label style={styles.label} htmlFor={`startDate-${index}`}>\r\n                              Date de d√©but\r\n                            </label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id={`startDate-${index}`}\r\n                              name=\"startDate\"\r\n                              value={formData.startDate}\r\n                              onChange={handleChange}\r\n                              style={styles.input}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          \r\n                          <div style={styles.formGroup}>\r\n                            <label style={styles.label} htmlFor={`endDate-${index}`}>\r\n                              Date de fin\r\n                            </label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id={`endDate-${index}`}\r\n                              name=\"endDate\"\r\n                              value={formData.endDate}\r\n                              onChange={handleChange}\r\n                              style={styles.input}\r\n                              required\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        {formData.startDate && formData.endDate && (\r\n                          <div style={styles.alert}>\r\n                            <span style={styles.alertIcon}>‚ÑπÔ∏è</span>\r\n                            <p style={styles.alertText}>\r\n                              Dur√©e: <strong>{calculateDays()} jours</strong>\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                        \r\n                        <div style={styles.buttonContainer}>\r\n                          <button type=\"submit\" style={styles.button}>\r\n                            Demander ce cong√©\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div style={styles.noResults}>\r\n                <div style={styles.noResultsIcon}>üîé</div>\r\n                <p style={styles.noResultsText}>\r\n                  Aucun type de cong√© ne correspond √† votre recherche.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDemandeConge;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSocialTraffic.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardBarChart.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardTable.js",[],["247","248"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSettings.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPageVisits.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardLineChart.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardStats.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Maps\\MapExample.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\IndexDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\PagesDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\UserDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardRecrutement.js",["249","250"],"import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Edit, \r\n  Trash, \r\n  Plus, \r\n  X, \r\n  Search, \r\n  Filter,\r\n  Check\r\n} from 'lucide-react';\r\nimport axios from 'axios'; // Importation d'axios pour les requ√™tes HTTP\r\n\r\n// CSS encapsul√© avec pr√©fixe \"cr-\" (Card Recrutement)\r\nconst encapsulatedStyles = `\r\n  .cr-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n    font-family: 'Arial, sans-serif';\r\n  }\r\n  \r\n  .cr-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .cr-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .cr-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .cr-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .cr-add-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-add-button:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .cr-tab-button {\r\n    padding: 0.5rem 1rem;\r\n    border-bottom: 2px solid transparent;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-tab-button.cr-active {\r\n    border-bottom-color: #14b8a6;\r\n    color: #14b8a6;\r\n  }\r\n  \r\n  .cr-tab-button:hover:not(.cr-active) {\r\n    color: #374151;\r\n  }\r\n  \r\n  .cr-job-listing {\r\n    background: #f9fafb;\r\n    border-left: 5px solid #14b8a6;\r\n    margin: 1rem 0;\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    position: relative;\r\n  }\r\n  \r\n  .cr-job-title {\r\n    color: #14b8a6;\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.25rem;\r\n  }\r\n  \r\n  .cr-job-detail {\r\n    color: #4b5563;\r\n    margin: 0.5rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .cr-job-badge {\r\n    background-color: #e6fffa;\r\n    color: #047857;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .cr-action-buttons {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n  }\r\n  \r\n  .cr-action-button {\r\n    padding: 0.375rem;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-edit-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n  }\r\n  \r\n  .cr-edit-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n  \r\n  .cr-delete-button {\r\n    background-color: #fee2e2;\r\n    color: #ef4444;\r\n  }\r\n  \r\n  .cr-delete-button:hover {\r\n    background-color: #fecaca;\r\n  }\r\n  \r\n  .cr-modal-overlay {\r\n    position: fixed;\r\n    inset: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .cr-modal-container {\r\n    max-height: 90vh;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    width: 100%;\r\n    max-width: 500px;\r\n  }\r\n  \r\n  .cr-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .cr-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n    margin: 0;\r\n  }\r\n  \r\n  .cr-modal-close {\r\n    color: #6b7280;\r\n    transition: color 0.2s ease;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-modal-close:hover {\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .cr-form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .cr-form-label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .cr-form-input {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .cr-form-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .cr-form-select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .cr-modal-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .cr-btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-btn-cancel {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n  \r\n  .cr-btn-cancel:hover {\r\n    background-color: #e5e7eb;\r\n  }\r\n  \r\n  .cr-btn-save {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n  }\r\n  \r\n  .cr-btn-save:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .cr-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .cr-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .cr-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n  \r\n  .cr-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .cr-page-button {\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.875rem;\r\n    transition: all 0.2s ease;\r\n    background: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-page-button.cr-active {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    border-color: #14b8a6;\r\n  }\r\n  \r\n  .cr-page-button:hover:not(.cr-active) {\r\n    background-color: #f9fafb;\r\n  }\r\n`;\r\n\r\n// Configuration de base pour les appels API\r\nconst API_URL = 'http://localhost:5000'; // Ajustez selon votre configuration\r\n\r\n// Composant de toast pour les notifications\r\nconst Toast = ({ message, type, onClose }) => {\r\n  const toastClass = type === 'success' ? 'cr-toast-success' : 'cr-toast-error';\r\n  \r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onClose();\r\n    }, 3000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n  \r\n  return (\r\n    <div className={`cr-toast ${toastClass}`}>\r\n      {type === 'success' ? <Check size={20} /> : <X size={20} />}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardRecrutement = () => {\r\n  const [offers, setOffers] = useState([]);\r\n  const [filteredOffers, setFilteredOffers] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [locationFilter, setLocationFilter] = useState('all');\r\n  const [currentOffer, setCurrentOffer] = useState(null);\r\n  const [offerToDelete, setOfferToDelete] = useState(null);\r\n  const [toast, setToast] = useState({ show: false, message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Charger les offres depuis le backend au chargement du composant\r\n  useEffect(() => {\r\n    fetchOffers();\r\n  }, []);\r\n\r\n  // Fonction pour r√©cup√©rer les offres depuis l'API\r\n  const fetchOffers = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.get(`/alloffre`);\r\n      \r\n      // Transformer les donn√©es pour correspondre √† notre structure\r\n      const formattedOffers = response.data.map(offer => ({\r\n        id: offer._id,\r\n        title: offer.titre,\r\n        location: offer.lieu,\r\n        date: new Date(offer.date).toISOString().split('T')[0]\r\n      }));\r\n      \r\n      setOffers(formattedOffers);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des offres:', error);\r\n      setError('Impossible de charger les offres.');\r\n      setIsLoading(false);\r\n      showToast('Erreur lors du chargement des offres', 'error');\r\n    }\r\n  };\r\n\r\n  // Effet pour filtrer les offres bas√© sur les crit√®res de recherche et filtre\r\n  useEffect(() => {\r\n    let filtered = [...offers];\r\n    \r\n    // Filtre par lieu\r\n    if (locationFilter !== 'all') {\r\n      filtered = filtered.filter(offer => offer.location === locationFilter);\r\n    }\r\n    \r\n    // Filtre par recherche\r\n    if (searchTerm.trim() !== '') {\r\n      filtered = filtered.filter(offer => \r\n        offer.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    setFilteredOffers(filtered);\r\n  }, [offers, searchTerm, locationFilter]);\r\n\r\n  // Fonction pour afficher un toast\r\n  const showToast = (message, type) => {\r\n    setToast({ show: true, message, type });\r\n  };\r\n\r\n  // Fonction pour fermer le toast\r\n  const closeToast = () => {\r\n    setToast({ ...toast, show: false });\r\n  };\r\n\r\n  // Ouvrir le modal pour ajouter une offre\r\n  const handleAddOffer = () => {\r\n    setCurrentOffer({ title: '', location: '', date: new Date().toISOString().split('T')[0] });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Ouvrir le modal pour modifier une offre\r\n  const handleEditOffer = (offer) => {\r\n    setCurrentOffer({ ...offer });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Ouvrir le modal de confirmation de suppression\r\n  const handleDeleteOffer = (offer) => {\r\n    setOfferToDelete(offer);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  // Fermer les modals\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setCurrentOffer(null);\r\n  };\r\n\r\n  const handleCloseDeleteModal = () => {\r\n    setIsDeleteModalOpen(false);\r\n    setOfferToDelete(null);\r\n  };\r\n\r\n  // G√©rer les changements dans le formulaire\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentOffer({ ...currentOffer, [name]: value });\r\n  };\r\n\r\n  // Sauvegarder une offre (ajout ou modification)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentOffer.title || !currentOffer.location || !currentOffer.date) {\r\n      showToast(\"Veuillez remplir tous les champs\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Adapter le format des donn√©es pour correspondre au backend\r\n      const offerData = {\r\n        titre: currentOffer.title,\r\n        lieu: currentOffer.location,\r\n        date: currentOffer.date\r\n      };\r\n      \r\n      // V√©rifier si c'est une modification ou un ajout\r\n      if (currentOffer.id) {\r\n        // Modification\r\n        await axios.put(`/updateoffre/${currentOffer.id}`, offerData);\r\n        showToast(\"Offre modifi√©e avec succ√®s\", \"success\");\r\n      } else {\r\n        // Ajout\r\n        await axios.post(`/addoffre`, offerData);\r\n        showToast(\"Offre ajout√©e avec succ√®s\", \"success\");\r\n      }\r\n      \r\n      // Recharger les offres\r\n      fetchOffers();\r\n      setIsModalOpen(false);\r\n      setCurrentOffer(null);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde de l\\'offre:', error);\r\n      showToast(error.response?.data?.error || \"Une erreur est survenue\", \"error\");\r\n    }\r\n  };\r\n\r\n  // Confirmer la suppression d'une offre\r\n  const confirmDelete = async () => {\r\n    if (offerToDelete) {\r\n      try {\r\n        await axios.delete(`/deleteoffre/${offerToDelete.id}`);\r\n        showToast(\"Offre supprim√©e avec succ√®s\", \"success\");\r\n        \r\n        // Recharger les offres\r\n        fetchOffers();\r\n        setIsDeleteModalOpen(false);\r\n        setOfferToDelete(null);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression de l\\'offre:', error);\r\n        showToast(error.response?.data?.error || \"Une erreur est survenue lors de la suppression\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // G√©n√©rer les lieux uniques pour les filtres\r\n  const uniqueLocations = ['all', ...new Set(offers.map(offer => offer.location))];\r\n\r\n  // Formater la date pour l'affichage\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Injection du CSS */}\r\n      <div className={\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\"}>\r\n      <style>{encapsulatedStyles}</style>\r\n      \r\n      <div className=\"cr-container\">\r\n        <div className=\"cr-header-section\">\r\n          <h1 className=\"cr-modal-title\" style={{ fontSize: '1.5rem', marginBottom: '1.5rem' }}>\r\n            Offres d'Emploi\r\n          </h1>\r\n          \r\n          {/* Section de recherche et filtres */}\r\n          <div className=\"cr-search-container\">\r\n            <div className=\"cr-search-input\">\r\n              <div className=\"cr-search-icon\">\r\n                <Search size={20} />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher une offre...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"cr-form-input\"\r\n                style={{ paddingLeft: '2.5rem' }}\r\n              />\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n              <Filter size={20} style={{ color: '#9ca3af' }} />\r\n              <select \r\n                value={locationFilter} \r\n                onChange={(e) => setLocationFilter(e.target.value)}\r\n                className=\"cr-form-select\"\r\n              >\r\n                <option value=\"all\">Tous les lieux</option>\r\n                {uniqueLocations.filter(loc => loc !== 'all').map((location, idx) => (\r\n                  <option key={idx} value={location}>{location}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <button className=\"cr-add-button\" onClick={handleAddOffer}>\r\n              <Plus size={20} />\r\n              Ajouter une offre\r\n            </button>\r\n          </div>\r\n          \r\n          {/* √âtat de chargement */}\r\n          {isLoading ? (\r\n            <div style={{ textAlign: 'center', padding: '2rem 0', color: '#6b7280' }}>\r\n              Chargement des offres...\r\n            </div>\r\n          ) : error ? (\r\n            <div style={{ textAlign: 'center', padding: '2rem 0', color: '#ef4444' }}>\r\n              {error}\r\n            </div>\r\n          ) : (\r\n            /* Liste des offres */\r\n            filteredOffers.length > 0 ? (\r\n              filteredOffers.map((offer) => (\r\n                <div key={offer.id} className=\"cr-job-listing\">\r\n                  <h2 className=\"cr-job-title\">{offer.title}</h2>\r\n                  <div className=\"cr-job-detail\">\r\n                    <strong>Lieu:</strong>\r\n                    <span className=\"cr-job-badge\">{offer.location}</span>\r\n                  </div>\r\n                  <div className=\"cr-job-detail\">\r\n                    <strong>Date:</strong> {formatDate(offer.date)}\r\n                  </div>\r\n                  \r\n                  <div className=\"cr-action-buttons\">\r\n                    <button \r\n                      className=\"cr-action-button cr-edit-button\" \r\n                      onClick={() => handleEditOffer(offer)}\r\n                      title=\"Modifier l'offre\"\r\n                    >\r\n                      <Edit size={16} />\r\n                    </button>\r\n                    <button \r\n                      className=\"cr-action-button cr-delete-button\" \r\n                      onClick={() => handleDeleteOffer(offer)}\r\n                      title=\"Supprimer l'offre\"\r\n                    >\r\n                      <Trash size={16} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div style={{ textAlign: 'center', padding: '2rem 0', color: '#6b7280' }}>\r\n                Aucune offre trouv√©e\r\n              </div>\r\n            )\r\n          )}\r\n          \r\n          {/* Pagination */}\r\n          {!isLoading && !error && filteredOffers.length > 0 && (\r\n            <div className=\"cr-pagination\">\r\n              <div style={{ fontSize: '0.875rem', color: '#6b7280' }}>\r\n                Affichage de {filteredOffers.length} sur {offers.length} offres\r\n              </div>\r\n              <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n                <button className=\"cr-page-button\">\r\n                  Pr√©c√©dent\r\n                </button>\r\n                <button className=\"cr-page-button cr-active\">\r\n                  1\r\n                </button>\r\n                <button className=\"cr-page-button\">\r\n                  Suivant\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Modal pour ajouter/modifier une offre */}\r\n      {isModalOpen && (\r\n        <div className=\"cr-modal-overlay\">\r\n          <div className=\"cr-modal-container\">\r\n            <div className=\"cr-modal-header\">\r\n              <h2 className=\"cr-modal-title\">\r\n                {currentOffer.id ? \"Modifier une offre\" : \"Ajouter une offre\"}\r\n              </h2>\r\n              <button className=\"cr-modal-close\" onClick={handleCloseModal}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"cr-form-group\">\r\n                <label className=\"cr-form-label\">Titre de l'offre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"Ex: D√©veloppeur Frontend React\"\r\n                  className=\"cr-form-input\"\r\n                  value={currentOffer?.title || ''}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"cr-form-group\">\r\n                <label className=\"cr-form-label\">Lieu</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  placeholder=\"Ex: Paris, Remote, etc.\"\r\n                  className=\"cr-form-input\"\r\n                  value={currentOffer?.location || ''}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"cr-form-group\">\r\n                <label className=\"cr-form-label\">Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  className=\"cr-form-input\"\r\n                  value={currentOffer?.date || ''}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"cr-modal-footer\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"cr-btn cr-btn-cancel\" \r\n                  onClick={handleCloseModal}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"cr-btn cr-btn-save\"\r\n                >\r\n                  Sauvegarder\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Modal de confirmation de suppression */}\r\n      {isDeleteModalOpen && offerToDelete && (\r\n        <div className=\"cr-modal-overlay\">\r\n          <div className=\"cr-modal-container\">\r\n            <div className=\"cr-modal-header\">\r\n              <h2 className=\"cr-modal-title\">Confirmation de suppression</h2>\r\n              <button className=\"cr-modal-close\" onClick={handleCloseDeleteModal}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n            \r\n            <div>\r\n              <p style={{ marginBottom: '1.5rem', color: '#4b5563' }}>\r\n                √ätes-vous s√ªr de vouloir supprimer l'offre <strong>{offerToDelete.title}</strong> ?\r\n              </p>\r\n              \r\n              <div className=\"cr-modal-footer\">\r\n                <button \r\n                  className=\"cr-btn cr-btn-cancel\" \r\n                  onClick={handleCloseDeleteModal}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  className=\"cr-btn cr-btn-save\" \r\n                  onClick={confirmDelete}\r\n                  style={{ backgroundColor: '#ef4444' }}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Toast notifications */}\r\n      {toast.show && (\r\n        <Toast \r\n          message={toast.message} \r\n          type={toast.type} \r\n          onClose={closeToast} \r\n        />\r\n      )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardRecrutement;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPersonnels.js",["251"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDepartment.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardFormation.js",["252"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Composant principal\r\nfunction CardFormation() {\r\n  const [formations, setFormations] = useState([]);\r\n  const [filteredFormations, setFilteredFormations] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'asc' });\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currentFormation, setCurrentFormation] = useState({\r\n    id: null, titre: '', description: '', date: '', duree: 0, places: 0, inscrits: 0, statut: 'Programm√©e'\r\n  });\r\n  const [activeTab, setActiveTab] = useState('toutes');\r\n  const [confirmDeleteId, setConfirmDeleteId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Charger les formations depuis l'API\r\n  useEffect(() => {\r\n    const fetchFormations = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('/getformation');\r\n        \r\n        // Transformer les donn√©es pour correspondre √† notre structure frontend\r\n        const formattedData = response.data.map(formation => ({\r\n          id: formation._id,\r\n          titre: formation.titre,\r\n          description: formation.description,\r\n          date: new Date(formation.date).toISOString().split('T')[0],\r\n          duree: formation.dur√©e,\r\n          places: formation.nbplaces,\r\n          inscrits: formation.nbinscrits,\r\n          statut: formation.statut\r\n        }));\r\n        \r\n        setFormations(formattedData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Erreur lors du chargement des formations:\", err);\r\n        setError(\"Impossible de charger les formations. Veuillez r√©essayer plus tard.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFormations();\r\n  }, []);\r\n\r\n  // Filtrer les formations\r\n  useEffect(() => {\r\n    let result = [...formations];\r\n    \r\n    // Filtre par statut\r\n    if (activeTab !== 'toutes') {\r\n      result = result.filter(formation => {\r\n        if (activeTab === 'programmees') return formation.statut === 'Programm√©e';\r\n        if (activeTab === 'completes') return formation.statut === 'Compl√®te';\r\n        if (activeTab === 'terminees') return formation.statut === 'Termin√©e';\r\n        return true;\r\n      });\r\n    }\r\n    \r\n    // Filtre par recherche\r\n    if (searchTerm) {\r\n      result = result.filter(formation => \r\n        formation.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        formation.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // Tri\r\n    result.sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === 'asc' ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === 'asc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n    \r\n    setFilteredFormations(result);\r\n  }, [formations, searchTerm, sortConfig, activeTab]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setCurrentFormation({\r\n      id: null,\r\n      titre: '',\r\n      description: '',\r\n      date: '',\r\n      duree: 0,\r\n      places: 0,\r\n      inscrits: 0,\r\n      statut: 'Programm√©e'\r\n    });\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleEdit = (formation) => {\r\n    setCurrentFormation({...formation});\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`/deleteformation/${id}`);\r\n      setFormations(formations.filter(formation => formation.id !== id));\r\n      setConfirmDeleteId(null);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la suppression:\", err);\r\n      alert(\"Impossible de supprimer la formation. Veuillez r√©essayer.\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      // Pr√©parer les donn√©es pour l'API\r\n      const formationData = {\r\n        titre: currentFormation.titre,\r\n        description: currentFormation.description,\r\n        date: currentFormation.date,\r\n        dur√©e: currentFormation.duree,\r\n        nbplaces: currentFormation.places,\r\n        nbinscrits: currentFormation.inscrits,\r\n        statut: currentFormation.statut\r\n      };\r\n\r\n      if (currentFormation.id) {\r\n        // Mise √† jour\r\n        const response = await axios.put(`/updateformation/${currentFormation.id}`, formationData);\r\n        setFormations(formations.map(formation => \r\n          formation.id === currentFormation.id ? {\r\n            ...formation,\r\n            titre: currentFormation.titre,\r\n            description: currentFormation.description,\r\n            date: currentFormation.date,\r\n            duree: currentFormation.duree,\r\n            places: currentFormation.places,\r\n            inscrits: currentFormation.inscrits,\r\n            statut: currentFormation.statut\r\n          } : formation\r\n        ));\r\n      } else {\r\n        // Cr√©ation\r\n        const response = await axios.post('/addformation', formationData);\r\n        const newFormation = {\r\n          id: response.data._id,\r\n          titre: response.data.titre,\r\n          description: response.data.description,\r\n          date: new Date(response.data.date).toISOString().split('T')[0],\r\n          duree: response.data.dur√©e,\r\n          places: response.data.nbplaces,\r\n          inscrits: response.data.nbinscrits,\r\n          statut: response.data.statut\r\n        };\r\n        setFormations([...formations, newFormation]);\r\n      }\r\n      setModalOpen(false);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'enregistrement:\", err);\r\n      alert(\"Impossible d'enregistrer la formation. Veuillez v√©rifier les donn√©es et r√©essayer.\");\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (statut) => {\r\n    switch(statut) {\r\n      case 'Programm√©e': return 'status-blue';\r\n      case 'Compl√®te': return 'status-yellow';\r\n      case 'Termin√©e': return 'status-green';\r\n      default: return 'status-gray';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  // Affichage de chargement\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des formations...</p>\r\n        <style jsx>{`\r\n          .loading-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 300px;\r\n          }\r\n          .loading-spinner {\r\n            border: 4px solid #f3f3f3;\r\n            border-top: 4px solid #3b82f6;\r\n            border-radius: 50%;\r\n            width: 40px;\r\n            height: 40px;\r\n            animation: spin 1s linear infinite;\r\n            margin-bottom: 20px;\r\n          }\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Affichage d'erreur\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p className=\"error-message\">{error}</p>\r\n        <button className=\"retry-button\" onClick={() => window.location.reload()}>\r\n          R√©essayer\r\n        </button>\r\n        <style jsx>{`\r\n          .error-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 300px;\r\n            color: #ef4444;\r\n          }\r\n          .error-message {\r\n            margin-bottom: 20px;\r\n          }\r\n          .retry-button {\r\n            background-color: #3b82f6;\r\n            color: white;\r\n            border: none;\r\n            padding: 8px 16px;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"gp-header-section\">\r\n          <h1\r\n            className=\"gp-modal-title\"\r\n            style={{ fontSize: \"1.5rem\", marginBottom: \"\" }}\r\n          >\r\n            Gestion des Formations\r\n          </h1>\r\n        </div>\r\n          \r\n        <div className=\"card\">\r\n          <div className=\"toolbar\">\r\n            <div className=\"toolbar-left\">\r\n              <div className=\"search-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher une formation...\"\r\n                  className=\"search-input\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <div className=\"search-icon\">&#128269;</div>\r\n              </div>\r\n              <div className=\"tabs\">\r\n                <button \r\n                  className={`tab ${activeTab === 'toutes' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('toutes')}\r\n                >\r\n                  Toutes\r\n                </button>\r\n                <button \r\n                  className={`tab ${activeTab === 'programmees' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('programmees')}\r\n                >\r\n                  Programm√©es\r\n                </button>\r\n                <button \r\n                  className={`tab ${activeTab === 'completes' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('completes')}\r\n                >\r\n                  Compl√®tes\r\n                </button>\r\n                <button \r\n                  className={`tab ${activeTab === 'terminees' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('terminees')}\r\n                >\r\n                  Termin√©es\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button \r\n              className=\"btn-primary\"\r\n              onClick={handleAddNew}\r\n            >\r\n              <span className=\"icon\">+</span>\r\n              <span>Nouvelle formation</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Table */}\r\n          <div className=\"table-container\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"sortable\" onClick={() => requestSort('titre')}>\r\n                    <div className=\"th-content\">\r\n                      Titre\r\n                      {sortConfig.key === 'titre' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th className=\"sortable\" onClick={() => requestSort('date')}>\r\n                    <div className=\"th-content\">\r\n                      Date\r\n                      {sortConfig.key === 'date' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th className=\"sortable\" onClick={() => requestSort('duree')}>\r\n                    <div className=\"th-content\">\r\n                      Dur√©e\r\n                      {sortConfig.key === 'duree' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th className=\"sortable\" onClick={() => requestSort('places')}>\r\n                    <div className=\"th-content\">\r\n                      Places\r\n                      {sortConfig.key === 'places' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th>Statut</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredFormations.length > 0 ? (\r\n                  filteredFormations.map((formation) => (\r\n                    <tr key={formation.id}>\r\n                      <td>\r\n                        <div className=\"formation-title\">\r\n                          <span className=\"title\">{formation.titre}</span>\r\n                          <span className=\"description\">{formation.description}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"with-icon\">\r\n                          <span className=\"icon\">üìÖ</span>\r\n                          <span>{formatDate(formation.date)}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"with-icon\">\r\n                          <span className=\"icon\">‚è±Ô∏è</span>\r\n                          <span>{formation.duree} heures</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"with-icon\">\r\n                          <span className=\"icon\">üë•</span>\r\n                          <span>{formation.inscrits}/{formation.places}</span>\r\n                          {formation.inscrits === formation.places && (\r\n                            <span className=\"dot yellow-dot\"></span>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <span className={`status ${getStatusColor(formation.statut)}`}>\r\n                          {formation.statut}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        {confirmDeleteId === formation.id ? (\r\n                          <div className=\"action-buttons\">\r\n                            <button onClick={() => handleDelete(formation.id)} className=\"btn-confirm\">\r\n                              ‚úì Confirmer\r\n                            </button>\r\n                            <button onClick={() => setConfirmDeleteId(null)} className=\"btn-cancel\">\r\n                              ‚úï Annuler\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"action-buttons\">\r\n                            <button onClick={() => handleEdit(formation)} className=\"btn-edit\">\r\n                              ‚úé\r\n                            </button>\r\n                            <button onClick={() => setConfirmDeleteId(formation.id)} className=\"btn-delete\">\r\n                              üóëÔ∏è\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={6} className=\"empty-table\">\r\n                      Aucune formation trouv√©e\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"pagination\">\r\n            <div className=\"pagination-info\">\r\n              Affichage de <span className=\"bold\">{filteredFormations.length}</span> formation(s)\r\n            </div>\r\n            <div className=\"pagination-buttons\">\r\n              <button className=\"btn-page\" disabled={true}>\r\n                Pr√©c√©dent\r\n              </button>\r\n              <button className=\"btn-page\" disabled={true}>\r\n                Suivant\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modal */}\r\n        {modalOpen && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <h2>\r\n                  {currentFormation.id ? 'Modifier la formation' : 'Ajouter une formation'}\r\n                </h2>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Titre de la formation\r\n                    </label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      value={currentFormation.titre}\r\n                      onChange={(e) => setCurrentFormation({...currentFormation, titre: e.target.value})}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Description\r\n                    </label>\r\n                    <textarea \r\n                      className=\"form-control\"\r\n                      rows=\"3\"\r\n                      value={currentFormation.description}\r\n                      onChange={(e) => setCurrentFormation({...currentFormation, description: e.target.value})}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Date\r\n                      </label>\r\n                      <input \r\n                        type=\"date\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.date}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, date: e.target.value})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Dur√©e (heures)\r\n                      </label>\r\n                      <input \r\n                        type=\"number\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.duree}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, duree: parseInt(e.target.value) || 0})}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Nombre de places\r\n                      </label>\r\n                      <input \r\n                        type=\"number\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.places}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, places: parseInt(e.target.value) || 0})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Nombre d'inscrits\r\n                      </label>\r\n                      <input \r\n                        type=\"number\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.inscrits}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, inscrits: parseInt(e.target.value) || 0})}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Statut\r\n                    </label>\r\n                    <select \r\n                      className=\"form-control\"\r\n                      value={currentFormation.statut}\r\n                      onChange={(e) => setCurrentFormation({...currentFormation, statut: e.target.value})}\r\n                    >\r\n                      <option value=\"Programm√©e\">Programm√©e</option>\r\n                      <option value=\"Compl√®te\">Compl√®te</option>\r\n                      <option value=\"Termin√©e\">Termin√©e</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button \r\n                  className=\"btn-secondary\"\r\n                  onClick={() => setModalOpen(false)}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  className=\"btn-primary\"\r\n                  onClick={handleSave}\r\n                >\r\n                  {currentFormation.id ? 'Mettre √† jour' : 'Ajouter'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      {/* CSS int√©gr√© */}\r\n      <style jsx>{`\r\n        /* Styles g√©n√©raux */\r\n        .container {\r\n        background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n        }\r\n\r\n        .card {\r\n          max-width: 1200px;\r\n          margin: 0 auto;\r\n          background-color: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n          overflow: hidden;\r\n        }\r\n\r\n        /* Header */\r\n        .header {\r\n          padding: 20px;\r\n         \r\n        }\r\n\r\n     .header h1 {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    color: #1E3A8A;\r\n    font-size: 2.5em;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n    padding: 20px 0;\r\n    margin: 15px auto 30px;\r\n    position: relative;\r\n    display: inline-block;\r\n    background: linear-gradient(120deg, #E0E7FF 0%, #ffffff 100%);\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 15px rgba(30, 58, 138, 0.15);\r\n    width: 100%;\r\n    max-width: 800px;\r\n}\r\n\r\n.header h1::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -3px;\r\n    left: 10%;\r\n    width: 80%;\r\n    height: 4px;\r\n    background: linear-gradient(90deg, transparent, #1E3A8A, transparent);\r\n    border-radius: 2px;\r\n}\r\n\r\n.header h1::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: radial-gradient(circle at top right, rgba(224, 231, 255, 0.8), transparent 70%);\r\n    border-radius: 8px;\r\n    z-index: -1;\r\n}\r\n\r\n\r\n        .header p {\r\n          color: #64748b;\r\n          margin: 0;\r\n        }\r\n\r\n        .gp-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n        /* Toolbar */\r\n        .toolbar {\r\n          padding: 16px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          flex-wrap: wrap;\r\n          gap: 16px;\r\n        }\r\n\r\n        .toolbar-left {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 16px;\r\n          flex: 1;\r\n        }\r\n\r\n        .search-container {\r\n          position: relative;\r\n          min-width: 250px;\r\n        }\r\n\r\n        .search-input {\r\n          width: 100%;\r\n          padding: 8px 16px 8px 40px;\r\n          border: 1px solid #cbd5e1;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          transition: border-color 0.2s, box-shadow 0.2s;\r\n        }\r\n\r\n        .search-input:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        .search-icon {\r\n          position: absolute;\r\n          left: 12px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          color: #94a3b8;\r\n        }\r\n\r\n        .tabs {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .tab {\r\n          padding: 8px 16px;\r\n          border-radius: 6px;\r\n          background-color: #f1f5f9;\r\n          border: none;\r\n          color: #64748b;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s, color 0.2s;\r\n        }\r\n\r\n        .tab:hover {\r\n          background-color: #e2e8f0;\r\n        }\r\n\r\n        .tab.active {\r\n          background-color: #3b82f6;\r\n          color: white;\r\n        }\r\n        \r\n  .gp-header-section {\r\n    padding: 1.5rem;\r\n      \r\n  \r\n  }\r\n        .btn-primary {\r\n          background-color: #3b82f6;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 6px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .btn-primary:hover {\r\n          background-color: #2563eb;\r\n        }\r\n\r\n        .btn-primary .icon {\r\n          font-size: 18px;\r\n        }\r\n\r\n        /* Table */\r\n        .table-container {\r\n          overflow-x: auto;\r\n        }\r\n\r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n        }\r\n\r\n        th {\r\n          text-align: left;\r\n          padding: 12px 16px;\r\n          background-color: #f8fafc;\r\n          color: #64748b;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.05em;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        th.sortable {\r\n          cursor: pointer;\r\n        }\r\n\r\n        .th-content {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 4px;\r\n        }\r\n\r\n        .sort-icon {\r\n          display: inline-block;\r\n          font-size: 10px;\r\n        }\r\n\r\n        td {\r\n          padding: 16px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n          color: #334155;\r\n        }\r\n\r\n        tr:hover {\r\n          background-color: #f8fafc;\r\n        }\r\n\r\n        .formation-title {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        .formation-title .title {\r\n          font-weight: 500;\r\n          color: #1e293b;\r\n        }\r\n\r\n        .formation-title .description {\r\n          font-size: 14px;\r\n          color: #64748b;\r\n          margin-top: 4px;\r\n        }\r\n\r\n        .with-icon {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        .with-icon .icon {\r\n          color: #94a3b8;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .dot {\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          margin-left: 8px;\r\n        }\r\n\r\n        .yellow-dot {\r\n          background-color: #facc15;\r\n        }\r\n\r\n        .status {\r\n          display: inline-block;\r\n          padding: 4px 8px;\r\n          border-radius: 9999px;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n        }\r\n\r\n        .status-blue {\r\n          background-color: #dbeafe;\r\n          color: #1e40af;\r\n        }\r\n\r\n        .status-yellow {\r\n          background-color: #fef9c3;\r\n          color: #854d0e;\r\n        }\r\n\r\n        .status-green {\r\n          background-color: #dcfce7;\r\n          color: #166534;\r\n        }\r\n\r\n        .status-gray {\r\n          background-color: #f1f5f9;\r\n          color: #475569;\r\n        }\r\n\r\n        .action-buttons {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .btn-edit, .btn-delete {\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 16px;\r\n          padding: 4px;\r\n          border-radius: 4px;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .btn-edit {\r\n          color: #3b82f6;\r\n        }\r\n\r\n        .btn-edit:hover {\r\n          background-color: #dbeafe;\r\n        }\r\n\r\n        .btn-delete {\r\n          color: #ef4444;\r\n        }\r\n\r\n        .btn-delete:hover {\r\n          background-color: #fee2e2;\r\n        }\r\n\r\n        .btn-confirm, .btn-cancel {\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 4px;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .btn-confirm {\r\n          color: #ef4444;\r\n        }\r\n\r\n        .btn-confirm:hover {\r\n          background-color: #fee2e2;\r\n        }\r\n\r\n        .btn-cancel {\r\n          color: #64748b;\r\n        }\r\n\r\n        .btn-cancel:hover {\r\n          background-color: #f1f5f9;\r\n        }\r\n\r\n        .empty-table {\r\n          text-align: center;\r\n          color: #94a3b8;\r\n          padding: 32px;\r\n        }\r\n\r\n        /* Pagination */\r\n        .pagination {\r\n          padding: 16px;\r\n          border-top: 1px solid #e2e8f0;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .pagination-info {\r\n          font-size: 14px;\r\n          color: #64748b;\r\n        }\r\n\r\n        .pagination-info .bold {\r\n          font-weight: 600;\r\n          color: #334155;\r\n        }\r\n\r\n        .pagination-buttons {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .btn-page {\r\n          padding: 8px 16px;\r\n          background-color: white;\r\n          border: 1px solid #cbd5e1;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          color: #475569;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s, border-color 0.2s;\r\n        }\r\n\r\n        .btn-page:hover {\r\n          background-color: #f8fafc;\r\n          border-color: #94a3b8;\r\n        }\r\n\r\n        .btn-page:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        /* Modal */\r\n        .modal-overlay {\r\n          position: fixed;\r\n          inset: 0;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          padding: 16px;\r\n          z-index: 50;\r\n        }\r\n\r\n        .modal {\r\n          background-color: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n          max-width: 600px;\r\n          width: 100%;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n        }\r\n\r\n        .modal-header {\r\n          padding: 16px 24px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .modal-header h2 {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: #1e293b;\r\n          margin: 0;\r\n        }\r\n\r\n        .modal-body {\r\n          padding: 24px;\r\n        }\r\n\r\n        .modal-footer {\r\n          padding: 16px 24px;\r\n          border-top: 1px solid #e2e8f0;\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          gap: 12px;\r\n        }\r\n\r\n        .form-grid {\r\n          display: grid;\r\n          grid-template-columns: 1fr;\r\n          gap: 20px;\r\n        }\r\n\r\n        .form-row {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr;\r\n          gap: 16px;\r\n        }\r\n\r\n        .form-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .form-group label {\r\n          font-size: 14px;\r\n          font-weight: 500;\r\n          color: #475569;\r\n        }\r\n\r\n        .form-control {\r\n          padding: 8px 12px;\r\n          border: 1px solid #cbd5e1;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          color: #1e293b;\r\n          width: 100%;\r\n          transition: border-color 0.2s, box-shadow 0.2s;\r\n        }\r\n\r\n        .form-control:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        textarea.form-control {\r\n          min-height: 80px;\r\n          resize: vertical;\r\n        }\r\n\r\n        .btn-secondary {\r\n          background-color: white;\r\n          color: #475569;\r\n          border: 1px solid #cbd5e1;\r\n          padding: 8px 16px;\r\n          border-radius: 6px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s, border-color 0.2s;\r\n        }\r\n\r\n        .btn-secondary:hover {\r\n          background-color: #f8fafc;\r\n          border-color: #94a3b8;\r\n        }\r\n\r\n        /* Responsive */\r\n        @media (max-width: 768px) {\r\n          .toolbar {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n          }\r\n          \r\n          .toolbar-left {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .form-row {\r\n            grid-template-columns: 1fr;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardFormation;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeFormation.js",["253"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CardDemandeFormation() {\r\n  // √âtat pour stocker les formations\r\n  const [formations, setFormations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // √âtats pour le filtrage et la pagination\r\n  const [filteredFormations, setFilteredFormations] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(3);\r\n  \r\n  // √âtats pour la demande de formation\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedFormation, setSelectedFormation] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    nom: '',\r\n    prenom: '',\r\n    email: '',\r\n    departement: '',\r\n    justification: '',\r\n    formation: null\r\n  });\r\n  \r\n  // √âtat pour afficher la confirmation\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [demandes, setDemandes] = useState([]);\r\n\r\n  // R√©cup√©rer les formations depuis l'API\r\n  useEffect(() => {\r\n    const fetchFormations = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('/getformation');\r\n        \r\n        // Transformer les donn√©es pour correspondre √† la structure attendue\r\n        const formattedFormations = response.data.map(formation => ({\r\n          id: formation._id,\r\n          titre: formation.titre,\r\n          description: formation.description,\r\n          date: new Date(formation.date).toISOString().split('T')[0],\r\n          duree: formation.dur√©e,\r\n          places: formation.nbplaces,\r\n          inscrits: formation.nbinscrits,\r\n          statut: formation.statut,\r\n          placesRestantes: formation.nbplaces - formation.nbinscrits\r\n        }));\r\n        \r\n        setFormations(formattedFormations);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(\"Erreur lors du chargement des formations\");\r\n        setLoading(false);\r\n        console.error(\"Erreur lors de la r√©cup√©ration des formations:\", err);\r\n      }\r\n    };\r\n\r\n    fetchFormations();\r\n  }, []);\r\n\r\n  // Effet pour filtrer les formations\r\n  useEffect(() => {\r\n    let result = formations.filter(formation => \r\n      // Ne montrer que les formations programm√©es (pas compl√®tes ou termin√©es)\r\n      formation.statut === 'Programm√©e' && \r\n      // V√©rifier qu'il reste des places\r\n      formation.inscrits < formation.places\r\n    );\r\n    \r\n    // Filtrer par terme de recherche\r\n    if (searchTerm) {\r\n      result = result.filter(formation => \r\n        formation.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        formation.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // Filtrer par cat√©gorie\r\n    if (selectedCategory !== 'all') {\r\n      result = result.filter(formation => {\r\n        // Exemple de cat√©gorisation bas√©e sur les titres, peut √™tre remplac√© par une cat√©gorisation r√©elle\r\n        const title = formation.titre.toLowerCase();\r\n        if (selectedCategory === 'tech') {\r\n          return title.includes('react') || title.includes('excel') || title.includes('d√©veloppement');\r\n        }\r\n        if (selectedCategory === 'management') {\r\n          return title.includes('leadership') || title.includes('management');\r\n        }\r\n        if (selectedCategory === 'soft') {\r\n          return title.includes('communication') || title.includes('rgpd');\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n    \r\n    setFilteredFormations(result);\r\n  }, [formations, searchTerm, selectedCategory]);\r\n\r\n  // Calcul de la pagination\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentFormations = filteredFormations.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredFormations.length / itemsPerPage);\r\n\r\n  // Formatage de la date\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  // G√©rer la demande d'inscription √† une formation\r\n  const handleRequestFormation = (formation) => {\r\n    setSelectedFormation(formation);\r\n    setFormData({...formData, formation: formation});\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // G√©rer les changements dans le formulaire\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // Soumission du formulaire\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Cr√©er un objet demande\r\n    const newDemande = {\r\n      id: Date.now(),\r\n      ...formData,\r\n      status: 'En attente',\r\n      dateCreation: new Date().toISOString()\r\n    };\r\n    \r\n    // Ajouter la demande √† la liste\r\n    setDemandes([...demandes, newDemande]);\r\n    \r\n    // Fermer le modal et montrer la confirmation\r\n    setIsModalOpen(false);\r\n    setShowConfirmation(true);\r\n    \r\n    // R√©initialiser le formulaire\r\n    setFormData({\r\n      nom: '',\r\n      prenom: '',\r\n      email: '',\r\n      departement: '',\r\n      justification: '',\r\n      formation: null\r\n    });\r\n    \r\n    // Fermer la confirmation apr√®s 3 secondes\r\n    setTimeout(() => {\r\n      setShowConfirmation(false);\r\n    }, 3000);\r\n  };\r\n\r\n  // Afficher un message de chargement pendant la r√©cup√©ration des donn√©es\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des formations...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Afficher un message d'erreur si la r√©cup√©ration a √©chou√©\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p className=\"error-message\">{error}</p>\r\n        <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n          R√©essayer\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Header */}\r\n      <div className=\"header\">\r\n        <h1>Catalogue de formations</h1>\r\n        <p>D√©couvrez et inscrivez-vous aux formations disponibles</p>\r\n      </div>\r\n\r\n      {/* Filtres */}\r\n      <div className=\"filters\">\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Rechercher une formation...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n          <div className=\"search-icon\">üîç</div>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n\r\n      {/* Liste des formations */}\r\n      <div className=\"formations-grid\">\r\n        {currentFormations.length > 0 ? (\r\n          currentFormations.map(formation => (\r\n            <div key={formation.id} className=\"formation-card\">\r\n              <div className=\"formation-header\">\r\n                <h3>{formation.titre}</h3>\r\n                <span className={`places-badge ${formation.places - formation.inscrits <= 3 ? 'low-places' : ''}`}>\r\n                  {formation.places - formation.inscrits} places restantes\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"formation-content\">\r\n                <p className=\"formation-description\">{formation.description}</p>\r\n                \r\n                <div className=\"formation-details\">\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"detail-icon\">üìÖ</span>\r\n                    <span>{formatDate(formation.date)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"detail-icon\">‚è±Ô∏è</span>\r\n                    <span>{formation.duree} heures</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"detail-icon\">üë•</span>\r\n                    <span>{formation.inscrits}/{formation.places} participants</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"formation-footer\">\r\n                <button \r\n                  className=\"request-btn\"\r\n                  onClick={() => handleRequestFormation(formation)}\r\n                >\r\n                  Demander cette formation\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-formations\">\r\n            <p>Aucune formation disponible ne correspond √† vos crit√®res.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {filteredFormations.length > 0 && (\r\n        <div className=\"pagination\">\r\n          <button \r\n            className=\"page-btn\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage(currentPage - 1)}\r\n          >\r\n            Pr√©c√©dent\r\n          </button>\r\n          \r\n          <div className=\"page-info\">\r\n            Page {currentPage} sur {totalPages}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"page-btn\"\r\n            disabled={currentPage === totalPages}\r\n            onClick={() => setCurrentPage(currentPage + 1)}\r\n          >\r\n            Suivant\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de demande */}\r\n      {isModalOpen && selectedFormation && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h2>Demande de formation</h2>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setIsModalOpen(false)}\r\n              >\r\n                √ó\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-content\">\r\n              <div className=\"formation-info\">\r\n                <h3>{selectedFormation.titre}</h3>\r\n                <p>{formatDate(selectedFormation.date)} | {selectedFormation.duree} heures</p>\r\n              </div>\r\n              \r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"nom\">Nom</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"nom\"\r\n                      name=\"nom\"\r\n                      value={formData.nom}\r\n                      onChange={handleFormChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"prenom\">Pr√©nom</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"prenom\"\r\n                      name=\"prenom\"\r\n                      value={formData.prenom}\r\n                      onChange={handleFormChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email professionnel</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleFormChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"departement\">D√©partement</label>\r\n                  <select\r\n                    id=\"departement\"\r\n                    name=\"departement\"\r\n                    value={formData.departement}\r\n                    onChange={handleFormChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">S√©lectionnez votre d√©partement</option>\r\n                    <option value=\"IT\">IT & Digital</option>\r\n                    <option value=\"RH\">Ressources Humaines</option>\r\n                    <option value=\"Finance\">Finance & Comptabilit√©</option>\r\n                    <option value=\"Marketing\">Marketing & Communication</option>\r\n                    <option value=\"Operations\">Op√©rations</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"justification\">Justification de la demande</label>\r\n                  <textarea\r\n                    id=\"justification\"\r\n                    name=\"justification\"\r\n                    rows=\"4\"\r\n                    value={formData.justification}\r\n                    onChange={handleFormChange}\r\n                    placeholder=\"Expliquez en quoi cette formation contribuera √† vos objectifs professionnels...\"\r\n                    required\r\n                  ></textarea>\r\n                </div>\r\n                \r\n                <div className=\"modal-actions\">\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"cancel-btn\"\r\n                    onClick={() => setIsModalOpen(false)}\r\n                  >\r\n                    Annuler\r\n                  </button>\r\n                  <button \r\n                    type=\"submit\" \r\n                    className=\"submit-btn\"\r\n                  >\r\n                    Soumettre la demande\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Message de confirmation */}\r\n      {showConfirmation && (\r\n        <div className=\"confirmation-message\">\r\n          <div className=\"confirmation-content\">\r\n            <span className=\"confirmation-icon\">‚úì</span>\r\n            <p>Votre demande a √©t√© soumise avec succ√®s! Votre responsable sera inform√© de votre requ√™te.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Historique des demandes */}\r\n      {demandes.length > 0 && (\r\n        <div className=\"demandes-section\">\r\n          <h2>Mes demandes de formation</h2>\r\n          <div className=\"demandes-list\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Formation</th>\r\n                  <th>Date de la demande</th>\r\n                  <th>Statut</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {demandes.map(demande => (\r\n                  <tr key={demande.id}>\r\n                    <td>{demande.formation.titre}</td>\r\n                    <td>{new Date(demande.dateCreation).toLocaleDateString('fr-FR')}</td>\r\n                    <td>\r\n                      <span className={`status-badge ${demande.status.toLowerCase().replace(' ', '-')}`}>\r\n                        {demande.status}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style>\r\n        {`\r\n        /* Styles g√©n√©raux */\r\n        .container {\r\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n          max-width: 1200px\r\n          \r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          background-color: '#334155'\r\n          min-height: 100vh;\r\n        }\r\n\r\n        /* Header */\r\n        .header {\r\n          text-align: center;\r\n          margin-bottom: 40px;\r\n          padding: 20px 0;\r\n        }\r\n\r\n        .header h1 {\r\n          color: #1e40af;\r\n          font-size: 2.2rem;\r\n          margin-bottom: 10px;\r\n          position: relative;\r\n          display: inline-block;\r\n          padding-bottom: 15px;\r\n        }\r\n\r\n        .header h1::after {\r\n          content: \"\";\r\n          position: absolute;\r\n          bottom: 0;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          width: 60%;\r\n          height: 4px;\r\n          background: linear-gradient(90deg, #1e40af, #3b82f6);\r\n          border-radius: 2px;\r\n        }\r\n\r\n        .header p {\r\n          color: #6b7280;\r\n          font-size: 1.1rem;\r\n        }\r\n\r\n        /* Filtres */\r\n        .filters {\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          padding: 20px;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n          margin-bottom: 30px;\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 20px;\r\n          align-items: center;\r\n        }\r\n\r\n        .search-container {\r\n          flex: 1;\r\n          min-width: 200px;\r\n          position: relative;\r\n        }\r\n\r\n        .search-input {\r\n          width: 100%;\r\n          padding: 12px 20px 12px 45px;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 8px;\r\n          font-size: 1rem;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .search-input:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        .search-icon {\r\n          position: absolute;\r\n          left: 15px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          color: #9ca3af;\r\n        }\r\n\r\n        .category-filter {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          align-items: center;\r\n          gap: 10px;\r\n        }\r\n\r\n        .filter-label {\r\n          font-weight: 500;\r\n          color: #4b5563;\r\n        }\r\n\r\n        .filter-buttons {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 8px;\r\n        }\r\n\r\n        .category-btn {\r\n          padding: 8px 16px;\r\n          background-color: #f3f4f6;\r\n          border: 1px solid #e5e7eb;\r\n          border-radius: 6px;\r\n          color: #4b5563;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .category-btn:hover {\r\n          background-color: #e5e7eb;\r\n        }\r\n\r\n        .category-btn.active {\r\n          background-color: #3b82f6;\r\n          border-color: #3b82f6;\r\n          color: white;\r\n        }\r\n\r\n        /* Grille de formations */\r\n        .formations-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n          gap: 25px;\r\n          margin-bottom: 30px;\r\n        }\r\n\r\n        .formation-card {\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          overflow: hidden;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n          transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        .formation-card:hover {\r\n          transform: translateY(-5px);\r\n          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n        }\r\n\r\n        .formation-header {\r\n          padding: 20px;\r\n          background-color: #ebf5ff;\r\n          border-bottom: 1px solid #dbeafe;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .formation-header h3 {\r\n          margin: 0;\r\n          color: #1e40af;\r\n          font-size: 1.2rem;\r\n        }\r\n\r\n        .places-badge {\r\n          background-color: #bfdbfe;\r\n          color: #1e40af;\r\n          padding: 4px 8px;\r\n          border-radius: 999px;\r\n          font-size: 0.8rem;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .formation-content {\r\n          padding: 20px;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .formation-description {\r\n          margin-top: 0;\r\n          margin-bottom: 20px;\r\n          color: #4b5563;\r\n          line-height: 1.5;\r\n        }\r\n\r\n        .formation-details {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n          gap: 15px;\r\n        }\r\n\r\n        .detail-item {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n        }\r\n\r\n        .detail-icon {\r\n          font-size: 1.2rem;\r\n          color: #6b7280;\r\n        }\r\n\r\n        .formation-footer {\r\n          padding: 15px 20px;\r\n          background-color: #f9fafb;\r\n          border-top: 1px solid #e5e7eb;\r\n        }\r\n\r\n        .request-btn {\r\n          width: 100%;\r\n          padding: 10px;\r\n          background-color: #2563eb;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 6px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .request-btn:hover {\r\n          background-color: #1d4ed8;\r\n        }\r\n\r\n        .no-formations {\r\n          grid-column: 1 / -1;\r\n          padding: 40px;\r\n          text-align: center;\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .no-formations p {\r\n          color: #6b7280;\r\n          font-size: 1.1rem;\r\n        }\r\n\r\n        /* Pagination */\r\n        .pagination {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          gap: 15px;\r\n          margin-top: 30px;\r\n          margin-bottom: 30px;\r\n        }\r\n\r\n        .page-btn {\r\n          padding: 8px 16px;\r\n          background-color: white;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 6px;\r\n          color: #4b5563;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .page-btn:hover:not(:disabled) {\r\n          background-color: #f3f4f6;\r\n          border-color: #9ca3af;\r\n        }\r\n\r\n        .page-btn:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        .page-info {\r\n          color: #4b5563;\r\n          font-weight: 500;\r\n        }\r\n\r\n        /* Modal */\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          z-index: 1000;\r\n          padding: 20px;\r\n        }\r\n\r\n        .modal {\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          width: 100%;\r\n          max-width: 600px;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n          box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n        }\r\n\r\n        .modal-header {\r\n          padding: 20px;\r\n          border-bottom: 1px solid #e5e7eb;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .modal-header h2 {\r\n          margin: 0;\r\n          color: #1e40af;\r\n          font-size: 1.5rem;\r\n        }\r\n\r\n        .close-btn {\r\n          background: none;\r\n          border: none;\r\n          font-size: 1.5rem;\r\n          color: #6b7280;\r\n          cursor: pointer;\r\n          padding: 0;\r\n          line-height: 1;\r\n        }\r\n\r\n        .modal-content {\r\n          padding: 20px;\r\n        }\r\n\r\n        .formation-info {\r\n          margin-bottom: 20px;\r\n          padding: 15px;\r\n          background-color: #f3f4f6;\r\n          border-radius: 8px;\r\n        }\r\n\r\n        .formation-info h3 {\r\n          margin-top: 0;\r\n          margin-bottom: 10px;\r\n          color: #1e40af;\r\n        }\r\n\r\n        .formation-info p {\r\n          margin: 0;\r\n          color: #4b5563;\r\n        }\r\n\r\n        /* Form */\r\n        form {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 20px;\r\n        }\r\n\r\n        .form-row {\r\n          display: flex;\r\n          gap: 15px;\r\n        }\r\n\r\n        .form-group {\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        label {\r\n          font-weight: 500;\r\n          color: #4b5563;\r\n        }\r\n\r\n        input, select, textarea {\r\n          padding: 10px 12px;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 6px;\r\n          font-size: 1rem;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        input:focus, select:focus, textarea:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        textarea {\r\n          resize: vertical;\r\n          min-height: 100px;\r\n        }\r\n\r\n        .modal-actions {\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          gap: 12px;\r\n          margin-top: 10px;\r\n        }\r\n\r\n        .cancel-btn {\r\n          padding: 10px 20px;\r\n          background-color: white;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 6px;\r\n          color: #4b5563;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .cancel-btn:hover {\r\n          background-color: #f3f4f6;\r\n          border-color: #9ca3af;\r\n        }\r\n\r\n        .submit-btn {\r\n          padding: 10px 20px;\r\n          background-color: #2563eb;\r\n          border: none;\r\n          border-radius: 6px;\r\n          color: white;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .submit-btn:hover {\r\n          background-color: #1d4ed8;\r\n        }\r\n\r\n        /* Message de confirmation */\r\n        .confirmation-message {\r\n          position: fixed;\r\n          bottom: 30px;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          background-color: #34d399;\r\n          color: white;\r\n          border-radius: 12px;\r\n          padding: 5px;\r\n          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n          z-index: 1000;\r\n          animation: slideUp 0.3s ease, fadeOut 0.5s ease 2.5s;\r\n        }\r\n\r\n        .confirmation-content {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n          padding: 10px 20px;\r\n        }\r\n\r\n        .confirmation-icon {\r\n          font-size: 1.5rem;\r\n          background-color: white;\r\n          color: #34d399;\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 50%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        /* Historique des demandes */\r\n        .demandes-section {\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          padding: 20px;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n          margin-top: 40px;\r\n        }\r\n\r\n        .demandes-section h2 {\r\n          color: #1e40af;\r\n          margin-top: 0;\r\n          margin-bottom: 20px;\r\n          font-size: 1.5rem;\r\n        }\r\n\r\n        .demandes-list table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n        }\r\n\r\n        .demandes-list th {\r\n          text-align: left;\r\n          padding: 12px;\r\n          border-bottom: 2px solid #e5e7eb;\r\n          color: #4b5563;\r\n          font-weight: 600;\r\n        }\r\n\r\n        .demandes-list td {\r\n          padding: 12px;\r\n          border-bottom: 1px solid #e5e7eb;\r\n        }\r\n\r\n        .status-badge {\r\n          display: inline-block;\r\n          padding: 4px 8px;\r\n          border-radius: 999px;\r\n          font-size: 0.8rem;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .status-badge.en-attente {\r\n          background-color: #fef3c7;\r\n          color: #92400e;\r\n        }\r\n\r\n        /* Animations */\r\n        @keyframes slideUp {\r\n          from {\r\n            transform: translate(-50%, 100%);\r\n            opacity: 0;\r\n          }\r\n          to {\r\n            transform: translate(-50%, 0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @keyframes fadeOut {\r\n          from {\r\n            opacity: 1;\r\n          }\r\n          to {\r\n            opacity: 0;\r\n          }\r\n        }\r\n\r\n        /* Responsive */\r\n        @media (max-width: 768px) {\r\n          .formations-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .form-row {\r\n            flex-direction: column;\r\n          }\r\n\r\n          .filters {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n          }\r\n        }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardDemandeFormation;\r\n\r\n","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeAvance.js",["254"],"import React, { useState } from 'react';\r\n\r\nconst CardDemandeAvance = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    employeeId: '',\r\n    amount: '',\r\n    reason: '',\r\n    urgency: 'standard'\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Ici, vous impl√©menteriez la logique pour soumettre la demande\r\n    console.log('Demande soumise:', formData);\r\n    alert('Votre demande d\\'avance sur salaire a √©t√© soumise avec succ√®s!');\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      width: '100%',\r\n      margin: '0 auto',\r\n      padding: '10px',\r\n      backgroundColor: '#f5f7fa',\r\n      fontFamily: 'Arial, sans-serif'\r\n    },\r\n    header: {\r\n      textAlign: 'center',\r\n      marginBottom: '40px',\r\n      padding: '20px 0' \r\n    },\r\n    title: {\r\n      fontSize: '38px',\r\n      fontWeight: '700',\r\n      color: '#1e40af',\r\n      margin: '0 0 10px 0',\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n      paddingBottom: '15px',\r\n      fontWeight: 'inherit',\r\n    },\r\n    titleAfter: {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      width: '60%',\r\n      height: '4px',\r\n      background: 'linear-gradient(90deg, #1e40af, #3b82f6)',\r\n      borderRadius: '2px'\r\n    },\r\n    subtitle: {\r\n      fontSize: '17px',\r\n      color: '#64748b',\r\n      marginTop: '10px',\r\n      margin: '0',\r\n      letterSpacing: '0.3px'\r\n    },\r\n    form: {\r\n      backgroundColor: '#ffffff',\r\n      borderRadius: '6px',\r\n      padding: '15px',\r\n      boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\r\n    },\r\n    formGroup: {\r\n      marginBottom: '12px'\r\n    },\r\n    label: {\r\n      display: 'block',\r\n      marginBottom: '4px',\r\n      fontWeight: '500',\r\n      fontSize: '13px',\r\n      color: '#334155'\r\n    },\r\n    input: {\r\n      width: '100%',\r\n      padding: '8px',\r\n      borderRadius: '4px',\r\n      border: '1px solid #e2e8f0',\r\n      fontSize: '13px'\r\n    },\r\n    select: {\r\n      width: '100%',\r\n      padding: '8px',\r\n      borderRadius: '4px',\r\n      border: '1px solid #e2e8f0',\r\n      fontSize: '13px',\r\n      backgroundColor: '#fff'\r\n    },\r\n    textarea: {\r\n      width: '100%',\r\n      padding: '8px',\r\n      borderRadius: '4px',\r\n      border: '1px solid #e2e8f0',\r\n      fontSize: '13px',\r\n      minHeight: '80px',\r\n      resize: 'vertical'\r\n    },\r\n    infoText: {\r\n      fontSize: '11px',\r\n      color: '#64748b',\r\n      marginTop: '3px'\r\n    },\r\n    submitBtn: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      backgroundColor: '#2563eb',\r\n      color: '#ffffff',\r\n      borderRadius: '4px',\r\n      fontWeight: '500',\r\n      border: 'none',\r\n      cursor: 'pointer',\r\n      fontSize: '14px'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.header}>\r\n        <h1 style={styles.title}>\r\n          Demande d'avance sur salaire\r\n          <span style={styles.titleAfter}></span>\r\n        </h1>\r\n      </div>\r\n\r\n      <form style={styles.form} onSubmit={handleSubmit}>\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label} htmlFor=\"fullName\">Nom complet</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            style={styles.input}\r\n            value={formData.fullName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label} htmlFor=\"employeeId\">Identifiant employ√©</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"employeeId\"\r\n            name=\"employeeId\"\r\n            style={styles.input}\r\n            value={formData.employeeId}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label} htmlFor=\"amount\">Montant demand√© (TND)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            style={styles.input}\r\n            value={formData.amount}\r\n            onChange={handleChange}\r\n            required\r\n            min=\"1\"\r\n          />\r\n          <p style={styles.infoText}>Le montant maximum est de 30% de votre salaire mensuel</p>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label} htmlFor=\"urgency\">Type de demande</label>\r\n          <select\r\n            id=\"urgency\"\r\n            name=\"urgency\"\r\n            style={styles.select}\r\n            value={formData.urgency}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"standard\">Standard (traitement sous 3 jours)</option>\r\n            <option value=\"urgent\">Urgente (traitement sous 24h)</option>\r\n            <option value=\"exceptional\">Exceptionnelle (√©valuation sous 5 jours)</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label} htmlFor=\"reason\">Motif de la demande</label>\r\n          <textarea\r\n            id=\"reason\"\r\n            name=\"reason\"\r\n            style={styles.textarea}\r\n            value={formData.reason}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button \r\n          type=\"submit\" \r\n          style={styles.submitBtn}\r\n          onMouseOver={(e) => e.target.style.backgroundColor = '#1d4ed8'}\r\n          onMouseOut={(e) => e.target.style.backgroundColor = '#2563eb'}\r\n        >\r\n          Soumettre ma demande\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDemandeAvance;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\TableDropdown.js",[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":14},{"ruleId":"259","severity":1,"message":"263","line":6,"column":8,"nodeType":"261","messageId":"262","endLine":6,"endColumn":15},{"ruleId":"259","severity":1,"message":"264","line":2,"column":25,"nodeType":"261","messageId":"262","endLine":2,"endColumn":33},{"ruleId":"259","severity":1,"message":"265","line":11,"column":8,"nodeType":"261","messageId":"262","endLine":11,"endColumn":14},{"ruleId":"266","severity":1,"message":"267","line":129,"column":6,"nodeType":"268","endLine":129,"endColumn":31,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":27,"column":15,"nodeType":"272","endLine":27,"endColumn":75},{"ruleId":"273","severity":1,"message":"274","line":27,"column":15,"nodeType":"272","endLine":27,"endColumn":75},{"ruleId":"270","severity":1,"message":"271","line":28,"column":15,"nodeType":"272","endLine":28,"endColumn":74},{"ruleId":"273","severity":1,"message":"274","line":28,"column":15,"nodeType":"272","endLine":28,"endColumn":74},{"ruleId":"270","severity":1,"message":"271","line":29,"column":15,"nodeType":"272","endLine":29,"endColumn":73},{"ruleId":"273","severity":1,"message":"274","line":29,"column":15,"nodeType":"272","endLine":29,"endColumn":73},{"ruleId":"259","severity":1,"message":"275","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":19},{"ruleId":"259","severity":1,"message":"276","line":7,"column":3,"nodeType":"261","messageId":"262","endLine":7,"endColumn":6},{"ruleId":"259","severity":1,"message":"277","line":1,"column":27,"nodeType":"261","messageId":"262","endLine":1,"endColumn":36},{"ruleId":"278","severity":1,"message":"279","line":43,"column":3,"nodeType":"280","messageId":"281","endLine":43,"endColumn":13},{"ruleId":"259","severity":1,"message":"282","line":345,"column":9,"nodeType":"261","messageId":"262","endLine":345,"endColumn":21},{"ruleId":"255","replacedBy":"283"},{"ruleId":"257","replacedBy":"284"},{"ruleId":"259","severity":1,"message":"285","line":321,"column":7,"nodeType":"261","messageId":"262","endLine":321,"endColumn":14},{"ruleId":"266","severity":1,"message":"286","line":359,"column":6,"nodeType":"268","endLine":359,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":205,"column":42,"nodeType":"290","messageId":"291","endLine":205,"endColumn":44},{"ruleId":"259","severity":1,"message":"292","line":139,"column":15,"nodeType":"261","messageId":"262","endLine":139,"endColumn":23},{"ruleId":"259","severity":1,"message":"293","line":13,"column":28,"nodeType":"261","messageId":"262","endLine":13,"endColumn":47},{"ruleId":"278","severity":1,"message":"279","line":48,"column":7,"nodeType":"280","messageId":"281","endLine":48,"endColumn":17},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'Signin' is defined but never used.","Identifier","unusedVar","'Postule' is defined but never used.","'Redirect' is defined but never used.","'Forget' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applyFilters'. Either include it or remove the dependency array.","ArrayExpression",["296"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'HeaderStats' is defined but never used.","'Eye' is defined but never used.","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'fontWeight'.","ObjectExpression","unexpected","'handleSubmit' is assigned a value but never used.",["294"],["295"],"'API_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOffers'. Either include it or remove the dependency array.",["297"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'response' is assigned a value but never used.","'setSelectedCategory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [applyFilters, dateFilter, jobListings]",{"range":"302","text":"303"},"Update the dependencies array to be: [fetchOffers]",{"range":"304","text":"305"},[4081,4106],"[applyFilters, dateFilter, jobListings]",[7647,7649],"[fetchOffers]"]