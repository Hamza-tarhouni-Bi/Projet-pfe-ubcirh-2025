[{"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\index.js":"1","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Profile.js":"2","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Landing.js":"3","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Index.js":"4","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Admin.js":"5","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Auth.js":"6","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Test.js":"7","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Postule.js":"8","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Employe.js":"9","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signup.js":"10","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\TestForm.js":"11","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signin.js":"12","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Maps.js":"13","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Dashboard.js":"14","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Tables.js":"15","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Settings.js":"16","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\IndexNavbar.js":"17","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AuthNavbar.js":"18","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\Footer.js":"19","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\FooterAdmin.js":"20","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Headers\\HeaderStats.js":"21","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AdminNavbar.js":"22","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\forget.js":"24","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Recrutement.js":"25","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Personnels.js":"26","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Departement.js":"27","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Cong√©.js":"28","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Formation.js":"29","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeFormation.js":"30","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\SettingsEmploye.js":"31","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\SlidebarEmploye.js":"32","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeAvance.js":"33","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeConge.js":"34","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSocialTraffic.js":"35","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardBarChart.js":"36","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardTable.js":"37","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSettings.js":"38","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPageVisits.js":"39","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardLineChart.js":"40","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardStats.js":"41","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Maps\\MapExample.js":"42","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\IndexDropdown.js":"43","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\PagesDropdown.js":"44","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\NotificationDropdown.js":"45","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\UserDropdown.js":"46","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardRecrutement.js":"47","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPersonnels.js":"48","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDepartment.js":"49","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardFormation.js":"50","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeFormation.js":"51","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeAvance.js":"52","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\TableDropdown.js":"53","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Condidature.js":"54","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardCondidature.js":"55","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardProfile.js":"56","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Forget.js":"57","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\DemandeF.js":"58","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\DemandeA.js":"59","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\DemandeC.js":"60"},{"size":1192,"mtime":1745774363146,"results":"61","hashOfConfig":"62"},{"size":6604,"mtime":1741431010756,"results":"63","hashOfConfig":"62"},{"size":27259,"mtime":1741431010756,"results":"64","hashOfConfig":"62"},{"size":2142,"mtime":1745799625799,"results":"65","hashOfConfig":"62"},{"size":2515,"mtime":1745968590179,"results":"66","hashOfConfig":"62"},{"size":684,"mtime":1745793608302,"results":"67","hashOfConfig":"62"},{"size":5369,"mtime":1743809094069,"results":"68","hashOfConfig":"62"},{"size":29201,"mtime":1745915739607,"results":"69","hashOfConfig":"62"},{"size":1539,"mtime":1745682320143,"results":"70","hashOfConfig":"62"},{"size":8733,"mtime":1742861437019,"results":"71","hashOfConfig":"62"},{"size":5078,"mtime":1742520569715,"results":"72","hashOfConfig":"62"},{"size":12534,"mtime":1746020769401,"results":"73","hashOfConfig":"62"},{"size":444,"mtime":1741431010757,"results":"74","hashOfConfig":"62"},{"size":1067,"mtime":1743701116584,"results":"75","hashOfConfig":"62"},{"size":26896,"mtime":1745964712790,"results":"76","hashOfConfig":"62"},{"size":375,"mtime":1745773788021,"results":"77","hashOfConfig":"62"},{"size":3407,"mtime":1745713341681,"results":"78","hashOfConfig":"62"},{"size":1138,"mtime":1742030410813,"results":"79","hashOfConfig":"62"},{"size":7192,"mtime":1744061726167,"results":"80","hashOfConfig":"62"},{"size":895,"mtime":1742218811241,"results":"81","hashOfConfig":"62"},{"size":3952,"mtime":1745968224007,"results":"82","hashOfConfig":"62"},{"size":848,"mtime":1743717836528,"results":"83","hashOfConfig":"62"},{"size":13513,"mtime":1745968651692,"results":"84","hashOfConfig":"62"},{"size":2404,"mtime":1741431010758,"results":"85","hashOfConfig":"62"},{"size":199,"mtime":1742947662951,"results":"86","hashOfConfig":"62"},{"size":357,"mtime":1742516294347,"results":"87","hashOfConfig":"62"},{"size":294,"mtime":1742309635114,"results":"88","hashOfConfig":"62"},{"size":8146,"mtime":1745778206822,"results":"89","hashOfConfig":"62"},{"size":337,"mtime":1745236991061,"results":"90","hashOfConfig":"62"},{"size":300,"mtime":1743699950581,"results":"91","hashOfConfig":"62"},{"size":214,"mtime":1743810790877,"results":"92","hashOfConfig":"62"},{"size":7810,"mtime":1745681706680,"results":"93","hashOfConfig":"62"},{"size":243,"mtime":1743810665950,"results":"94","hashOfConfig":"62"},{"size":16089,"mtime":1746144012202,"results":"95","hashOfConfig":"62"},{"size":7759,"mtime":1741564694275,"results":"96","hashOfConfig":"62"},{"size":3562,"mtime":1741431010747,"results":"97","hashOfConfig":"62"},{"size":20942,"mtime":1741431010749,"results":"98","hashOfConfig":"99"},{"size":29638,"mtime":1745873549232,"results":"100","hashOfConfig":"62"},{"size":6405,"mtime":1742216514480,"results":"101","hashOfConfig":"62"},{"size":3776,"mtime":1741431010747,"results":"102","hashOfConfig":"62"},{"size":2574,"mtime":1741431010749,"results":"103","hashOfConfig":"62"},{"size":2413,"mtime":1741431010753,"results":"104","hashOfConfig":"62"},{"size":3805,"mtime":1741741857414,"results":"105","hashOfConfig":"62"},{"size":4046,"mtime":1741431010750,"results":"106","hashOfConfig":"62"},{"size":2481,"mtime":1741431010750,"results":"107","hashOfConfig":"62"},{"size":2434,"mtime":1743717986858,"results":"108","hashOfConfig":"62"},{"size":21208,"mtime":1745625623021,"results":"109","hashOfConfig":"62"},{"size":27769,"mtime":1745674777991,"results":"110","hashOfConfig":"62"},{"size":16856,"mtime":1746014141680,"results":"111","hashOfConfig":"62"},{"size":32704,"mtime":1745243500433,"results":"112","hashOfConfig":"62"},{"size":17555,"mtime":1746113675745,"results":"113","hashOfConfig":"62"},{"size":11535,"mtime":1746144154345,"results":"114","hashOfConfig":"62"},{"size":2092,"mtime":1741431010750,"results":"115","hashOfConfig":"99"},{"size":288,"mtime":1745418166978,"results":"116","hashOfConfig":"62"},{"size":23393,"mtime":1745794648659,"results":"117","hashOfConfig":"62"},{"size":3759,"mtime":1741479703307,"results":"118","hashOfConfig":"62"},{"size":2404,"mtime":1745793547832,"results":"119","hashOfConfig":"62"},{"size":14152,"mtime":1746034158013,"results":"120","hashOfConfig":"62"},{"size":24448,"mtime":1746029109995,"results":"121","hashOfConfig":"62"},{"size":24491,"mtime":1746147017141,"results":"122","hashOfConfig":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"dzmoog",{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"125"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"125"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"125"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"125"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"1in0o1e",{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"125"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"125"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"125"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"125"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"125"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"125"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\index.js",[],["261","262"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Profile.js",[],["263","264"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Landing.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Index.js",["265","266"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport Signin from \"./auth/Signin\";\r\nimport Postule from \"./Postule\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <IndexNavbar fixed />\r\n      <section className=\"header relative pt-16 items-center flex h-screen max-h-860-px\">\r\n        <div className=\"container mx-auto items-center flex flex-wrap\">\r\n          <div className=\"w-full md:w-8/12 lg:w-6/12 xl:w-6/12 px-4\">\r\n            <div className=\"pt-32 sm:pt-0\">\r\n              <h2 className=\"font-semibold text-4xl text-blueGray-600\">\r\n               BIENVENUE SUR UBCI HR MANAGER\r\n              </h2>\r\n              <p className=\"mt-4 text-lg leading-relaxed text-blueGray-500\">\r\n              UBCI RH est un site web d√©di√© √† la gestion des ressources humaines de la banque UBCI, facilitant le suivi du personnel, la gestion des cong√©s et l'automatisation des t√¢ches administratives.\r\n              </p>\r\n              <div className=\"mt-12\">\r\n                <Link\r\n                  to=\"/postule\"\r\n                  className=\"get-started text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-lightBlue-500 active:bg-lightBlue-600 uppercase text-sm shadow hover:shadow-lg ease-linear transition-all duration-150\"\r\n                >\r\n                  Postuler\r\n                </Link>\r\n                <Link\r\n                  to=\"/signin\"\r\n                  className=\"github-star ml-1 text-white font-bold px-6 py-4 rounded outline-none focus:outline-none mr-1 mb-1 bg-blueGray-700 active:bg-blueGray-600 uppercase text-sm shadow hover:shadow-lg ease-linear transition-all duration-150\"\r\n                >\r\n                  Mon Espace\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <img\r\n          className=\"absolute top-0 right-0 pt-1 sm:w-6/12 sm:max-h-full -mt-48 sm:mt-0 w-full h-full object-cover\"\r\n          src={require(\"assets/img/ubci.jpg\").default}\r\n          alt=\"...\"\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Admin.js",["267"],"import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport HeaderStats from \"components/Headers/HeaderStats.js\";\r\nimport FooterAdmin from \"components/Footers/FooterAdmin.js\";\r\n\r\n\r\n// views\r\n\r\nimport Dashboard from \"views/admin/Dashboard.js\";\r\nimport Maps from \"views/admin/Maps.js\";\r\nimport Settings from \"views/admin/Settings.js\";\r\nimport Tables from \"views/admin/Tables.js\";\r\nimport Personnels from \"views/admin/Personnels\";\r\nimport Departement from \"views/admin/Departement\";\r\nimport Cong√© from \"views/admin/Cong√©\";\r\nimport Formation from \"views/admin/Formation\";\r\nimport Recrutement from \"views/Recrutement\";\r\nimport DemandeFormation from \"views/employe/DemandeFormation\";\r\nimport Condidature from \"views/admin/Condidature\";\r\nimport DemandeF from \"views/admin/DemandeF\";\r\nimport DemandeA from \"views/admin/DemandeA\";\r\nimport DemandeC from \"views/admin/DemandeC\";\r\nexport default function Admin() {\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <div className=\"relative md:ml-64 bg-blueGray-100\">\r\n     \r\n        \r\n       <HeaderStats />\r\n        <div className=\"px-4 md:px-10 mx-auto w-full -m-24\">\r\n          <Switch>\r\n            <Route path=\"/admin/dashboard\" exact component={Dashboard} />\r\n            <Route path=\"/admin/personnels\" exact component={Personnels} />\r\n            <Route path=\"/admin/departement\" exact component={Departement} />\r\n            <Route path=\"/admin/cong√©\" exact component={Cong√©} />\r\n            <Route path=\"/admin/formation\" exact component={Formation} />\r\n            <Route path=\"/admin/demandeformation\" exact component={DemandeFormation} />\r\n           <Route path=\"/admin/maps\" exact component={Maps} />\r\n            <Route path=\"/admin/settings\" exact component={Settings} />\r\n            <Route path=\"/admin/tables\" exact component={Tables} />\r\n            <Route path=\"/admin/recrutement\" exact component={Recrutement} />\r\n            <Route path=\"/admin/demandef\" exact component={DemandeF} />\r\n            <Route path=\"/admin/demandea\" exact component={DemandeA} />\r\n            <Route path=\"/admin/demandec\" exact component={DemandeC} />\r\n\r\n            \r\n            <Route path=\"/admin/condidature\" exact component={Condidature} />\r\n           <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\r\n          </Switch>\r\n          <FooterAdmin />\r\n     </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Auth.js",["268"],"import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\nimport Navbar from \"components/Navbars/IndexNavbar\";\r\n\r\n\r\n// views\r\nimport Signin from \"views/auth/Signin\";\r\nimport Signup from \"views/auth/Signup\";\r\n\r\n\r\nexport default function Auth() {\r\n  return (\r\n    <>\r\n      <Navbar transparent />\r\n      <main>\r\n      \r\n          \r\n          <Switch>\r\n            <Route path=\"/auth/signin\" exact component={Signin} />\r\n           \r\n            <Route path=\"/auth/signup\" exact component={Signup} />\r\n            \r\n          \r\n         \r\n            \r\n           \r\n          </Switch>\r\n       \r\n        \r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Test.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Postule.js",["269","270"],"import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"components/Navbars/IndexNavbar\";\r\nimport axios from \"axios\"; // Make sure axios is installed\r\n\r\nconst Postule = () => {\r\n  // State for job listings and search\r\n  const [jobListings, setJobListings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // State for modal and selected job\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [fileName, setFileName] = useState(\"Aucun fichier s√©lectionn√©\");\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  // Form data state\r\n  const [formData, setFormData] = useState({\r\n    prenom: \"\",\r\n    nom: \"\",\r\n    adresse: \"\",\r\n    email: \"\",\r\n    tel: \"\",\r\n    cv: null\r\n  });\r\n\r\n  // Search and filter states\r\n  const [dateFilter, setDateFilter] = useState(\"N'importe quand\");\r\n  const [isDateExpanded, setIsDateExpanded] = useState(true);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitSuccess, setSubmitSuccess] = useState(false);\r\n  const [submitError, setSubmitError] = useState(\"\");\r\n\r\n  // Fetch job listings from backend\r\n  useEffect(() => {\r\n    const fetchJobListings = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get('/alloffre');\r\n        \r\n        // Transform data to match our component's expected format\r\n        const formattedJobs = response.data.map(job => ({\r\n          id: job._id,\r\n          title: job.titre,\r\n          location: job.lieu,\r\n          date: formatDate(new Date(job.date))\r\n        }));\r\n        \r\n        setJobListings(formattedJobs);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error(\"Error fetching job listings:\", err);\r\n        setError(\"Une erreur s'est produite lors du chargement des offres d'emploi.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobListings();\r\n  }, []);\r\n\r\n  // Helper function to format date as DD/MM/YYYY\r\n  const formatDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  // Function to toggle date filter section\r\n  const toggleDateSection = () => {\r\n    setIsDateExpanded(!isDateExpanded);\r\n  };\r\n\r\n  // Reset all filters\r\n  const resetFilters = () => {\r\n    setDateFilter(\"N'importe quand\");\r\n    setSearchKeyword(\"\");\r\n    setFilteredJobs([]);\r\n    setHasSearched(false);\r\n  };\r\n\r\n  // Function for exact match search\r\n  const exactMatch = (text, query) => {\r\n    if (!query || query.trim() === \"\") return true;\r\n\r\n    const formattedText = text.toLowerCase();\r\n    const formattedQuery = query.toLowerCase().trim();\r\n\r\n    const queryWords = formattedQuery.split(/\\s+/);\r\n\r\n    return queryWords.every((word) => {\r\n      const regex = new RegExp(`\\\\b${word}\\\\b`, \"i\");\r\n      return regex.test(formattedText);\r\n    });\r\n  };\r\n\r\n  // Apply filters function\r\n  const applyFilters = () => {\r\n    let results = [...jobListings];\r\n    \r\n    if (searchKeyword && searchKeyword.trim() !== \"\") {\r\n      results = results.filter((job) => exactMatch(job.title, searchKeyword));\r\n    }\r\n\r\n    if (dateFilter === \"Sous 30 jours\") {\r\n      const today = new Date();\r\n      const thirtyDaysAgo = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 30);\r\n\r\n      results = results.filter((job) => {\r\n        const [day, month, year] = job.date.split(\"/\");\r\n        const jobDate = new Date(year, month - 1, day);\r\n\r\n        return jobDate >= thirtyDaysAgo && jobDate <= today;\r\n      });\r\n    }\r\n\r\n    setFilteredJobs(results);\r\n    setHasSearched(true);\r\n  };\r\n\r\n  // Handle search form submission\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    applyFilters();\r\n  };\r\n\r\n  // Handle date filter change\r\n  const handleDateFilterChange = (newDateFilter) => {\r\n    setDateFilter(newDateFilter);\r\n    // This will trigger the useEffect to apply filters\r\n  };\r\n\r\n  // Apply filters when dateFilter changes\r\n  useEffect(() => {\r\n    if (jobListings.length > 0) {\r\n      applyFilters();\r\n    }\r\n  }, [dateFilter, jobListings]);\r\n\r\n  // Open application modal\r\n  const openApplicationModal = (job) => {\r\n    setSelectedJob(job);\r\n    setIsModalOpen(true);\r\n    setFileError(\"\"); // Reset file error when opening modal\r\n    setFormData({\r\n      prenom: \"\",\r\n      nom: \"\",\r\n      adresse: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cv: \"\",\r\n      posteId: job.id, // Ajout de l'ID du poste\r\n      posteTitle: job.title // Ajout du titre du poste\r\n    });\r\n    setSubmitSuccess(false);\r\n    setSubmitError(\"\");\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedJob(null);\r\n    setFileName(\"Aucun fichier s√©lectionn√©\");\r\n    setFileError(\"\"); // Reset file error when closing modal\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // Handle file upload with PDF validation\r\n  const handleFileChange = (e) => {\r\n    setFileError(\"\"); // Reset error message\r\n    \r\n    if (e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n      \r\n      // Check if file is PDF\r\n      if (file.type !== 'application/pdf') {\r\n        setFileError(\"Erreur: Veuillez ne s√©lectionner que des fichiers PDF.\");\r\n        e.target.value = ''; // Clear the file input\r\n        setFileName(\"Aucun fichier s√©lectionn√©\");\r\n        setFormData({\r\n          ...formData,\r\n          cv: null\r\n        });\r\n        return;\r\n      }\r\n      \r\n      setFileName(file.name);\r\n      setFormData({\r\n        ...formData,\r\n        cv: file\r\n      });\r\n    } else {\r\n      setFileName(\"Aucun fichier s√©lectionn√©\");\r\n      setFormData({\r\n        ...formData,\r\n        cv: null\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.cv) {\r\n      setFileError(\"Erreur: Veuillez t√©l√©charger votre CV et lettre de motivation.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      // Create a FormData object to send the file\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"nom\", formData.nom);\r\n      formDataToSend.append(\"prenom\", formData.prenom);\r\n      formDataToSend.append(\"adresse\", formData.adresse);\r\n      formDataToSend.append(\"email\", formData.email);\r\n      formDataToSend.append(\"tel\", formData.tel);\r\n      // Ajouter l'ID et le titre du poste\r\n      formDataToSend.append(\"posteId\", formData.posteId); \r\n      formDataToSend.append(\"posteTitle\", formData.posteTitle);\r\n      formDataToSend.append(\"cv\", formData.cv);\r\n      \r\n      // Send the data to the backend\r\n      const response = await axios.post('/addcondidature', formDataToSend, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      setSubmitSuccess(true);\r\n      \r\n      // Reset form after successful submission\r\n      setTimeout(() => {\r\n        closeModal();\r\n      }, 2000);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error submitting application:\", err);\r\n      setSubmitError(\"Une erreur s'est produite lors de l'envoi de votre candidature. Veuillez r√©essayer.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  // Trigger the file input when clicking on the upload area\r\n  const triggerFileInput = () => {\r\n    document.getElementById(\"file-upload-input\").click();\r\n  };\r\n\r\n  const displayedJobs = hasSearched ? filteredJobs : jobListings;\r\n\r\n  // Count jobs that are within 30 days\r\n  const countJobsWithin30Days = () => {\r\n    const today = new Date();\r\n    const thirtyDaysAgo = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 30);\r\n\r\n    return jobListings.filter((job) => {\r\n      const [day, month, year] = job.date.split(\"/\");\r\n      const jobDate = new Date(year, month - 1, day);\r\n      return jobDate >= thirtyDaysAgo && jobDate <= today;\r\n    }).length;\r\n  };\r\n\r\n  const jobsWithin30DaysCount = countJobsWithin30Days();\r\n\r\n  return (\r\n    <div className=\"careers-page\">\r\n      <Navbar />\r\n      \r\n      {/* Banner and search bar */}\r\n      <div className=\"banner\">\r\n        <div className=\"search-container\">\r\n          <form onSubmit={handleSearch}>\r\n            <div className=\"search-bar\">\r\n              <div className=\"search-input-container\">\r\n                <span className=\"search-icon\">üîç</span>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"Saisissez un titre de poste ou un mot-cl√©\"\r\n                  value={searchKeyword}\r\n                  onChange={(e) => setSearchKeyword(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"search-button\">\r\n                Rechercher\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n        <div className=\"filters-container\">\r\n          {/* Filters section */}\r\n          <div className=\"filters-header\">\r\n            <h2>Filtres</h2>\r\n            <button className=\"reset-button\" onClick={resetFilters}>\r\n              R√©initialiser\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"filter-section\">\r\n            <div className=\"filter-header\" onClick={toggleDateSection}>\r\n              <h3>Date de publication</h3>\r\n              <span className={`arrow ${isDateExpanded ? \"expanded\" : \"\"}`}>\r\n                ‚ñº\r\n              </span>\r\n            </div>\r\n\r\n            {isDateExpanded && (\r\n              <div className=\"filter-options\">\r\n                <label className=\"filter-radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"dateFilter\"\r\n                    checked={dateFilter === \"Sous 30 jours\"}\r\n                    onChange={() => handleDateFilterChange(\"Sous 30 jours\")}\r\n                  />\r\n                  Sous 30 jours ({jobsWithin30DaysCount})\r\n                </label>\r\n                <label className=\"filter-radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"dateFilter\"\r\n                    checked={dateFilter === \"N'importe quand\"}\r\n                    onChange={() => handleDateFilterChange(\"N'importe quand\")}\r\n                  />\r\n                  N'importe quand ({jobListings.length})\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"job-listings-container\">\r\n          <h1>Postes √† pourvoir actuellement</h1>\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading-state\">\r\n              <p>Chargement des offres d'emploi...</p>\r\n            </div>\r\n          ) : error ? (\r\n            <div className=\"error-state\">\r\n              <p>{error}</p>\r\n              <button \r\n                className=\"retry-button\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                R√©essayer\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {hasSearched && (\r\n                <div className=\"search-results-info\">\r\n                  <p>\r\n                    {filteredJobs.length} offre(s) d'emploi trouv√©e(s){\" \"}\r\n                    {searchKeyword && `pour \"${searchKeyword}\"`}\r\n                    {dateFilter === \"Sous 30 jours\" && \" des 30 derniers jours\"}\r\n                  </p>\r\n                  {filteredJobs.length === 0 && (\r\n                    <p className=\"no-results\">\r\n                      Aucun r√©sultat trouv√©. Veuillez essayer d'autres crit√®res de\r\n                      recherche.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"job-cards\">\r\n                {displayedJobs.length === 0 && !isLoading ? (\r\n                  <p className=\"no-jobs\">Aucune offre d'emploi disponible pour le moment.</p>\r\n                ) : (\r\n                  displayedJobs.map((job) => (\r\n                    <div className=\"job-card\" key={job.id}>\r\n                      <div className=\"job-card-content\">\r\n                        <h3 className=\"job-title\">{job.title}</h3>\r\n                        <div className=\"job-details\">\r\n                          <p className=\"job-location\">{job.location}</p>\r\n                          <p className=\"job-date\">{job.date}</p>\r\n                        </div>\r\n                      </div>\r\n                      <button \r\n                        className=\"postuler-button\"\r\n                        onClick={() => openApplicationModal(job)}\r\n                      >\r\n                        Postuler\r\n                      </button>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for job application */}\r\n      {isModalOpen && selectedJob && (\r\n        <div className=\"modal-overlay\" onClick={closeModal}>\r\n          <div \r\n            className=\"modal-content\" \r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <button className=\"modal-close\" onClick={closeModal}>√ó</button>\r\n            <div className=\"modal-title\">\r\n              <h2>Candidature pour {selectedJob.title}</h2>\r\n            </div>\r\n            \r\n            {submitSuccess ? (\r\n              <div className=\"success-message\">\r\n                <p>Votre candidature a √©t√© envoy√©e avec succ√®s!</p>\r\n              </div>\r\n            ) : (\r\n              <form onSubmit={handleSubmit}>\r\n                {submitError && (\r\n                  <div className=\"submit-error\">\r\n                    <p>{submitError}</p>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"form-section\">\r\n                  <label>Nom complet</label> \r\n                  <div className=\"name-inputs\">\r\n                    <input \r\n                      type=\"text\" \r\n                      name=\"prenom\" \r\n                      placeholder=\"Pr√©nom\" \r\n                      value={formData.prenom}\r\n                      onChange={handleInputChange}\r\n                      required \r\n                    />\r\n                    <input \r\n                      type=\"text\" \r\n                      name=\"nom\" \r\n                      placeholder=\"Nom de famille\" \r\n                      value={formData.nom}\r\n                      onChange={handleInputChange}\r\n                      required \r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <label>Adresse actuelle</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"adresse\" \r\n                    placeholder=\"Adresse\" \r\n                    className=\"mb-3\" \r\n                    value={formData.adresse}\r\n                    onChange={handleInputChange}\r\n                    required \r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <label>Adresse E-mail</label>\r\n                  <input \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    placeholder=\"Pr√©nom@gmail.com\" \r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    required \r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <label>Num√©ro de t√©l√©phone</label>\r\n                  <div className=\"phone-input\">\r\n                    <input \r\n                      type=\"text\" \r\n                      name=\"tel\" \r\n                      placeholder=\"Num√©ro de t√©l√©phone\" \r\n                      value={formData.tel}\r\n                      onChange={handleInputChange}\r\n                      required \r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <label>D√©posez votre CV  (format PDF uniquement)</label>\r\n                  <div className={`file-upload ${fileError ? \"file-error\" : \"\"}`} onClick={triggerFileInput}>\r\n                    <input \r\n                      type=\"file\" \r\n                      id=\"file-upload-input\" \r\n                      accept=\".pdf,application/pdf\" \r\n                      onChange={handleFileChange}\r\n                    />\r\n                    <div className=\"file-upload-content\">\r\n                      <span className=\"upload-icon\">üìÅ</span>\r\n                      <span className=\"browse-text\">Parcourir les fichiers PDF</span>\r\n                      <p className=\"selected-files\">{fileName}</p>\r\n                      {fileError && <p className=\"error-message\">{fileError}</p>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"submit-application\" \r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? \"Envoi en cours...\" : \"Postuler\"}\r\n                </button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <style jsx>{`\r\n        * {\r\n          margin: 0;\r\n          padding: 0;\r\n          box-sizing: border-box;\r\n          font-family: Arial, sans-serif;\r\n        }\r\n        \r\n        .careers-page {\r\n          width: 100%;\r\n          background-color: #f5f5f5;\r\n          min-height: 100vh;\r\n        }\r\n        \r\n        .banner {\r\n          width: 100%;\r\n          height: 380px;\r\n          background-image: url('https://ubci.csod.com/clientimg/ubci/careersite/banner/Backgroundpicture_6372a143-698a-40dd-99a1-fcbf9c1d104e.jpg');\r\n          background-size: cover;\r\n          background-position: center;\r\n          position: relative;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n        \r\n        .banner::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: rgba(0, 0, 0, 0.3);\r\n        }\r\n        \r\n        .search-container {\r\n          width: 100%;\r\n          max-width: 800px;\r\n          padding: 0 20px;\r\n          z-index: 10;\r\n        }\r\n        \r\n        .search-bar {\r\n          display: flex;\r\n          background: white;\r\n          border-radius: 4px;\r\n          overflow: hidden;\r\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n        \r\n        .search-input-container {\r\n          flex: 1;\r\n          display: flex;\r\n          align-items: center;\r\n          padding: 0 15px;\r\n        }\r\n        \r\n        .search-icon {\r\n          margin-right: 10px;\r\n          color: #777;\r\n        }\r\n        \r\n        .search-input {\r\n          flex: 1;\r\n          padding: 15px 0;\r\n          border: none;\r\n          font-size: 16px;\r\n          outline: none;\r\n        }\r\n        \r\n        .search-input:focus {\r\n          outline: none;\r\n          box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n        }\r\n        \r\n        .search-button {\r\n          padding: 0 30px;\r\n          background-color: #0052cc;\r\n          color: white;\r\n          border: none;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n        \r\n        .search-button:hover {\r\n          background-color: #003d99;\r\n        }\r\n        \r\n        .content-container {\r\n          display: flex;\r\n          max-width: 1200px;\r\n          margin: 30px auto;\r\n          padding: 0 20px;\r\n        }\r\n        \r\n        .filters-container {\r\n          width: 300px;\r\n          background-color: white;\r\n          border-radius: 4px;\r\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n          padding: 15px;\r\n          margin-right: 20px;\r\n          height: fit-content;\r\n        }\r\n        \r\n        .filters-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        .filters-header h2 {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: #333;\r\n        }\r\n        \r\n        .reset-button {\r\n          color: #1a73e8;\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .filter-section {\r\n          margin-bottom: 15px;\r\n          border-bottom: 1px solid #e0e0e0;\r\n          padding-bottom: 15px;\r\n        }\r\n        \r\n        .filter-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          cursor: pointer;\r\n        }\r\n        \r\n        .filter-header h3 {\r\n          font-size: 16px;\r\n          font-weight: normal;\r\n          color: #333;\r\n        }\r\n        \r\n        .arrow {\r\n          font-size: 12px;\r\n          transition: transform 0.3s;\r\n        }\r\n        \r\n        .arrow.expanded {\r\n          transform: rotate(180deg);\r\n        }\r\n        \r\n        .filter-options {\r\n          margin-top: 10px;\r\n        }\r\n        \r\n        .filter-radio {\r\n          display: flex;\r\n          align-items: center;\r\n          margin-bottom: 8px;\r\n          font-size: 14px;\r\n          color: #555;\r\n        }\r\n        \r\n        .filter-radio input {\r\n          margin-right: 8px;\r\n        }\r\n        \r\n        .job-listings-container {\r\n          flex: 1;\r\n        }\r\n        \r\n        .job-listings-container h1 {\r\n          font-size: 22px;\r\n          color: #333;\r\n          margin-bottom: 20px;\r\n          font-weight: normal;\r\n        }\r\n        \r\n        .search-results-info {\r\n          margin-bottom: 15px;\r\n          font-size: 14px;\r\n          color: #555;\r\n        }\r\n        \r\n        .no-results {\r\n          color: #d32f2f;\r\n          margin-top: 5px;\r\n        }\r\n        \r\n        .job-cards {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        \r\n        .job-card {\r\n          background-color: white;\r\n          border-radius: 4px;\r\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n          padding: 15px;\r\n          margin-bottom: 10px;\r\n          cursor: pointer;\r\n          transition: transform 0.2s;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n        \r\n        .job-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\r\n        }\r\n        \r\n        .job-title {\r\n          color: #1a73e8;\r\n          font-size: 16px;\r\n          margin-bottom: 8px;\r\n          font-weight: normal;\r\n        }\r\n        \r\n        .job-details {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        \r\n        .job-location, .job-date {\r\n          font-size: 14px;\r\n          color: #555;\r\n          margin-bottom: 3px;\r\n        }\r\n\r\n        .postuler-button {\r\n          background-color:#2563eb;\r\n          color: white;\r\n          border: none;\r\n          padding: 10px 20px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n\r\n        .postuler-button:hover {\r\n          background-color: #2563eb;\r\n        }\r\n\r\n        .loading-state, .error-state, .no-jobs {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          flex-direction: column;\r\n          padding: 40px 0;\r\n          color: #555;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .error-state {\r\n          color: #d32f2f;\r\n        }\r\n\r\n        .retry-button {\r\n          margin-top: 15px;\r\n          padding: 8px 16px;\r\n          background-color: #1a73e8;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n\r\n        .retry-button:hover {\r\n          background-color: #0d47a1;\r\n        }\r\n\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          z-index: 1000;\r\n        }\r\n\r\n        .modal-content {\r\n          background: white;\r\n          padding: 30px;\r\n          border-radius: 8px;\r\n          width: 100%;\r\n          max-width: 600px;\r\n          max-height: 80vh;\r\n          overflow-y: auto;\r\n          position: relative;\r\n        }\r\n\r\n        .modal-close {\r\n          position: absolute;\r\n          top: 10px;\r\n          right: 10px;\r\n          font-size: 24px;\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          z-index: 1001;\r\n        }\r\n\r\n        .modal-title {\r\n          text-align: center;\r\n          margin-bottom: 25px;\r\n          padding-bottom: 15px;\r\n          \r\n        }\r\n\r\n        .modal-title h2 {\r\n          font-size: 22px;\r\n          color: #1a73e8;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .form-section {\r\n          margin-bottom: 25px;\r\n        }\r\n\r\n        .form-section label {\r\n          display: block;\r\n          margin-bottom: 10px;\r\n          font-weight: bold;\r\n          color: #333;\r\n        }\r\n\r\n        .form-section input,\r\n        .form-section select {\r\n          width: 100%;\r\n          padding: 12px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .form-section input:focus,\r\n        .form-section select:focus {\r\n          outline: none;\r\n          border-color: #1a73e8;\r\n          box-shadow: 0 0 0 2px rgba(26, 115, 232, 0.2);\r\n        }\r\n\r\n        .name-inputs,\r\n        .address-details,\r\n        .phone-input {\r\n          display: flex;\r\n          gap: 15px;\r\n        }\r\n\r\n        .name-inputs input,\r\n        .address-details input,\r\n        .phone-input input,\r\n        .phone-input select {\r\n          flex: 1;\r\n        }\r\n\r\n        .country-code {\r\n          width: 40%;\r\n          flex: 0.4;\r\n        }\r\n\r\n        .file-upload {\r\n          border: 2px dashed #1a73e8;\r\n          padding: 20px;\r\n          text-align: center;\r\n          cursor: pointer;\r\n          border-radius: 4px;\r\n          background-color: #f5f9ff;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .file-upload:hover {\r\n          background-color: #e8f1fe;\r\n          border-color: #0d47a1;\r\n        }\r\n\r\n        .file-upload.file-error {\r\n          border-color: #d32f2f;\r\n          background-color: #fff5f5;\r\n        }\r\n\r\n        .file-upload input[type=\"file\"] {\r\n          display: none;\r\n        }\r\n\r\n        .file-upload-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          gap: 10px;\r\n        }\r\n\r\n        .upload-icon {\r\n          font-size: 24px;\r\n          color: #1a73e8;\r\n        }\r\n\r\n        .browse-text {\r\n          color: #1a73e8;\r\n          font-weight: bold;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .selected-files {\r\n          font-size: 14px;\r\n          color: #555;\r\n          margin-top: 5px;\r\n          word-break: break-word;\r\n        }\r\n\r\n        .error-message {\r\n          color: #d32f2f;\r\n          font-size: 14px;\r\n          margin-top: 5px;\r\n        }\r\n\r\n        .submit-application {\r\n          width: 100%;\r\n          padding: 15px;\r\n          background-color: #1a73e8;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .submit-application:hover {\r\n          background-color: #0d47a1;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .search-bar {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .search-button {\r\n            padding: 15px 0;\r\n          }\r\n          \r\n          .content-container {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .filters-container {\r\n            width: 100%;\r\n            margin-right: 0;\r\n            margin-bottom: 20px;\r\n          }\r\n          \r\n          .job-listings-container {\r\n            width: 100%;\r\n          }\r\n\r\n          .name-inputs,\r\n          .address-details,\r\n          .phone-input {\r\n            flex-direction: column;\r\n            gap: 10px;\r\n          }\r\n\r\n          .modal-content {\r\n            padding: 20px;\r\n            max-height: 90vh;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postule;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\layouts\\Employe.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signup.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\TestForm.js",["271","272","273","274","275","276"],"import React from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\n\r\nconst TestForm = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"screen\">\r\n        <div className=\"screen__content\">\r\n          <form className=\"login\">\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-user\"></i>\r\n              <input type=\"text\" className=\"login__input\" placeholder=\"User name / Email\" />\r\n            </div>\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-lock\"></i>\r\n              <input type=\"password\" className=\"login__input\" placeholder=\"Password\" />\r\n            </div>\r\n            <button className=\"button login__submit\">\r\n              <span className=\"button__text\">Log In Now</span>\r\n              <i className=\"button__icon fas fa-chevron-right\"></i>\r\n            </button>\r\n          </form>\r\n          <div className=\"social-login\">\r\n            <h3>log in via</h3>\r\n            <div className=\"social-icons\">\r\n              <a href=\"#\" className=\"social-login__icon fab fa-instagram\"></a>\r\n              <a href=\"#\" className=\"social-login__icon fab fa-facebook\"></a>\r\n              <a href=\"#\" className=\"social-login__icon fab fa-twitter\"></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"screen__background\">\r\n          <span className=\"screen__background__shape screen__background__shape4\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape3\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape2\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape1\"></span>\r\n        </div>\r\n      </div>\r\n      <style>\r\n        {`\r\n          @import url('https://fonts.googleapis.com/css?family=Raleway:400,700');\r\n          * {\r\n            box-sizing: border-box;\r\n            margin: 0;\r\n            padding: 0;\r\n            font-family: Raleway, sans-serif;\r\n          }\r\n          body {\r\n            background: linear-gradient(90deg, #C7C5F4, #776BCC);\r\n          }\r\n          .container {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            min-height: 100vh;\r\n          }\r\n          .screen {\r\n            background: linear-gradient(90deg, #5D54A4, #7C78B8);\r\n            position: relative;\r\n            height: 600px;\r\n            width: 360px;\r\n            box-shadow: 0px 0px 24px #5C5696;\r\n          }\r\n          .screen__content {\r\n            z-index: 1;\r\n            position: relative;\r\n            height: 100%;\r\n          }\r\n          .login {\r\n            width: 320px;\r\n            padding: 30px;\r\n            padding-top: 156px;\r\n          }\r\n          .login__field {\r\n            padding: 20px 0px;\r\n            position: relative;\r\n          }\r\n          .login__icon {\r\n            position: absolute;\r\n            top: 30px;\r\n            color: #7875B5;\r\n          }\r\n          .login__input {\r\n            border: none;\r\n            border-bottom: 2px solid #D1D1D4;\r\n            background: none;\r\n            padding: 10px;\r\n            padding-left: 24px;\r\n            font-weight: 700;\r\n            width: 75%;\r\n            transition: .2s;\r\n          }\r\n          .login__input:active,\r\n          .login__input:focus,\r\n          .login__input:hover {\r\n            outline: none;\r\n            border-bottom-color: #6A679E;\r\n          }\r\n          .login__submit {\r\n            background: #fff;\r\n            font-size: 14px;\r\n            margin-top: 30px;\r\n            padding: 16px 20px;\r\n            border-radius: 26px;\r\n            border: 1px solid #D4D3E8;\r\n            text-transform: uppercase;\r\n            font-weight: 700;\r\n            display: flex;\r\n            align-items: center;\r\n            width: 100%;\r\n            color: #4C489D;\r\n            box-shadow: 0px 2px 2px #5C5696;\r\n            cursor: pointer;\r\n            transition: .2s;\r\n          }\r\n          .login__submit:active,\r\n          .login__submit:focus,\r\n          .login__submit:hover {\r\n            border-color: #6A679E;\r\n            outline: none;\r\n          }\r\n          .button__icon {\r\n            font-size: 24px;\r\n            margin-left: auto;\r\n            color: #7875B5;\r\n          }\r\n          .social-login {\r\n            position: absolute;\r\n            height: 140px;\r\n            width: 160px;\r\n            text-align: center;\r\n            bottom: 0px;\r\n            right: 0px;\r\n            color: #fff;\r\n          }\r\n          .social-icons {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n          }\r\n          .social-login__icon {\r\n            padding: 20px 10px;\r\n            color: #fff;\r\n            text-decoration: none;\r\n            text-shadow: 0px 0px 8px #7875B5;\r\n          }\r\n          .social-login__icon:hover {\r\n            transform: scale(1.5);\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestForm;\r\n","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Signin.js",["277","278"],"import React, { useState } from 'react';\r\nimport './Auth.css';\r\nimport Navbar from 'components/Navbars/IndexNavbar';\r\nimport axios from 'axios';\r\n// Support for both React Router v5 and v6\r\nimport { useHistory } from 'react-router-dom'; // For React Router v5\r\n\r\nconst Signin = () => {\r\n  const history = useHistory(); // Initialize history for redirection in React Router v5\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [loginMessage, setLoginMessage] = useState('');\r\n  const [loginSuccess, setLoginSuccess] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    // Password must be at least 8 characters and contain both letters and numbers\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({\r\n      ...credentials,\r\n      [name]: value\r\n    });\r\n    // Clear any previous error/success messages when user starts typing again\r\n    setError('');\r\n    setLoginMessage('');\r\n    setLoginSuccess(false);\r\n    setShowAlert(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoginMessage('');\r\n    setShowAlert(false);\r\n    \r\n    // Check if email is empty\r\n    if (!credentials.email) {\r\n      setError('Veuillez saisir votre adresse email.');\r\n      return;\r\n    }\r\n    \r\n    // Check if password is empty\r\n    if (!credentials.password) {\r\n      setError('Veuillez saisir votre mot de passe.');\r\n      return;\r\n    }\r\n    \r\n    // Validate email format\r\n    if (!validateEmail(credentials.email)) {\r\n      setError('Veuillez saisir une adresse email valide.');\r\n      return;\r\n    }\r\n    \r\n    // Start login request\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n     \r\n      const apiUrl = '/login'; \r\n      console.log('Sending login request to:', apiUrl);\r\n      \r\n      const response = await axios.post(apiUrl, credentials);\r\n      console.log('Login response:', response.data);\r\n      \r\n      // Handle successful login\r\n      setIsLoading(false);\r\n      setLoginSuccess(true);\r\n      \r\n      // Handle redirection based on user role\r\n      if (response.data && response.data.personnel) {\r\n        localStorage.setItem('userData', JSON.stringify(response.data.personnel));\r\n        const role = response.data.personnel.role || 'inconnu';\r\n        const message = `Utilisateur existe. R√¥le: ${role}`;\r\n        setLoginMessage(message);\r\n        \r\n        // Store user data in localStorage if \"Remember me\" is checked\r\n        if (rememberMe) {\r\n          localStorage.setItem('userEmail', credentials.email);\r\n          localStorage.setItem('userRole', role);\r\n        }\r\n        \r\n        // Set a short timeout to show the success message before redirecting\r\n        setTimeout(() => {\r\n          // Redirect based on role\r\n          if (role.toLowerCase() === 'personnel') {\r\n            history.push('/employe');\r\n          } else if (role.toLowerCase() === 'drh') {\r\n            history.push('/admin');\r\n          } else {\r\n            // Default fallback - can be adjusted as needed\r\n            console.log('Unknown role:', role);\r\n            // You might want to redirect to a default page or show an error\r\n          }\r\n        }, 1000); // Redirect after 1 second\r\n      } else {\r\n        const message = 'Utilisateur existe.';\r\n        setLoginMessage(message);\r\n        setShowAlert(true);\r\n      }\r\n      \r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      setLoginSuccess(false);\r\n      \r\n      console.error('Login error:', err);\r\n      \r\n      // Create a clear error message\r\n      let errorMessage = \"Erreur de connexion. Veuillez r√©essayer.\";\r\n      \r\n      if (err.response) {\r\n        console.log('Error response:', err.response);\r\n        \r\n        // Handle specific backend error messages\r\n        if (err.response.data && err.response.data.message) {\r\n          if (err.response.data.message.includes(\"Incorrect email\")) {\r\n            errorMessage = \"Utilisateur n'existe pas.\";\r\n          } else if (err.response.data.message.includes(\"Incorrect Password\")) {\r\n            errorMessage = \"Mot de passe incorrect.\";\r\n          } else {\r\n            errorMessage = err.response.data.message;\r\n          }\r\n        } else if (err.response.status === 404) {\r\n          errorMessage = \"Service non trouv√©. V√©rifiez l'URL de l'API.\";\r\n        } else if (err.response.status === 500) {\r\n          errorMessage = \"Erreur serveur. Veuillez r√©essayer plus tard.\";\r\n        }\r\n      } else if (err.request) {\r\n        // The request was made but no response was received\r\n        errorMessage = \"Aucune r√©ponse du serveur. V√©rifiez votre connexion.\";\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n  const handleLogout = () => {\r\n    // Vider toutes les donn√©es stock√©es dans localStorage\r\n    localStorage.removeItem('userData');\r\n    localStorage.removeItem('userEmail');\r\n    localStorage.removeItem('userRole');\r\n    \r\n    // Vous pouvez aussi utiliser localStorage.clear() pour tout vider\r\n    // localStorage.clear();\r\n    \r\n    console.log('Utilisateur d√©connect√© et localStorage vid√©');\r\n    \r\n    // Rediriger vers la page de connexion\r\n    history.push('/signin');\r\n  };\r\n\r\n\r\n  const handleSocialLogin = (provider) => {\r\n    console.log(`Attempting to login with ${provider}`);\r\n    // Here you would implement the actual social login logic\r\n  };\r\n\r\n  // Alert component that can be closed\r\n  const Alert = ({ message, type, onClose }) => {\r\n    return (\r\n      <div className={`custom-alert ${type}-alert`}>\r\n        <span>{message}</span>\r\n        <button className=\"close-alert\" onClick={onClose}>√ó</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar/>\r\n      <div className=\"login-page\">\r\n        <div className=\"login-content\">\r\n          \r\n          {/* Left panel with only background image */}\r\n          <div className=\"login-left-panel\">\r\n            {/* No content here - the background image is applied via CSS */}\r\n          </div>\r\n          \r\n          <div className=\"login-right-panel\">\r\n            <div className=\"login-form-wrapper\">\r\n              <h3 className=\"login-title\">Connectez-vous √† votre compte</h3>\r\n              \r\n              {/* Show alerts */}\r\n              {error && <Alert message={error} type=\"error\" onClose={() => setError('')} />}\r\n              \r\n              {showAlert && loginSuccess && loginMessage && (\r\n                <Alert \r\n                  message={loginMessage} \r\n                  type=\"success\" \r\n                  onClose={() => setShowAlert(false)} \r\n                />\r\n              )}\r\n              \r\n              <div className=\"social-login\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"social-btn linkedin\"\r\n                  onClick={() => handleSocialLogin('linkedin')}\r\n                >\r\n                  {/* LinkedIn SVG icon */}\r\n                  <svg className=\"icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path \r\n                      fill=\"#0077B5\" \r\n                      d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"\r\n                    />\r\n                  </svg>\r\n                  LinkedIn\r\n                </button>\r\n                \r\n                <button \r\n                  type=\"button\" \r\n                  className=\"social-btn google\"\r\n                  onClick={() => handleSocialLogin('gmail')}\r\n                >\r\n                  {/* Google SVG icon */}\r\n                  <svg className=\"icon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path \r\n                      fill=\"#EA4335\" \r\n                      d=\"M5.266 9.765A7.077 7.077 0 0 1 12 4.909c1.69 0 3.218.6 4.418 1.582L19.91 3C17.782 1.145 15.055 0 12 0 7.27 0 3.198 2.698 1.24 6.65l4.026 3.115Z\"\r\n                    />\r\n                    <path \r\n                      fill=\"#34A853\" \r\n                      d=\"M16.04 18.013c-1.09.703-2.474 1.078-4.04 1.078a7.077 7.077 0 0 1-6.723-4.823l-4.04 3.067A11.965 11.965 0 0 0 12 24c2.933 0 5.735-1.043 7.834-3l-3.793-2.987Z\"\r\n                    />\r\n                    <path \r\n                      fill=\"#4A90E2\" \r\n                      d=\"M19.834 21c2.195-2.048 3.62-5.096 3.62-9 0-.71-.109-1.473-.272-2.182H12v4.637h6.436c-.317 1.559-1.17 2.766-2.395 3.558L19.834 21Z\"\r\n                    />\r\n                    <path \r\n                      fill=\"#FBBC05\" \r\n                      d=\"M5.277 14.268A7.12 7.12 0 0 1 4.909 12c0-.782.125-1.533.357-2.235L1.24 6.65A11.934 11.934 0 0 0 0 12c0 1.92.445 3.73 1.237 5.335l4.04-3.067Z\"\r\n                    />\r\n                  </svg>\r\n                  Google\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"divider\">\r\n                <span>ou continuer avec</span>\r\n              </div>\r\n              \r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <div className=\"input-container\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      value={credentials.email}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Entrez votre adresse email\"\r\n                      disabled={isLoading}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"input-group\">\r\n                  <div className=\"label-row\">\r\n                    <label htmlFor=\"password\">Mot de passe</label>\r\n                    <a href=\"/forget\" className=\"forgot-link\">Oubli√©?</a>\r\n                  </div>\r\n                  <div className=\"input-container\">\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      value={credentials.password}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Entrez votre mot de passe\"\r\n                      disabled={isLoading}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"remember-option\">\r\n                  <label className=\"checkbox-container\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={rememberMe}\r\n                      onChange={() => setRememberMe(!rememberMe)}\r\n                      disabled={isLoading}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                    <span>Se souvenir de moi pendant 30 jours</span>\r\n                  </label>\r\n                </div>\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className={`sign-in-btn ${isLoading ? 'loading' : ''}`}\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? 'Connexion...' : 'Se connecter'}\r\n                </button>\r\n              </form>\r\n              \r\n              <div className=\"help-link\">\r\n                <p>Besoin d'aide? <a href=\"mailto:it-support@ubci.com\">Contactez le support</a></p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"footer\">\r\n              <p>&copy; {new Date().getFullYear()} UBCI. Tous droits r√©serv√©s.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Maps.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Dashboard.js",["279"],"import React from \"react\";\r\nimport HeaderStats from \"components/Headers/HeaderStats\";\r\n// components\r\nimport CardLineChart from \"components/Cards/CardLineChart.js\";\r\nimport CardBarChart from \"components/Cards/CardBarChart.js\";\r\nimport CardPageVisits from \"components/Cards/CardPageVisits.js\";\r\nimport CardSocialTraffic from \"components/Cards/CardSocialTraffic.js\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <>\r\n\r\n    <div style={{ backgroundColor: \"#49babd\" }}>\r\n     {/* <HeaderStats />*/}\r\n      <div className=\"flex flex-wrap\">\r\n        <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\r\n          <CardLineChart />\r\n        </div>\r\n        <div className=\"w-full xl:w-4/12 px-4\">\r\n          <CardBarChart />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-wrap mt-4\">\r\n        <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\r\n          <CardPageVisits />\r\n        </div>\r\n        <div className=\"w-full xl:w-4/12 px-4\">\r\n          <CardSocialTraffic />\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Tables.js",["280"],"import { useState, useEffect } from \"react\";\r\nimport { Search, AlertCircle, Check, X, Eye } from \"lucide-react\";\r\n\r\n// CSS encapsul√© avec pr√©fixe \"gav-\" (Gestion Avances)\r\nconst encapsulatedStyles = `\r\n  .gav-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n  \r\n  .gav-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gav-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    margin-bottom: 1.5rem;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gav-search-container {\r\n    position: relative;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gav-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gav-search-input {\r\n    width: 100%;\r\n    padding: 0.5rem 0.75rem 0.5rem 2.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  .gav-search-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gav-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gav-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gav-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gav-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gav-tr {\r\n    transition: background-color 0.2s ease;\r\n  }\r\n  \r\n  .gav-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gav-employee-name {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-employee-dept {\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  .gav-amount {\r\n    font-size: 0.875rem;\r\n    font-weight: 600;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-date {\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  .gav-badge {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gav-badge-standard {\r\n    background-color: #dbeafe;\r\n    color: #1e40af;\r\n  }\r\n  \r\n  .gav-badge-urgent {\r\n    background-color: #ede9fe;\r\n    color: #5b21b6;\r\n  }\r\n  \r\n  .gav-status-badge {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    width: fit-content;\r\n  }\r\n  \r\n  .gav-status-approved {\r\n    background-color: #dcfce7;\r\n    color: #166534;\r\n  }\r\n  \r\n  .gav-status-pending {\r\n    background-color: #fef3c7;\r\n    color: #92400e;\r\n  }\r\n  \r\n  .gav-status-rejected {\r\n    background-color: #fee2e2;\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gav-view-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    color: #4b5563;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gav-view-button:hover {\r\n    background-color: #f9fafb;\r\n    border-color: #9ca3af;\r\n  }\r\n  \r\n  .gav-view-button:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    ring: 2px solid #14b8a6;\r\n  }\r\n  \r\n  .gav-motif-popup {\r\n    position: absolute;\r\n    z-index: 10;\r\n    margin-top: 0.5rem;\r\n    width: 18rem;\r\n    background-color: white;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    font-size: 0.875rem;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gav-motif-title {\r\n    font-size: 0.875rem;\r\n    font-weight: 600;\r\n    margin-bottom: 0.5rem;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-motif-text {\r\n    font-size: 0.875rem;\r\n    line-height: 1.25rem;\r\n    color: #4b5563;\r\n  }\r\n  \r\n  .gav-response-title {\r\n    font-size: 0.875rem;\r\n    font-weight: 600;\r\n    margin-top: 0.75rem;\r\n    margin-bottom: 0.25rem;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-response-text {\r\n    font-style: italic;\r\n    font-size: 0.875rem;\r\n    line-height: 1.25rem;\r\n    color: #4b5563;\r\n  }\r\n  \r\n  .gav-footer {\r\n    padding: 1rem;\r\n    background-color: #f9fafb;\r\n    border-top: 1px solid #e5e7eb;\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n  }\r\n  \r\n  /* Styles pour les actions */\r\n  .gav-actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .gav-action-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.75rem;\r\n    height: 1.75rem;\r\n    border-radius: 0.375rem;\r\n    color: #6b7280;\r\n    background-color: white;\r\n    border: 1px solid #e5e7eb;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gav-action-button:hover {\r\n    background-color: #f9fafb;\r\n    color: #111827;\r\n    border-color: #d1d5db;\r\n  }\r\n  \r\n  .gav-action-button-edit:hover {\r\n    color: #2563eb;\r\n    background-color: #eff6ff;\r\n    border-color: #bfdbfe;\r\n  }\r\n  \r\n  .gav-action-button-approve {\r\n    color: #047857;\r\n  }\r\n  \r\n  .gav-action-button-approve:hover {\r\n    color: #047857;\r\n    background-color: #ecfdf5;\r\n    border-color: #a7f3d0;\r\n  }\r\n  \r\n  .gav-action-button-reject {\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gav-action-button-reject:hover {\r\n    color: #dc2626;\r\n    background-color: #fef2f2;\r\n    border-color: #fecaca;\r\n  }\r\n  \r\n  .gav-action-button-more {\r\n    position: relative;\r\n  }\r\n  \r\n  /* Styles pour le modal */\r\n  .gav-modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gav-modal {\r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    width: 90%;\r\n    max-width: 32rem;\r\n    max-height: 90vh;\r\n    overflow-y: auto;\r\n    z-index: 60;\r\n  }\r\n  \r\n  .gav-modal-header {\r\n    padding: 1rem 1.5rem;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .gav-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-modal-close {\r\n    background: none;\r\n    border: none;\r\n    color: #6b7280;\r\n    cursor: pointer;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gav-modal-close:hover {\r\n    background-color: #f3f4f6;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-modal-body {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .gav-modal-section {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gav-modal-section:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n  \r\n  .gav-modal-section-title {\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: #111827;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .gav-modal-section-content {\r\n    font-size: 0.875rem;\r\n    line-height: 1.5;\r\n    color: #4b5563;\r\n    background-color: #f9fafb;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    border: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gav-modal-info-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gav-modal-info-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.25rem;\r\n  }\r\n  \r\n  .gav-modal-info-label {\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    color: #6b7280;\r\n  }\r\n  \r\n  .gav-modal-info-value {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gav-modal-footer {\r\n    padding: 1rem 1.5rem;\r\n    border-top: 1px solid #e5e7eb;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .gav-modal-button {\r\n    padding: 0.5rem 1rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    border-radius: 0.375rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gav-modal-button-secondary {\r\n    background-color: white;\r\n    color: #4b5563;\r\n    border: 1px solid #d1d5db;\r\n  }\r\n  \r\n  .gav-modal-button-secondary:hover {\r\n    background-color: #f9fafb;\r\n    border-color: #9ca3af;\r\n  }\r\n  \r\n  .gav-modal-button-primary {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    border: 1px solid transparent;\r\n  }\r\n  \r\n  .gav-modal-button-primary:hover {\r\n    background-color: #0d9488;\r\n  }\r\n\r\n  .gav-loading {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    font-size: 1rem;\r\n    color: #6b7280;\r\n  }\r\n\r\n  .gav-error {\r\n    padding: 1rem;\r\n    background-color: #fee2e2;\r\n    color: #b91c1c;\r\n    border-radius: 0.375rem;\r\n    margin: 1rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default function GestionAvances() {\r\n  // Donn√©es statiques pour les demandes d'avance\r\n  const staticDemandes = [\r\n    {\r\n      _id: \"1\",\r\n      personnel: \"1\",\r\n      montant: 1200,\r\n      typeDemande: \"Standard\",\r\n      statut: \"pending\",\r\n      motif: \"Avance sur salaire pour frais m√©dicaux\",\r\n      createdAt: \"2023-05-15T09:30:00Z\",\r\n      reponse: \"\"\r\n    },\r\n    {\r\n      _id: \"2\",\r\n      personnel: \"2\",\r\n      montant: 800,\r\n      typeDemande: \"Urgente\",\r\n      statut: \"approved\",\r\n      motif: \"R√©paration urgente de voiture pour pouvoir se rendre au travail\",\r\n      createdAt: \"2023-05-10T14:15:00Z\",\r\n      reponse: \"Demande approuv√©e le 12/05/2023\"\r\n    },\r\n    {\r\n      _id: \"3\",\r\n      personnel: \"3\",\r\n      montant: 1500,\r\n      typeDemande: \"Standard\",\r\n      statut: \"rejected\",\r\n      motif: \"Achat de mat√©riel informatique pour t√©l√©travail\",\r\n      createdAt: \"2023-05-05T11:20:00Z\",\r\n      reponse: \"Demande refus√©e le 07/05/2023 - Le mat√©riel doit √™tre fourni par l'entreprise\"\r\n    },\r\n    {\r\n      _id: \"4\",\r\n      personnel: \"4\",\r\n      montant: 600,\r\n      typeDemande: \"Urgente\",\r\n      statut: \"pending\",\r\n      motif: \"Frais de garde d'enfants impr√©vus\",\r\n      createdAt: \"2023-05-18T16:45:00Z\",\r\n      reponse: \"\"\r\n    },\r\n    {\r\n      _id: \"5\",\r\n      personnel: \"5\",\r\n      montant: 900,\r\n      typeDemande: \"Standard\",\r\n      statut: \"approved\",\r\n      motif: \"Avance pour r√®glement de factures √©nerg√©tiques\",\r\n      createdAt: \"2023-04-28T10:10:00Z\",\r\n      reponse: \"Demande approuv√©e le 30/04/2023\"\r\n    }\r\n  ];\r\n\r\n  // Donn√©es statiques pour les employ√©s\r\n  const staticPersonnelDetails = {\r\n    \"1\": {\r\n      nom: \"Dupont\",\r\n      prenom: \"Jean\",\r\n      role: \"D√©veloppeur\"\r\n    },\r\n    \"2\": {\r\n      nom: \"Martin\",\r\n      prenom: \"Sophie\",\r\n      role: \"Chef de projet\"\r\n    },\r\n    \"3\": {\r\n      nom: \"Bernard\",\r\n      prenom: \"Pierre\",\r\n      role: \"Designer\"\r\n    },\r\n    \"4\": {\r\n      nom: \"Petit\",\r\n      prenom: \"Marie\",\r\n      role: \"RH\"\r\n    },\r\n    \"5\": {\r\n      nom: \"Leroy\",\r\n      prenom: \"Thomas\",\r\n      role: \"Commercial\"\r\n    }\r\n  };\r\n\r\n  const [demandes, setDemandes] = useState(staticDemandes);\r\n  const [demandesFiltrees, setDemandesFiltrees] = useState(staticDemandes);\r\n  const [recherche, setRecherche] = useState(\"\");\r\n  const [demandeSelected, setDemandeSelected] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [personnelDetails] = useState(staticPersonnelDetails);\r\n\r\n  // Formater la date pour l'affichage\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR');\r\n  };\r\n\r\n  // Filtrage des demandes bas√© sur la recherche\r\n  const filtrerDemandes = (terme) => {\r\n    setRecherche(terme);\r\n    if (!terme.trim()) {\r\n      setDemandesFiltrees(demandes);\r\n      return;\r\n    }\r\n    \r\n    const termeLower = terme.toLowerCase();\r\n    const resultats = demandes.filter(demande => {\r\n      const personnel = personnelDetails[demande.personnel];\r\n      if (!personnel) return false;\r\n      \r\n      return (\r\n        (personnel.nom && personnel.nom.toLowerCase().includes(termeLower)) ||\r\n        (personnel.prenom && personnel.prenom.toLowerCase().includes(termeLower)) ||\r\n        demande.montant.toString().includes(terme)\r\n      );\r\n    });\r\n    \r\n    setDemandesFiltrees(resultats);\r\n  };\r\n\r\n  // Ouvrir le modal avec les d√©tails de la demande\r\n  const ouvrirModal = (demande) => {\r\n    setDemandeSelected(demande);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Fermer le modal\r\n  const fermerModal = () => {\r\n    setModalVisible(false);\r\n    setDemandeSelected(null);\r\n  };\r\n\r\n  // Fermer le modal si on clique √† l'ext√©rieur\r\n  useEffect(() => {\r\n    const handleEscape = (e) => {\r\n      if (e.key === 'Escape') {\r\n        fermerModal();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleEscape);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, []);\r\n\r\n  // Mapping des statuts API vers les statuts d'affichage\r\n  const mapStatus = (status) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return 'Compl√©t√©';\r\n      case 'pending':\r\n        return 'En attente';\r\n      case 'rejected':\r\n        return 'Refus√©';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  // Actions des boutons \r\n  const handleApprove = (id) => {\r\n    try {\r\n      // Mise √† jour de l'√©tat local\r\n      const demandesUpdated = demandes.map(demande => {\r\n        if (demande._id === id) {\r\n          return {\r\n            ...demande, \r\n            statut: 'approved', \r\n            reponse: `Demande approuv√©e le ${new Date().toLocaleDateString('fr-FR')}`\r\n          };\r\n        }\r\n        return demande;\r\n      });\r\n      \r\n      setDemandes(demandesUpdated);\r\n      setDemandesFiltrees(\r\n        demandesUpdated.filter(demande => {\r\n          if (recherche.trim() === \"\") return true;\r\n          \r\n          const personnel = personnelDetails[demande.personnel];\r\n          if (!personnel) return false;\r\n          \r\n          const termeLower = recherche.toLowerCase();\r\n          return (\r\n            (personnel.nom && personnel.nom.toLowerCase().includes(termeLower)) ||\r\n            (personnel.prenom && personnel.prenom.toLowerCase().includes(termeLower)) ||\r\n            demande.montant.toString().includes(recherche)\r\n          );\r\n        })\r\n      );\r\n      \r\n      alert(`La demande d'avance a √©t√© approuv√©e.`);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'approbation:\", err);\r\n      alert(\"Erreur lors de l'approbation de la demande.\");\r\n    }\r\n  };\r\n\r\n  const handleReject = (id) => {\r\n    try {\r\n      // Mise √† jour de l'√©tat local\r\n      const demandesUpdated = demandes.map(demande => {\r\n        if (demande._id === id) {\r\n          return {\r\n            ...demande, \r\n            statut: 'rejected', \r\n            reponse: `Demande refus√©e le ${new Date().toLocaleDateString('fr-FR')}`\r\n          };\r\n        }\r\n        return demande;\r\n      });\r\n      \r\n      setDemandes(demandesUpdated);\r\n      setDemandesFiltrees(\r\n        demandesUpdated.filter(demande => {\r\n          if (recherche.trim() === \"\") return true;\r\n          \r\n          const personnel = personnelDetails[demande.personnel];\r\n          if (!personnel) return false;\r\n          \r\n          const termeLower = recherche.toLowerCase();\r\n          return (\r\n            (personnel.nom && personnel.nom.toLowerCase().includes(termeLower)) ||\r\n            (personnel.prenom && personnel.prenom.toLowerCase().includes(termeLower)) ||\r\n            demande.montant.toString().includes(recherche)\r\n          );\r\n        })\r\n      );\r\n      \r\n      alert(`La demande d'avance a √©t√© refus√©e.`);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du refus:\", err);\r\n      alert(\"Erreur lors du refus de la demande.\");\r\n    }\r\n  };\r\n\r\n  // Rendu du statut avec l'ic√¥ne appropri√©e\r\n  const renderStatus = (status) => {\r\n    const displayStatus = mapStatus(status);\r\n    \r\n    switch (displayStatus) {\r\n      case \"Compl√©t√©\":\r\n        return (\r\n          <div className=\"gav-status-badge gav-status-approved\">\r\n            <Check size={14} />\r\n            <span>Approuv√©</span>\r\n          </div>\r\n        );\r\n      case \"En attente\":\r\n        return (\r\n          <div className=\"gav-status-badge gav-status-pending\">\r\n            <AlertCircle size={14} />\r\n            <span>En attente</span>\r\n          </div>\r\n        );\r\n      case \"Refus√©\":\r\n        return (\r\n          <div className=\"gav-status-badge gav-status-rejected\">\r\n            <X size={14} />\r\n            <span>Refus√©</span>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Afficher l'employ√© avec les d√©tails r√©cup√©r√©s\r\n  const renderEmploye = (personnelId) => {\r\n    const personnel = personnelDetails[personnelId];\r\n    \r\n    if (!personnel) {\r\n      return (\r\n        <>\r\n          <div className=\"gav-employee-name\">Employ√© inconnu</div>\r\n          <div className=\"gav-employee-dept\">...</div>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"gav-employee-name\">\r\n          {personnel.prenom} {personnel.nom}\r\n        </div>\r\n        <div className=\"gav-employee-dept\">{personnel.role || \"N/A\"}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Injection du CSS encapsul√© */}\r\n      <style>{encapsulatedStyles}</style>\r\n      \r\n      <div className=\"gav-container\">\r\n        {/* En-t√™te et recherche */}\r\n        <div className=\"gav-header-section\">\r\n          <h1 className=\"gav-title\">\r\n            Gestion des Demandes d'Avances\r\n          </h1>\r\n          \r\n          {/* Barre de recherche */}\r\n          <div className=\"gav-search-container\">\r\n            <div className=\"gav-search-icon\">\r\n              <Search size={18} />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"gav-search-input\"\r\n              placeholder=\"Rechercher par nom ou montant...\"\r\n              value={recherche}\r\n              onChange={(e) => filtrerDemandes(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Affichage des erreurs */}\r\n        {error && (\r\n          <div className=\"gav-error\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tableau des demandes */}\r\n        <div className=\"gav-table-container\">\r\n          <table className=\"gav-table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"gav-th\">Employ√©</th>\r\n                <th className=\"gav-th\">Montant</th>\r\n                <th className=\"gav-th\">Type</th>\r\n                <th className=\"gav-th\">Statut</th>\r\n                <th className=\"gav-th\">Motif</th>\r\n                <th className=\"gav-th\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {demandesFiltrees.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"gav-td\" style={{ textAlign: 'center' }}>\r\n                    Aucune demande d'avance trouv√©e\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                demandesFiltrees.map((demande) => (\r\n                  <tr key={demande._id} className=\"gav-tr\">\r\n                    <td className=\"gav-td\">\r\n                      {renderEmploye(demande.personnel)}\r\n                    </td>\r\n                    <td className=\"gav-td\">\r\n                      <div className=\"gav-amount\">\r\n                        {demande.montant} ‚Ç¨\r\n                      </div>\r\n                      <div className=\"gav-date\">{formatDate(demande.createdAt)}</div>\r\n                    </td>\r\n                    <td className=\"gav-td\">\r\n                      <span className={`gav-badge ${demande.typeDemande === \"Urgente\" ? \"gav-badge-urgent\" : \"gav-badge-standard\"}`}>\r\n                        {demande.typeDemande}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"gav-td\">\r\n                      {renderStatus(demande.statut)}\r\n                    </td>\r\n                    <td className=\"gav-td\">\r\n                      <button\r\n                        className=\"gav-view-button\"\r\n                        onClick={() => ouvrirModal(demande)}\r\n                      >\r\n                        <Eye size={14} />\r\n                        <span>Voir motif</span>\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"gav-td\">\r\n                      <div className=\"gav-actions\">\r\n                        {mapStatus(demande.statut) === \"En attente\" && (\r\n                          <>\r\n                            <button \r\n                              className=\"gav-action-button gav-action-button-approve\" \r\n                              onClick={() => handleApprove(demande._id)}\r\n                              title=\"Approuver\"\r\n                            >\r\n                              <Check size={16} />\r\n                            </button>\r\n                            <button \r\n                              className=\"gav-action-button gav-action-button-reject\" \r\n                              onClick={() => handleReject(demande._id)}\r\n                              title=\"Refuser\"\r\n                            >\r\n                              <X size={16} />\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        {/* Information sur les r√©sultats */}\r\n        <div className=\"gav-footer\">\r\n          Affichage de {demandesFiltrees.length} sur {demandes.length} demandes d'avance\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal pour afficher le d√©tail de la demande */}\r\n      {modalVisible && demandeSelected && (\r\n        <div className=\"gav-modal-overlay\" onClick={fermerModal}>\r\n          <div className=\"gav-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"gav-modal-header\">\r\n              <h3 className=\"gav-modal-title\">D√©tails de la demande</h3>\r\n              <button className=\"gav-modal-close\" onClick={fermerModal}>\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n            <div className=\"gav-modal-body\">\r\n              <div className=\"gav-modal-info-grid\">\r\n                <div className=\"gav-modal-info-item\">\r\n                  <span className=\"gav-modal-info-label\">Employ√©</span>\r\n                  <span className=\"gav-modal-info-value\">\r\n                    {personnelDetails[demandeSelected.personnel] ? \r\n                      `${personnelDetails[demandeSelected.personnel].prenom} ${personnelDetails[demandeSelected.personnel].nom}` :\r\n                      \"Employ√© inconnu\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"gav-modal-info-item\">\r\n                  <span className=\"gav-modal-info-label\">D√©partement</span>\r\n                  <span className=\"gav-modal-info-value\">\r\n                    {personnelDetails[demandeSelected.personnel]?.role || \"N/A\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"gav-modal-info-item\">\r\n                  <span className=\"gav-modal-info-label\">Montant</span>\r\n                  <span className=\"gav-modal-info-value\">{demandeSelected.montant} ‚Ç¨</span>\r\n                </div>\r\n                <div className=\"gav-modal-info-item\">\r\n                  <span className=\"gav-modal-info-label\">Date de demande</span>\r\n                  <span className=\"gav-modal-info-value\">{formatDate(demandeSelected.createdAt)}</span>\r\n                </div>\r\n                <div className=\"gav-modal-info-item\">\r\n                  <span className=\"gav-modal-info-label\">Type</span>\r\n                  <span className=\"gav-modal-info-value\">\r\n                    <span className={`gav-badge ${demandeSelected.typeDemande === \"Urgente\" ? \"gav-badge-urgent\" : \"gav-badge-standard\"}`}>\r\n                      {demandeSelected.typeDemande}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"gav-modal-info-item\">\r\n                  <span className=\"gav-modal-info-label\">Statut</span>\r\n                  <span className=\"gav-modal-info-value\">\r\n                    {renderStatus(demandeSelected.statut)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"gav-modal-section\">\r\n                <h4 className=\"gav-modal-section-title\">Motif de la demande</h4>\r\n                <div className=\"gav-modal-section-content\">\r\n                  {demandeSelected.motif}\r\n                </div>\r\n              </div>\r\n\r\n              {demandeSelected.reponse && (\r\n                <div className=\"gav-modal-section\">\r\n                  <h4 className=\"gav-modal-section-title\">R√©ponse √† la demande</h4>\r\n                  <div className=\"gav-modal-section-content\">\r\n                    {demandeSelected.reponse}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"gav-modal-footer\">\r\n              <button className=\"gav-modal-button gav-modal-button-secondary\" onClick={fermerModal}>\r\n                Fermer\r\n              </button>\r\n              {demandeSelected.statut === \"pending\" && (\r\n                <>\r\n                  <button \r\n                    className=\"gav-modal-button\" \r\n                    onClick={() => {\r\n                      handleReject(demandeSelected._id);\r\n                      fermerModal();\r\n                    }}\r\n                    style={{ \r\n                      backgroundColor: \"#fee2e2\", \r\n                      color: \"#b91c1c\",\r\n                      borderColor: \"#fecaca\" \r\n                    }}\r\n                  >\r\n                    Refuser\r\n                  </button>\r\n                  <button \r\n                    className=\"gav-modal-button\" \r\n                    onClick={() => {\r\n                      handleApprove(demandeSelected._id);\r\n                      fermerModal();\r\n                    }}\r\n                    style={{ \r\n                      backgroundColor: \"#dcfce7\", \r\n                      color: \"#166534\",\r\n                      borderColor: \"#86efac\" \r\n                    }}\r\n                  >\r\n                    Approuver\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Settings.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\IndexNavbar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\Footer.js",[],["281","282"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Footers\\FooterAdmin.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Headers\\HeaderStats.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\forget.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\Recrutement.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Personnels.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Departement.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Cong√©.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Formation.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeFormation.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\SettingsEmploye.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Sidebar\\SlidebarEmploye.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\employe\\DemandeAvance.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeConge.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSocialTraffic.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardBarChart.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardTable.js",[],["283","284"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardSettings.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPageVisits.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardLineChart.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardStats.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Maps\\MapExample.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\IndexDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\PagesDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\UserDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardRecrutement.js",["285","286"],"import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Edit, \r\n  Trash, \r\n  Plus, \r\n  X, \r\n  Search, \r\n  Filter,\r\n  Check\r\n} from 'lucide-react';\r\nimport axios from 'axios'; // Importation d'axios pour les requ√™tes HTTP\r\n\r\n// CSS encapsul√© avec pr√©fixe \"cr-\" (Card Recrutement)\r\nconst encapsulatedStyles = `\r\n  .cr-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n    font-family: 'Arial, sans-serif';\r\n  }\r\n  \r\n  .cr-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .cr-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .cr-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .cr-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .cr-add-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-add-button:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .cr-tab-button {\r\n    padding: 0.5rem 1rem;\r\n    border-bottom: 2px solid transparent;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-tab-button.cr-active {\r\n    border-bottom-color: #14b8a6;\r\n    color: #14b8a6;\r\n  }\r\n  \r\n  .cr-tab-button:hover:not(.cr-active) {\r\n    color: #374151;\r\n  }\r\n  \r\n  .cr-job-listing {\r\n    background: #f9fafb;\r\n    border-left: 5px solid #14b8a6;\r\n    margin: 1rem 0;\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    position: relative;\r\n  }\r\n  \r\n  .cr-job-title {\r\n    color: #14b8a6;\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.25rem;\r\n  }\r\n  \r\n  .cr-job-detail {\r\n    color: #4b5563;\r\n    margin: 0.5rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .cr-job-badge {\r\n    background-color: #e6fffa;\r\n    color: #047857;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .cr-action-buttons {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n  }\r\n  \r\n  .cr-action-button {\r\n    padding: 0.375rem;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-edit-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n  }\r\n  \r\n  .cr-edit-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n  \r\n  .cr-delete-button {\r\n    background-color: #fee2e2;\r\n    color: #ef4444;\r\n  }\r\n  \r\n  .cr-delete-button:hover {\r\n    background-color: #fecaca;\r\n  }\r\n  \r\n  .cr-modal-overlay {\r\n    position: fixed;\r\n    inset: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .cr-modal-container {\r\n    max-height: 90vh;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    width: 100%;\r\n    max-width: 500px;\r\n  }\r\n  \r\n  .cr-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .cr-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n    margin: 0;\r\n  }\r\n  \r\n  .cr-modal-close {\r\n    color: #6b7280;\r\n    transition: color 0.2s ease;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-modal-close:hover {\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .cr-form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .cr-form-label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .cr-form-input {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .cr-form-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .cr-form-select {\r\n    width: 100%;\r\n   \r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .cr-modal-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .cr-btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-btn-cancel {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n  \r\n  .cr-btn-cancel:hover {\r\n    background-color: #e5e7eb;\r\n  }\r\n  \r\n  .cr-btn-save {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n  }\r\n  \r\n  .cr-btn-save:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .cr-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .cr-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .cr-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n  \r\n  .cr-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .cr-page-button {\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.875rem;\r\n    transition: all 0.2s ease;\r\n    background: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .cr-page-button.cr-active {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    border-color: #14b8a6;\r\n  }\r\n  \r\n  .cr-page-button:hover:not(.cr-active) {\r\n    background-color: #f9fafb;\r\n  }\r\n`;\r\n\r\n// Configuration de base pour les appels API\r\nconst API_URL = 'http://localhost:5000'; // Ajustez selon votre configuration\r\n\r\n// Composant de toast pour les notifications\r\nconst Toast = ({ message, type, onClose }) => {\r\n  const toastClass = type === 'success' ? 'cr-toast-success' : 'cr-toast-error';\r\n  \r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onClose();\r\n    }, 3000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n  \r\n  return (\r\n    <div className={`cr-toast ${toastClass}`}>\r\n      {type === 'success' ? <Check size={20} /> : <X size={20} />}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardRecrutement = () => {\r\n  const [offers, setOffers] = useState([]);\r\n  const [filteredOffers, setFilteredOffers] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [locationFilter, setLocationFilter] = useState('all');\r\n  const [currentOffer, setCurrentOffer] = useState(null);\r\n  const [offerToDelete, setOfferToDelete] = useState(null);\r\n  const [toast, setToast] = useState({ show: false, message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Charger les offres depuis le backend au chargement du composant\r\n  useEffect(() => {\r\n    fetchOffers();\r\n  }, []);\r\n\r\n  // Fonction pour r√©cup√©rer les offres depuis l'API\r\n  const fetchOffers = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.get(`/alloffre`);\r\n      \r\n      // Transformer les donn√©es pour correspondre √† notre structure\r\n      const formattedOffers = response.data.map(offer => ({\r\n        id: offer._id,\r\n        title: offer.titre,\r\n        location: offer.lieu,\r\n        date: new Date(offer.date).toISOString().split('T')[0]\r\n      }));\r\n      \r\n      setOffers(formattedOffers);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des offres:', error);\r\n      setError('Impossible de charger les offres.');\r\n      setIsLoading(false);\r\n      showToast('Erreur lors du chargement des offres', 'error');\r\n    }\r\n  };\r\n\r\n  // Effet pour filtrer les offres bas√© sur les crit√®res de recherche et filtre\r\n  useEffect(() => {\r\n    let filtered = [...offers];\r\n    \r\n    // Filtre par lieu\r\n    if (locationFilter !== 'all') {\r\n      filtered = filtered.filter(offer => offer.location === locationFilter);\r\n    }\r\n    \r\n    // Filtre par recherche\r\n    if (searchTerm.trim() !== '') {\r\n      filtered = filtered.filter(offer => \r\n        offer.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    setFilteredOffers(filtered);\r\n  }, [offers, searchTerm, locationFilter]);\r\n\r\n  // Fonction pour afficher un toast\r\n  const showToast = (message, type) => {\r\n    setToast({ show: true, message, type });\r\n  };\r\n\r\n  // Fonction pour fermer le toast\r\n  const closeToast = () => {\r\n    setToast({ ...toast, show: false });\r\n  };\r\n\r\n  // Ouvrir le modal pour ajouter une offre\r\n  const handleAddOffer = () => {\r\n    setCurrentOffer({ title: '', location: '', date: new Date().toISOString().split('T')[0] });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Ouvrir le modal pour modifier une offre\r\n  const handleEditOffer = (offer) => {\r\n    setCurrentOffer({ ...offer });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Ouvrir le modal de confirmation de suppression\r\n  const handleDeleteOffer = (offer) => {\r\n    setOfferToDelete(offer);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  // Fermer les modals\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setCurrentOffer(null);\r\n  };\r\n\r\n  const handleCloseDeleteModal = () => {\r\n    setIsDeleteModalOpen(false);\r\n    setOfferToDelete(null);\r\n  };\r\n\r\n  // G√©rer les changements dans le formulaire\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentOffer({ ...currentOffer, [name]: value });\r\n  };\r\n\r\n  // Sauvegarder une offre (ajout ou modification)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentOffer.title || !currentOffer.location || !currentOffer.date) {\r\n      showToast(\"Veuillez remplir tous les champs\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Adapter le format des donn√©es pour correspondre au backend\r\n      const offerData = {\r\n        titre: currentOffer.title,\r\n        lieu: currentOffer.location,\r\n        date: currentOffer.date\r\n      };\r\n      \r\n      // V√©rifier si c'est une modification ou un ajout\r\n      if (currentOffer.id) {\r\n        // Modification\r\n        await axios.put(`/updateoffre/${currentOffer.id}`, offerData);\r\n        showToast(\"Offre modifi√©e avec succ√®s\", \"success\");\r\n      } else {\r\n        // Ajout\r\n        await axios.post(`/addoffre`, offerData);\r\n        showToast(\"Offre ajout√©e avec succ√®s\", \"success\");\r\n      }\r\n      \r\n      // Recharger les offres\r\n      fetchOffers();\r\n      setIsModalOpen(false);\r\n      setCurrentOffer(null);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde de l\\'offre:', error);\r\n      showToast(error.response?.data?.error || \"Une erreur est survenue\", \"error\");\r\n    }\r\n  };\r\n\r\n  // Confirmer la suppression d'une offre\r\n  const confirmDelete = async () => {\r\n    if (offerToDelete) {\r\n      try {\r\n        await axios.delete(`/deleteoffre/${offerToDelete.id}`);\r\n        showToast(\"Offre supprim√©e avec succ√®s\", \"success\");\r\n        \r\n        // Recharger les offres\r\n        fetchOffers();\r\n        setIsDeleteModalOpen(false);\r\n        setOfferToDelete(null);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression de l\\'offre:', error);\r\n        showToast(error.response?.data?.error || \"Une erreur est survenue lors de la suppression\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // G√©n√©rer les lieux uniques pour les filtres\r\n  const uniqueLocations = ['all', ...new Set(offers.map(offer => offer.location))];\r\n\r\n  // Formater la date pour l'affichage\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Injection du CSS */}\r\n      <div className={\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\"}>\r\n      <style>{encapsulatedStyles}</style>\r\n      \r\n      <div className=\"cr-container\">\r\n        <div className=\"cr-header-section\">\r\n          <h1 className=\"cr-modal-title\" style={{ fontSize: '1.5rem', marginBottom: '1.5rem' }}>\r\n            Offres d'Emploi\r\n          </h1>\r\n          \r\n          {/* Section de recherche et filtres */}\r\n          <div className=\"cr-search-container\">\r\n            <div className=\"cr-search-input\">\r\n              <div className=\"cr-search-icon\">\r\n                <Search size={20} />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher une offre...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"cr-form-input\"\r\n                style={{ paddingLeft: '2.5rem' }}\r\n              />\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n              <Filter size={20} style={{ color: '#9ca3af' }} />\r\n              <select \r\n                value={locationFilter} \r\n                onChange={(e) => setLocationFilter(e.target.value)}\r\n                className=\"cr-form-select\"\r\n              >\r\n                <option value=\"all\">Tous les lieux</option>\r\n                {uniqueLocations.filter(loc => loc !== 'all').map((location, idx) => (\r\n                  <option key={idx} value={location}>{location}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <button className=\"cr-add-button\" onClick={handleAddOffer}>\r\n              <Plus size={20} />\r\n              Ajouter une offre\r\n            </button>\r\n          </div>\r\n          \r\n          {/* √âtat de chargement */}\r\n          {isLoading ? (\r\n            <div style={{ textAlign: 'center', padding: '2rem 0', color: '#6b7280' }}>\r\n              Chargement des offres...\r\n            </div>\r\n          ) : error ? (\r\n            <div style={{ textAlign: 'center', padding: '2rem 0', color: '#ef4444' }}>\r\n              {error}\r\n            </div>\r\n          ) : (\r\n            /* Liste des offres */\r\n            filteredOffers.length > 0 ? (\r\n              filteredOffers.map((offer) => (\r\n                <div key={offer.id} className=\"cr-job-listing\">\r\n                  <h2 className=\"cr-job-title\">{offer.title}</h2>\r\n                  <div className=\"cr-job-detail\">\r\n                    <strong>Lieu:</strong>\r\n                    <span className=\"cr-job-badge\">{offer.location}</span>\r\n                  </div>\r\n                  <div className=\"cr-job-detail\">\r\n                    <strong>Date:</strong> {formatDate(offer.date)}\r\n                  </div>\r\n                  \r\n                  <div className=\"cr-action-buttons\">\r\n                    <button \r\n                      className=\"cr-action-button cr-edit-button\" \r\n                      onClick={() => handleEditOffer(offer)}\r\n                      title=\"Modifier l'offre\"\r\n                    >\r\n                      <Edit size={16} />\r\n                    </button>\r\n                    <button \r\n                      className=\"cr-action-button cr-delete-button\" \r\n                      onClick={() => handleDeleteOffer(offer)}\r\n                      title=\"Supprimer l'offre\"\r\n                    >\r\n                      <Trash size={16} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div style={{ textAlign: 'center', padding: '2rem 0', color: '#6b7280' }}>\r\n                Aucune offre trouv√©e\r\n              </div>\r\n            )\r\n          )}\r\n          \r\n          {/* Pagination */}\r\n          {!isLoading && !error && filteredOffers.length > 0 && (\r\n            <div className=\"cr-pagination\">\r\n              <div style={{ fontSize: '0.875rem', color: '#6b7280' }}>\r\n                Affichage de {filteredOffers.length} sur {offers.length} offres\r\n              </div>\r\n              <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n                <button className=\"cr-page-button\">\r\n                  Pr√©c√©dent\r\n                </button>\r\n                <button className=\"cr-page-button cr-active\">\r\n                  1\r\n                </button>\r\n                <button className=\"cr-page-button\">\r\n                  Suivant\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Modal pour ajouter/modifier une offre */}\r\n      {isModalOpen && (\r\n        <div className=\"cr-modal-overlay\">\r\n          <div className=\"cr-modal-container\">\r\n            <div className=\"cr-modal-header\">\r\n              <h2 className=\"cr-modal-title\">\r\n                {currentOffer.id ? \"Modifier une offre\" : \"Ajouter une offre\"}\r\n              </h2>\r\n              <button className=\"cr-modal-close\" onClick={handleCloseModal}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"cr-form-group\">\r\n                <label className=\"cr-form-label\">Titre de l'offre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"Ex: D√©veloppeur Frontend React\"\r\n                  className=\"cr-form-input\"\r\n                  value={currentOffer?.title || ''}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"cr-form-group\">\r\n                <label className=\"cr-form-label\">Lieu</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  placeholder=\"Ex: Tunis, Remote, etc.\"\r\n                  className=\"cr-form-input\"\r\n                  value={currentOffer?.location || ''}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"cr-form-group\">\r\n                <label className=\"cr-form-label\">Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  className=\"cr-form-input\"\r\n                  value={currentOffer?.date || ''}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"cr-modal-footer\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"cr-btn cr-btn-cancel\" \r\n                  onClick={handleCloseModal}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"cr-btn cr-btn-save\"\r\n                >\r\n                  Sauvegarder\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Modal de confirmation de suppression */}\r\n      {isDeleteModalOpen && offerToDelete && (\r\n        <div className=\"cr-modal-overlay\">\r\n          <div className=\"cr-modal-container\">\r\n            <div className=\"cr-modal-header\">\r\n              <h2 className=\"cr-modal-title\">Confirmation de suppression</h2>\r\n              <button className=\"cr-modal-close\" onClick={handleCloseDeleteModal}>\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n            \r\n            <div>\r\n              <p style={{ marginBottom: '1.5rem', color: '#4b5563' }}>\r\n                √ätes-vous s√ªr de vouloir supprimer l'offre <strong>{offerToDelete.title}</strong> ?\r\n              </p>\r\n              \r\n              <div className=\"cr-modal-footer\">\r\n                <button \r\n                  className=\"cr-btn cr-btn-cancel\" \r\n                  onClick={handleCloseDeleteModal}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  className=\"cr-btn cr-btn-save\" \r\n                  onClick={confirmDelete}\r\n                  style={{ backgroundColor: '#ef4444' }}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Toast notifications */}\r\n      {toast.show && (\r\n        <Toast \r\n          message={toast.message} \r\n          type={toast.type} \r\n          onClose={closeToast} \r\n        />\r\n      )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardRecrutement;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardPersonnels.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDepartment.js",["287","288","289"],"import { useState, useEffect } from \"react\";\r\nimport { Search, AlertCircle, Check, X, Eye } from \"lucide-react\";\r\n\r\n// CSS encapsul√© avec pr√©fixe \"gf-\" (Gestion Formations)\r\nconst encapsulatedStyles = `\r\n  .gf-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n  \r\n  .gf-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gf-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    margin-bottom: 1.5rem;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gf-search-container {\r\n    position: relative;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gf-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gf-search-input {\r\n    width: 100%;\r\n    padding: 0.5rem 0.75rem 0.5rem 2.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  .gf-search-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gf-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gf-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gf-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gf-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gf-tr {\r\n    transition: background-color 0.2s ease;\r\n  }\r\n  \r\n  .gf-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gf-nom {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gf-prenom {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gf-formation-titre {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gf-date {\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  .gf-badge {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gf-badge-obligatoire {\r\n    background-color: #dbeafe;\r\n    color: #1e40af;\r\n  }\r\n  \r\n  .gf-badge-optionnel {\r\n    background-color: #ede9fe;\r\n    color: #5b21b6;\r\n  }\r\n  \r\n  .gf-status-badge {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    width: fit-content;\r\n  }\r\n  \r\n  .gf-status-accepte {\r\n    background-color: #dcfce7;\r\n    color: #166534;\r\n  }\r\n  \r\n  .gf-status-en-cours {\r\n    background-color: #fef3c7;\r\n    color: #92400e;\r\n  }\r\n  \r\n  .gf-status-refuse {\r\n    background-color: #fee2e2;\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gf-view-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    color: #4b5563;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gf-view-button:hover {\r\n    background-color: #f9fafb;\r\n    border-color: #9ca3af;\r\n  }\r\n  \r\n  .gf-view-button:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    ring: 2px solid #14b8a6;\r\n  }\r\n  \r\n  .gf-footer {\r\n    padding: 1rem;\r\n    background-color: #f9fafb;\r\n    border-top: 1px solid #e5e7eb;\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n  }\r\n  \r\n  /* Styles pour les actions */\r\n  .gf-actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .gf-action-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.75rem;\r\n    height: 1.75rem;\r\n    border-radius: 0.375rem;\r\n    color: #6b7280;\r\n    background-color: white;\r\n    border: 1px solid #e5e7eb;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gf-action-button:hover {\r\n    background-color: #f9fafb;\r\n    color: #111827;\r\n    border-color: #d1d5db;\r\n  }\r\n  \r\n  .gf-action-button-accepter:hover {\r\n    color: #047857;\r\n    background-color: #ecfdf5;\r\n    border-color: #a7f3d0;\r\n  }\r\n  \r\n  .gf-action-button-accepter {\r\n    color: #047857;\r\n  }\r\n  \r\n  .gf-action-button-refuser {\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gf-action-button-refuser:hover {\r\n    color: #dc2626;\r\n    background-color: #fef2f2;\r\n    border-color: #fecaca;\r\n  }\r\n  \r\n  /* Toast component styles */\r\n  .gf-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n    animation: gf-toast-appear 0.3s ease;\r\n  }\r\n  \r\n  @keyframes gf-toast-appear {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(1rem);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  \r\n  .gf-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .gf-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n  \r\n  .gf-toast-info {\r\n    background-color: #3b82f6;\r\n  }\r\n`;\r\n\r\n// Toast component\r\nconst Toast = ({ message, type, onClose }) => {\r\n  const toastClass = \r\n    type === \"success\" \r\n      ? \"gf-toast-success\" \r\n      : type === \"error\" \r\n      ? \"gf-toast-error\" \r\n      : \"gf-toast-info\";\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onClose();\r\n    }, 3000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className={`gf-toast ${toastClass}`}>\r\n      {type === \"success\" && <Check size={20} />}\r\n      {type === \"error\" && <X size={20} />}\r\n      {type === \"info\" && <AlertCircle size={20} />}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function GestionFormations() {\r\n  // Donn√©es statiques pour les formations avec les nouveaux statuts\r\n  const staticFormations = [\r\n    {\r\n      _id: \"1\",\r\n      nom: \"Dupont\",\r\n      prenom: \"Jean\",\r\n      titre: \"D√©veloppement React Avanc√©\",\r\n      type: \"Obligatoire\",\r\n      statut: \"en_cours\",\r\n      dateDebut: \"2023-06-15T09:30:00Z\",\r\n      dateFin: \"2023-06-18T16:30:00Z\"\r\n    },\r\n    {\r\n      _id: \"2\",\r\n      nom: \"Martin\",\r\n      prenom: \"Sophie\",\r\n      titre: \"Gestion de Projet Agile\",\r\n      type: \"Obligatoire\",\r\n      statut: \"accepte\",\r\n      dateDebut: \"2023-05-10T09:00:00Z\",\r\n      dateFin: \"2023-05-12T17:00:00Z\"\r\n    },\r\n    {\r\n      _id: \"3\",\r\n      nom: \"Bernard\",\r\n      prenom: \"Pierre\",\r\n      titre: \"Design UX/UI Fondamentaux\",\r\n      type: \"Optionnel\",\r\n      statut: \"refuse\",\r\n      dateDebut: \"2023-07-05T10:00:00Z\",\r\n      dateFin: \"2023-07-07T16:00:00Z\"\r\n    },\r\n    {\r\n      _id: \"4\",\r\n      nom: \"Petit\",\r\n      prenom: \"Marie\",\r\n      titre: \"RH: Gestion des Comp√©tences\",\r\n      type: \"Obligatoire\",\r\n      statut: \"en_cours\",\r\n      dateDebut: \"2023-06-20T09:30:00Z\",\r\n      dateFin: \"2023-06-21T17:30:00Z\"\r\n    },\r\n    {\r\n      _id: \"5\",\r\n      nom: \"Leroy\",\r\n      prenom: \"Thomas\",\r\n      titre: \"Techniques de Vente Avanc√©es\",\r\n      type: \"Optionnel\",\r\n      statut: \"accepte\",\r\n      dateDebut: \"2023-05-22T09:00:00Z\",\r\n      dateFin: \"2023-05-24T17:00:00Z\"\r\n    }\r\n  ];\r\n\r\n  const [formations, setFormations] = useState(staticFormations);\r\n  const [formationsFiltrees, setFormationsFiltrees] = useState(staticFormations);\r\n  const [recherche, setRecherche] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [toast, setToast] = useState({ affiche: false, message: \"\", type: \"\" });\r\n\r\n  // Formater la date pour l'affichage\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR');\r\n  };\r\n\r\n  // Filtrage des formations bas√© sur la recherche\r\n  const filtrerFormations = (terme) => {\r\n    setRecherche(terme);\r\n    if (!terme.trim()) {\r\n      setFormationsFiltrees(formations);\r\n      return;\r\n    }\r\n    \r\n    const termeLower = terme.toLowerCase();\r\n    const resultats = formations.filter(formation => {\r\n      return (\r\n        formation.nom.toLowerCase().includes(termeLower) ||\r\n        formation.prenom.toLowerCase().includes(termeLower) ||\r\n        formation.titre.toLowerCase().includes(termeLower)\r\n      );\r\n    });\r\n    \r\n    setFormationsFiltrees(resultats);\r\n  };\r\n\r\n  // Mapping des statuts API vers les statuts d'affichage\r\n  const mapStatus = (status) => {\r\n    switch (status) {\r\n      case 'accepte':\r\n        return 'Accept√©';\r\n      case 'en_cours':\r\n        return 'En cours';\r\n      case 'refuse':\r\n        return 'Refus√©';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  // Affichage du toast\r\n  const afficherToast = (message, type) => {\r\n    setToast({ affiche: true, message, type });\r\n  };\r\n\r\n  // Fermeture du toast\r\n  const fermerToast = () => {\r\n    setToast({ ...toast, affiche: false });\r\n  };\r\n\r\n  // Actions des boutons \r\n  const handleAccepter = (id) => {\r\n    try {\r\n      // R√©cup√©ration des infos de la formation\r\n      const formationToUpdate = formations.find(f => f._id === id);\r\n      \r\n      // Mise √† jour de l'√©tat local\r\n      const formationsUpdated = formations.map(formation => {\r\n        if (formation._id === id) {\r\n          return {\r\n            ...formation, \r\n            statut: 'accepte'\r\n          };\r\n        }\r\n        return formation;\r\n      });\r\n      \r\n      setFormations(formationsUpdated);\r\n      setFormationsFiltrees(\r\n        formationsUpdated.filter(formation => {\r\n          if (recherche.trim() === \"\") return true;\r\n          \r\n          const termeLower = recherche.toLowerCase();\r\n          return (\r\n            formation.nom.toLowerCase().includes(termeLower) ||\r\n            formation.prenom.toLowerCase().includes(termeLower) ||\r\n            formation.titre.toLowerCase().includes(termeLower)\r\n          );\r\n        })\r\n      );\r\n      \r\n      // Afficher le toast de succ√®s\r\n      afficherToast(`Formation \"${formationToUpdate.titre}\" accept√©e pour ${formationToUpdate.prenom} ${formationToUpdate.nom}`, \"success\");\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la mise √† jour:\", err);\r\n      afficherToast(\"Erreur lors de la mise √† jour de la formation\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleRefuser = (id) => {\r\n    try {\r\n      // R√©cup√©ration des infos de la formation\r\n      const formationToUpdate = formations.find(f => f._id === id);\r\n      \r\n      // Mise √† jour de l'√©tat local\r\n      const formationsUpdated = formations.map(formation => {\r\n        if (formation._id === id) {\r\n          return {\r\n            ...formation, \r\n            statut: 'refuse'\r\n          };\r\n        }\r\n        return formation;\r\n      });\r\n      \r\n      setFormations(formationsUpdated);\r\n      setFormationsFiltrees(\r\n        formationsUpdated.filter(formation => {\r\n          if (recherche.trim() === \"\") return true;\r\n          \r\n          const termeLower = recherche.toLowerCase();\r\n          return (\r\n            formation.nom.toLowerCase().includes(termeLower) ||\r\n            formation.prenom.toLowerCase().includes(termeLower) ||\r\n            formation.titre.toLowerCase().includes(termeLower)\r\n          );\r\n        })\r\n      );\r\n      \r\n      // Afficher le toast de refus\r\n      afficherToast(`Formation \"${formationToUpdate.titre}\" refus√©e pour ${formationToUpdate.prenom} ${formationToUpdate.nom}`, \"error\");\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du refus:\", err);\r\n      afficherToast(\"Erreur lors du refus de la formation\", \"error\");\r\n    }\r\n  };\r\n\r\n  // Rendu du statut avec l'ic√¥ne appropri√©e\r\n  const renderStatus = (status) => {\r\n    const displayStatus = mapStatus(status);\r\n    \r\n    switch (status) {\r\n      case \"accepte\":\r\n        return (\r\n          <div className=\"gf-status-badge gf-status-accepte\">\r\n            <Check size={14} />\r\n            <span>Accept√©</span>\r\n          </div>\r\n        );\r\n      case \"en_cours\":\r\n        return (\r\n          <div className=\"gf-status-badge gf-status-en-cours\">\r\n            <AlertCircle size={14} />\r\n            <span>En cours</span>\r\n          </div>\r\n        );\r\n      case \"refuse\":\r\n        return (\r\n          <div className=\"gf-status-badge gf-status-refuse\">\r\n            <X size={14} />\r\n            <span>Refus√©</span>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Injection du CSS encapsul√© */}\r\n      <style>{encapsulatedStyles}</style>\r\n      \r\n      <div className=\"gf-container\">\r\n        {/* En-t√™te et recherche */}\r\n        <div className=\"gf-header-section\">\r\n          <h1 className=\"gf-title\">\r\n            Gestion des Formations\r\n          </h1>\r\n          \r\n          {/* Barre de recherche */}\r\n          <div className=\"gf-search-container\">\r\n            <div className=\"gf-search-icon\">\r\n              <Search size={18} />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"gf-search-input\"\r\n              placeholder=\"Rechercher par nom, pr√©nom ou titre de formation...\"\r\n              value={recherche}\r\n              onChange={(e) => filtrerFormations(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Affichage des erreurs */}\r\n        {error && (\r\n          <div className=\"gf-error\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tableau des formations */}\r\n        <div className=\"gf-table-container\">\r\n          <table className=\"gf-table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"gf-th\">Nom</th>\r\n                <th className=\"gf-th\">Pr√©nom</th>\r\n                <th className=\"gf-th\">Titre de Formation</th>\r\n                <th className=\"gf-th\">Statut</th>\r\n                <th className=\"gf-th\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {formationsFiltrees.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"5\" className=\"gf-td\" style={{ textAlign: 'center' }}>\r\n                    Aucune formation trouv√©e\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                formationsFiltrees.map((formation) => (\r\n                  <tr key={formation._id} className=\"gf-tr\">\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-nom\">{formation.nom}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-prenom\">{formation.prenom}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-formation-titre\">{formation.titre}</div>\r\n                      <div className=\"gf-date\">{formatDate(formation.dateDebut)} - {formatDate(formation.dateFin)}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      {renderStatus(formation.statut)}\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-actions\">\r\n                        {formation.statut === \"en_cours\" && (\r\n                          <>\r\n                            <button \r\n                              className=\"gf-action-button gf-action-button-accepter\" \r\n                              onClick={() => handleAccepter(formation._id)}\r\n                              title=\"Accepter\"\r\n                            >\r\n                              <Check size={16} />\r\n                            </button>\r\n                            <button \r\n                              className=\"gf-action-button gf-action-button-refuser\" \r\n                              onClick={() => handleRefuser(formation._id)}\r\n                              title=\"Refuser\"\r\n                            >\r\n                              <X size={16} />\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        {/* Information sur les r√©sultats */}\r\n        <div className=\"gf-footer\">\r\n          Affichage de {formationsFiltrees.length} sur {formations.length} formations\r\n        </div>\r\n      </div>\r\n\r\n      {/* Toast Notification */}\r\n      {toast.affiche && (\r\n        <Toast\r\n          message={toast.message}\r\n          type={toast.type}\r\n          onClose={fermerToast}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardFormation.js",["290"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Composant principal\r\nfunction CardFormation() {\r\n  const [formations, setFormations] = useState([]);\r\n  const [filteredFormations, setFilteredFormations] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'asc' });\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currentFormation, setCurrentFormation] = useState({\r\n    id: null, titre: '', description: '', date: '', duree: 0, places: 0, inscrits: 0, statut: 'Programm√©e'\r\n  });\r\n  const [activeTab, setActiveTab] = useState('toutes');\r\n  const [confirmDeleteId, setConfirmDeleteId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Charger les formations depuis l'API\r\n  useEffect(() => {\r\n    const fetchFormations = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('/getformation');\r\n        \r\n        // Transformer les donn√©es pour correspondre √† notre structure frontend\r\n        const formattedData = response.data.map(formation => ({\r\n          id: formation._id,\r\n          titre: formation.titre,\r\n          description: formation.description,\r\n          date: new Date(formation.date).toISOString().split('T')[0],\r\n          duree: formation.dur√©e,\r\n          places: formation.nbplaces,\r\n          inscrits: formation.nbinscrits,\r\n          statut: formation.statut\r\n        }));\r\n        \r\n        setFormations(formattedData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Erreur lors du chargement des formations:\", err);\r\n        setError(\"Impossible de charger les formations. Veuillez r√©essayer plus tard.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFormations();\r\n  }, []);\r\n\r\n  // Filtrer les formations\r\n  useEffect(() => {\r\n    let result = [...formations];\r\n    \r\n    // Filtre par statut\r\n    if (activeTab !== 'toutes') {\r\n      result = result.filter(formation => {\r\n        if (activeTab === 'programmees') return formation.statut === 'Programm√©e';\r\n        if (activeTab === 'completes') return formation.statut === 'Compl√®te';\r\n        if (activeTab === 'terminees') return formation.statut === 'Termin√©e';\r\n        return true;\r\n      });\r\n    }\r\n    \r\n    // Filtre par recherche\r\n    if (searchTerm) {\r\n      result = result.filter(formation => \r\n        formation.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        formation.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // Tri\r\n    result.sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === 'asc' ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === 'asc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n    \r\n    setFilteredFormations(result);\r\n  }, [formations, searchTerm, sortConfig, activeTab]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setCurrentFormation({\r\n      id: null,\r\n      titre: '',\r\n      description: '',\r\n      date: '',\r\n      duree: 0,\r\n      places: 0,\r\n      inscrits: 0,\r\n      statut: 'Programm√©e'\r\n    });\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleEdit = (formation) => {\r\n    setCurrentFormation({...formation});\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`/deleteformation/${id}`);\r\n      setFormations(formations.filter(formation => formation.id !== id));\r\n      setConfirmDeleteId(null);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la suppression:\", err);\r\n      alert(\"Impossible de supprimer la formation. Veuillez r√©essayer.\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      // Pr√©parer les donn√©es pour l'API\r\n      const formationData = {\r\n        titre: currentFormation.titre,\r\n        description: currentFormation.description,\r\n        date: currentFormation.date,\r\n        dur√©e: currentFormation.duree,\r\n        nbplaces: currentFormation.places,\r\n        nbinscrits: currentFormation.inscrits,\r\n        statut: currentFormation.statut\r\n      };\r\n\r\n      if (currentFormation.id) {\r\n        // Mise √† jour\r\n        const response = await axios.put(`/updateformation/${currentFormation.id}`, formationData);\r\n        setFormations(formations.map(formation => \r\n          formation.id === currentFormation.id ? {\r\n            ...formation,\r\n            titre: currentFormation.titre,\r\n            description: currentFormation.description,\r\n            date: currentFormation.date,\r\n            duree: currentFormation.duree,\r\n            places: currentFormation.places,\r\n            inscrits: currentFormation.inscrits,\r\n            statut: currentFormation.statut\r\n          } : formation\r\n        ));\r\n      } else {\r\n        // Cr√©ation\r\n        const response = await axios.post('/addformation', formationData);\r\n        const newFormation = {\r\n          id: response.data._id,\r\n          titre: response.data.titre,\r\n          description: response.data.description,\r\n          date: new Date(response.data.date).toISOString().split('T')[0],\r\n          duree: response.data.dur√©e,\r\n          places: response.data.nbplaces,\r\n          inscrits: response.data.nbinscrits,\r\n          statut: response.data.statut\r\n        };\r\n        setFormations([...formations, newFormation]);\r\n      }\r\n      setModalOpen(false);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'enregistrement:\", err);\r\n      alert(\"Impossible d'enregistrer la formation. Veuillez v√©rifier les donn√©es et r√©essayer.\");\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (statut) => {\r\n    switch(statut) {\r\n      case 'Programm√©e': return 'status-blue';\r\n      case 'Compl√®te': return 'status-yellow';\r\n      case 'Termin√©e': return 'status-green';\r\n      default: return 'status-gray';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  // Affichage de chargement\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des formations...</p>\r\n        <style jsx>{`\r\n          .loading-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 300px;\r\n          }\r\n          .loading-spinner {\r\n            border: 4px solid #f3f3f3;\r\n            border-top: 4px solid #3b82f6;\r\n            border-radius: 50%;\r\n            width: 40px;\r\n            height: 40px;\r\n            animation: spin 1s linear infinite;\r\n            margin-bottom: 20px;\r\n          }\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Affichage d'erreur\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p className=\"error-message\">{error}</p>\r\n        <button className=\"retry-button\" onClick={() => window.location.reload()}>\r\n          R√©essayer\r\n        </button>\r\n        <style jsx>{`\r\n          .error-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 300px;\r\n            color: #ef4444;\r\n          }\r\n          .error-message {\r\n            margin-bottom: 20px;\r\n          }\r\n          .retry-button {\r\n            background-color: #3b82f6;\r\n            color: white;\r\n            border: none;\r\n            padding: 8px 16px;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"gp-header-section\">\r\n          <h1\r\n            className=\"gp-modal-title\"\r\n            style={{ fontSize: \"1.5rem\", marginBottom: \"\" }}\r\n          >\r\n            Gestion des Formations\r\n          </h1>\r\n        </div>\r\n          \r\n        <div className=\"card\">\r\n          <div className=\"toolbar\">\r\n            <div className=\"toolbar-left\">\r\n              <div className=\"search-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher une formation...\"\r\n                  className=\"search-input\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <div className=\"search-icon\">&#128269;</div>\r\n              </div>\r\n              <div className=\"tabs\">\r\n                <button \r\n                  className={`tab ${activeTab === 'toutes' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('toutes')}\r\n                >\r\n                  Toutes\r\n                </button>\r\n                <button \r\n                  className={`tab ${activeTab === 'programmees' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('programmees')}\r\n                >\r\n                  Programm√©es\r\n                </button>\r\n                <button \r\n                  className={`tab ${activeTab === 'completes' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('completes')}\r\n                >\r\n                  Compl√®tes\r\n                </button>\r\n                <button \r\n                  className={`tab ${activeTab === 'terminees' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('terminees')}\r\n                >\r\n                  Termin√©es\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button \r\n              className=\"btn-primary\"\r\n              onClick={handleAddNew}\r\n            >\r\n              <span className=\"icon\">+</span>\r\n              <span>Nouvelle formation</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Table */}\r\n          <div className=\"table-container\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"sortable\" onClick={() => requestSort('titre')}>\r\n                    <div className=\"th-content\">\r\n                      Titre\r\n                      {sortConfig.key === 'titre' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th className=\"sortable\" onClick={() => requestSort('date')}>\r\n                    <div className=\"th-content\">\r\n                      Date\r\n                      {sortConfig.key === 'date' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th className=\"sortable\" onClick={() => requestSort('duree')}>\r\n                    <div className=\"th-content\">\r\n                      Dur√©e\r\n                      {sortConfig.key === 'duree' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th className=\"sortable\" onClick={() => requestSort('places')}>\r\n                    <div className=\"th-content\">\r\n                      Places\r\n                      {sortConfig.key === 'places' && (\r\n                        <span className=\"sort-icon\">{sortConfig.direction === 'asc' ? '‚ñ≤' : '‚ñº'}</span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                  <th>Statut</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredFormations.length > 0 ? (\r\n                  filteredFormations.map((formation) => (\r\n                    <tr key={formation.id}>\r\n                      <td>\r\n                        <div className=\"formation-title\">\r\n                          <span className=\"title\">{formation.titre}</span>\r\n                          <span className=\"description\">{formation.description}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"with-icon\">\r\n                          <span className=\"icon\">üìÖ</span>\r\n                          <span>{formatDate(formation.date)}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"with-icon\">\r\n                          <span className=\"icon\">‚è±Ô∏è</span>\r\n                          <span>{formation.duree} heures</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"with-icon\">\r\n                          <span className=\"icon\">üë•</span>\r\n                          <span>{formation.inscrits}/{formation.places}</span>\r\n                          {formation.inscrits === formation.places && (\r\n                            <span className=\"dot yellow-dot\"></span>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <span className={`status ${getStatusColor(formation.statut)}`}>\r\n                          {formation.statut}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        {confirmDeleteId === formation.id ? (\r\n                          <div className=\"action-buttons\">\r\n                            <button onClick={() => handleDelete(formation.id)} className=\"btn-confirm\">\r\n                              ‚úì Confirmer\r\n                            </button>\r\n                            <button onClick={() => setConfirmDeleteId(null)} className=\"btn-cancel\">\r\n                              ‚úï Annuler\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"action-buttons\">\r\n                            <button onClick={() => handleEdit(formation)} className=\"btn-edit\">\r\n                              ‚úé\r\n                            </button>\r\n                            <button onClick={() => setConfirmDeleteId(formation.id)} className=\"btn-delete\">\r\n                              üóëÔ∏è\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={6} className=\"empty-table\">\r\n                      Aucune formation trouv√©e\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"pagination\">\r\n            <div className=\"pagination-info\">\r\n              Affichage de <span className=\"bold\">{filteredFormations.length}</span> formation(s)\r\n            </div>\r\n            <div className=\"pagination-buttons\">\r\n              <button className=\"btn-page\" disabled={true}>\r\n                Pr√©c√©dent\r\n              </button>\r\n              <button className=\"btn-page\" disabled={true}>\r\n                Suivant\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modal */}\r\n        {modalOpen && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <h2>\r\n                  {currentFormation.id ? 'Modifier la formation' : 'Ajouter une formation'}\r\n                </h2>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Titre de la formation\r\n                    </label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      value={currentFormation.titre}\r\n                      onChange={(e) => setCurrentFormation({...currentFormation, titre: e.target.value})}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Description\r\n                    </label>\r\n                    <textarea \r\n                      className=\"form-control\"\r\n                      rows=\"3\"\r\n                      value={currentFormation.description}\r\n                      onChange={(e) => setCurrentFormation({...currentFormation, description: e.target.value})}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Date\r\n                      </label>\r\n                      <input \r\n                        type=\"date\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.date}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, date: e.target.value})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Dur√©e (heures)\r\n                      </label>\r\n                      <input \r\n                        type=\"number\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.duree}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, duree: parseInt(e.target.value) || 0})}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Nombre de places\r\n                      </label>\r\n                      <input \r\n                        type=\"number\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.places}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, places: parseInt(e.target.value) || 0})}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Nombre d'inscrits\r\n                      </label>\r\n                      <input \r\n                        type=\"number\" \r\n                        className=\"form-control\"\r\n                        value={currentFormation.inscrits}\r\n                        onChange={(e) => setCurrentFormation({...currentFormation, inscrits: parseInt(e.target.value) || 0})}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Statut\r\n                    </label>\r\n                    <select \r\n                      className=\"form-control\"\r\n                      value={currentFormation.statut}\r\n                      onChange={(e) => setCurrentFormation({...currentFormation, statut: e.target.value})}\r\n                    >\r\n                      <option value=\"Programm√©e\">Programm√©e</option>\r\n                      <option value=\"Compl√®te\">Compl√®te</option>\r\n                      <option value=\"Termin√©e\">Termin√©e</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button \r\n                  className=\"btn-secondary\"\r\n                  onClick={() => setModalOpen(false)}\r\n                >\r\n                  Annuler\r\n                </button>\r\n                <button \r\n                  className=\"btn-primary\"\r\n                  onClick={handleSave}\r\n                >\r\n                  {currentFormation.id ? 'Mettre √† jour' : 'Ajouter'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      {/* CSS int√©gr√© */}\r\n      <style jsx>{`\r\n        /* Styles g√©n√©raux */\r\n        .container {\r\n        background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n        }\r\n\r\n        .card {\r\n          max-width: 1200px;\r\n          margin: 0 auto;\r\n          background-color: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n          overflow: hidden;\r\n        }\r\n\r\n        /* Header */\r\n        .header {\r\n          padding: 20px;\r\n         \r\n        }\r\n\r\n     .header h1 {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    color: #1E3A8A;\r\n    font-size: 2.5em;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n    padding: 20px 0;\r\n    margin: 15px auto 30px;\r\n    position: relative;\r\n    display: inline-block;\r\n    background: linear-gradient(120deg, #E0E7FF 0%, #ffffff 100%);\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 15px rgba(30, 58, 138, 0.15);\r\n    width: 100%;\r\n    max-width: 800px;\r\n}\r\n\r\n.header h1::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -3px;\r\n    left: 10%;\r\n    width: 80%;\r\n    height: 4px;\r\n    background: linear-gradient(90deg, transparent, #1E3A8A, transparent);\r\n    border-radius: 2px;\r\n}\r\n\r\n.header h1::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: radial-gradient(circle at top right, rgba(224, 231, 255, 0.8), transparent 70%);\r\n    border-radius: 8px;\r\n    z-index: -1;\r\n}\r\n\r\n\r\n        .header p {\r\n          color: #64748b;\r\n          margin: 0;\r\n        }\r\n\r\n        .gp-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n        /* Toolbar */\r\n        .toolbar {\r\n          padding: 16px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          flex-wrap: wrap;\r\n          gap: 16px;\r\n        }\r\n\r\n        .toolbar-left {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 16px;\r\n          flex: 1;\r\n        }\r\n\r\n        .search-container {\r\n          position: relative;\r\n          min-width: 250px;\r\n        }\r\n\r\n        .search-input {\r\n          width: 100%;\r\n          padding: 8px 16px 8px 40px;\r\n          border: 1px solid #cbd5e1;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          transition: border-color 0.2s, box-shadow 0.2s;\r\n        }\r\n\r\n        .search-input:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        .search-icon {\r\n          position: absolute;\r\n          left: 12px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          color: #94a3b8;\r\n        }\r\n\r\n        .tabs {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .tab {\r\n          padding: 8px 16px;\r\n          border-radius: 6px;\r\n          background-color: #f1f5f9;\r\n          border: none;\r\n          color: #64748b;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s, color 0.2s;\r\n        }\r\n\r\n        .tab:hover {\r\n          background-color: #e2e8f0;\r\n        }\r\n\r\n        .tab.active {\r\n          background-color: #3b82f6;\r\n          color: white;\r\n        }\r\n        \r\n  .gp-header-section {\r\n    padding: 1.5rem;\r\n      \r\n  \r\n  }\r\n        .btn-primary {\r\n          background-color: #3b82f6;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 6px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .btn-primary:hover {\r\n          background-color: #2563eb;\r\n        }\r\n\r\n        .btn-primary .icon {\r\n          font-size: 18px;\r\n        }\r\n\r\n        /* Table */\r\n        .table-container {\r\n          overflow-x: auto;\r\n        }\r\n\r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n        }\r\n\r\n        th {\r\n          text-align: left;\r\n          padding: 12px 16px;\r\n          background-color: #f8fafc;\r\n          color: #64748b;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.05em;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        th.sortable {\r\n          cursor: pointer;\r\n        }\r\n\r\n        .th-content {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 4px;\r\n        }\r\n\r\n        .sort-icon {\r\n          display: inline-block;\r\n          font-size: 10px;\r\n        }\r\n\r\n        td {\r\n          padding: 16px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n          color: #334155;\r\n        }\r\n\r\n        tr:hover {\r\n          background-color: #f8fafc;\r\n        }\r\n\r\n        .formation-title {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        .formation-title .title {\r\n          font-weight: 500;\r\n          color: #1e293b;\r\n        }\r\n\r\n        .formation-title .description {\r\n          font-size: 14px;\r\n          color: #64748b;\r\n          margin-top: 4px;\r\n        }\r\n\r\n        .with-icon {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n        }\r\n\r\n        .with-icon .icon {\r\n          color: #94a3b8;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .dot {\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          margin-left: 8px;\r\n        }\r\n\r\n        .yellow-dot {\r\n          background-color: #facc15;\r\n        }\r\n\r\n        .status {\r\n          display: inline-block;\r\n          padding: 4px 8px;\r\n          border-radius: 9999px;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n        }\r\n\r\n        .status-blue {\r\n          background-color: #dbeafe;\r\n          color: #1e40af;\r\n        }\r\n\r\n        .status-yellow {\r\n          background-color: #fef9c3;\r\n          color: #854d0e;\r\n        }\r\n\r\n        .status-green {\r\n          background-color: #dcfce7;\r\n          color: #166534;\r\n        }\r\n\r\n        .status-gray {\r\n          background-color: #f1f5f9;\r\n          color: #475569;\r\n        }\r\n\r\n        .action-buttons {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .btn-edit, .btn-delete {\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 16px;\r\n          padding: 4px;\r\n          border-radius: 4px;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .btn-edit {\r\n          color: #3b82f6;\r\n        }\r\n\r\n        .btn-edit:hover {\r\n          background-color: #dbeafe;\r\n        }\r\n\r\n        .btn-delete {\r\n          color: #ef4444;\r\n        }\r\n\r\n        .btn-delete:hover {\r\n          background-color: #fee2e2;\r\n        }\r\n\r\n        .btn-confirm, .btn-cancel {\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 4px;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .btn-confirm {\r\n          color: #ef4444;\r\n        }\r\n\r\n        .btn-confirm:hover {\r\n          background-color: #fee2e2;\r\n        }\r\n\r\n        .btn-cancel {\r\n          color: #64748b;\r\n        }\r\n\r\n        .btn-cancel:hover {\r\n          background-color: #f1f5f9;\r\n        }\r\n\r\n        .empty-table {\r\n          text-align: center;\r\n          color: #94a3b8;\r\n          padding: 32px;\r\n        }\r\n\r\n        /* Pagination */\r\n        .pagination {\r\n          padding: 16px;\r\n          border-top: 1px solid #e2e8f0;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .pagination-info {\r\n          font-size: 14px;\r\n          color: #64748b;\r\n        }\r\n\r\n        .pagination-info .bold {\r\n          font-weight: 600;\r\n          color: #334155;\r\n        }\r\n\r\n        .pagination-buttons {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .btn-page {\r\n          padding: 8px 16px;\r\n          background-color: white;\r\n          border: 1px solid #cbd5e1;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          color: #475569;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s, border-color 0.2s;\r\n        }\r\n\r\n        .btn-page:hover {\r\n          background-color: #f8fafc;\r\n          border-color: #94a3b8;\r\n        }\r\n\r\n        .btn-page:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        /* Modal */\r\n        .modal-overlay {\r\n          position: fixed;\r\n          inset: 0;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          padding: 16px;\r\n          z-index: 50;\r\n        }\r\n\r\n        .modal {\r\n          background-color: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n          max-width: 600px;\r\n          width: 100%;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n        }\r\n\r\n        .modal-header {\r\n          padding: 16px 24px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .modal-header h2 {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: #1e293b;\r\n          margin: 0;\r\n        }\r\n\r\n        .modal-body {\r\n          padding: 24px;\r\n        }\r\n\r\n        .modal-footer {\r\n          padding: 16px 24px;\r\n          border-top: 1px solid #e2e8f0;\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          gap: 12px;\r\n        }\r\n\r\n        .form-grid {\r\n          display: grid;\r\n          grid-template-columns: 1fr;\r\n          gap: 20px;\r\n        }\r\n\r\n        .form-row {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr;\r\n          gap: 16px;\r\n        }\r\n\r\n        .form-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .form-group label {\r\n          font-size: 14px;\r\n          font-weight: 500;\r\n          color: #475569;\r\n        }\r\n\r\n        .form-control {\r\n          padding: 8px 12px;\r\n          border: 1px solid #cbd5e1;\r\n          border-radius: 6px;\r\n          font-size: 14px;\r\n          color: #1e293b;\r\n          width: 100%;\r\n          transition: border-color 0.2s, box-shadow 0.2s;\r\n        }\r\n\r\n        .form-control:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        textarea.form-control {\r\n          min-height: 80px;\r\n          resize: vertical;\r\n        }\r\n\r\n        .btn-secondary {\r\n          background-color: white;\r\n          color: #475569;\r\n          border: 1px solid #cbd5e1;\r\n          padding: 8px 16px;\r\n          border-radius: 6px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s, border-color 0.2s;\r\n        }\r\n\r\n        .btn-secondary:hover {\r\n          background-color: #f8fafc;\r\n          border-color: #94a3b8;\r\n        }\r\n\r\n        /* Responsive */\r\n        @media (max-width: 768px) {\r\n          .toolbar {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n          }\r\n          \r\n          .toolbar-left {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .form-row {\r\n            grid-template-columns: 1fr;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardFormation;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeFormation.js",["291"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CardDemandeFormation() {\r\n  const [formations, setFormations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filteredFormations, setFilteredFormations] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(3);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [confirmationMessage, setConfirmationMessage] = useState('');\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [demandesEnvoyees, setDemandesEnvoyees] = useState([]);\r\n\r\n  // R√©cup√©rer les informations de l'utilisateur connect√©\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem('userData');\r\n    if (userData) {\r\n      setUserInfo(JSON.parse(userData));\r\n    }\r\n  }, []);\r\n\r\n  // R√©cup√©rer les formations depuis l'API\r\n  useEffect(() => {\r\n    const fetchFormations = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('/getformation');\r\n        \r\n        const formattedFormations = response.data.map(formation => ({\r\n          id: formation._id,\r\n          titre: formation.titre,\r\n          description: formation.description,\r\n          date: new Date(formation.date).toISOString().split('T')[0],\r\n          duree: formation.dur√©e,\r\n          places: formation.nbplaces,\r\n          inscrits: formation.nbinscrits,\r\n          statut: formation.statut,\r\n          placesRestantes: formation.nbplaces - formation.nbinscrits\r\n        }));\r\n        \r\n        setFormations(formattedFormations);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(\"Erreur lors du chargement des formations\");\r\n        setLoading(false);\r\n        console.error(\"Erreur lors de la r√©cup√©ration des formations:\", err);\r\n      }\r\n    };\r\n\r\n    fetchFormations();\r\n  }, []);\r\n\r\n  // Filtrer les formations\r\n  useEffect(() => {\r\n    let result = formations.filter(formation => \r\n      formation.statut === 'Programm√©e' && \r\n      formation.inscrits < formation.places\r\n    );\r\n    \r\n    if (searchTerm) {\r\n      result = result.filter(formation => \r\n        formation.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        formation.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    setFilteredFormations(result);\r\n  }, [formations, searchTerm]);\r\n\r\n  // Pagination\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentFormations = filteredFormations.slice(indexOfFirstItem, indexOfLastItem);\r\n  const totalPages = Math.ceil(filteredFormations.length / itemsPerPage);\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  const isFormationDemandee = (formationId) => {\r\n    return demandesEnvoyees.includes(formationId);\r\n  };\r\n\r\n  const handleRequestFormation = async (formation) => {\r\n    if (!userInfo) {\r\n      setError(\"Veuillez vous reconnecter\");\r\n      setShowConfirmation(true);\r\n      setTimeout(() => setShowConfirmation(false), 3000);\r\n      return;\r\n    }\r\n  \r\n    setIsSubmitting(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      const response = await axios.post('/adddemandeformation', {\r\n        nom: userInfo.nom || '',\r\n        prenom: userInfo.prenom || '',\r\n        email: userInfo.email || '',\r\n        nomFormation: formation.titre || '',\r\n        idFormation: formation.id || '',\r\n        idUser: userInfo._id || ''\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      // Ajouter l'id de la formation √† la liste des demandes envoy√©es\r\n      setDemandesEnvoyees(prev => [...prev, formation.id]);\r\n      \r\n      setConfirmationMessage(`Demande envoy√©e pour \"${formation.titre}\" !`);\r\n      setShowConfirmation(true);\r\n      setTimeout(() => setShowConfirmation(false), 3000);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Erreur:\", err.response?.data || err.message);\r\n      setError(err.response?.data?.message || \"Erreur lors de l'envoi\");\r\n      setShowConfirmation(true);\r\n      setTimeout(() => setShowConfirmation(false), 3000);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Chargement des formations...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p className=\"error-message\">{error}</p>\r\n        <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n          R√©essayer\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>Catalogue de formations</h1>\r\n        <p>D√©couvrez et inscrivez-vous aux formations disponibles</p>\r\n      </div>\r\n\r\n      <div className=\"filters\">\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Rechercher une formation...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n          <div className=\"search-icon\">üîç</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"formations-grid\">\r\n        {currentFormations.length > 0 ? (\r\n          currentFormations.map(formation => (\r\n            <div key={formation.id} className=\"formation-card\">\r\n              <div className=\"formation-header\">\r\n                <h3>{formation.titre}</h3>\r\n                <span className={`places-badge ${formation.places - formation.inscrits <= 3 ? 'low-places' : ''}`}>\r\n                  {formation.places - formation.inscrits} places restantes\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"formation-content\">\r\n                <p className=\"formation-description\">{formation.description}</p>\r\n                \r\n                <div className=\"formation-details\">\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"detail-icon\">üìÖ</span>\r\n                    <span>{formatDate(formation.date)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"detail-icon\">‚è±Ô∏è</span>\r\n                    <span>{formation.duree} heures</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"detail-icon\">üë•</span>\r\n                    <span>{formation.inscrits}/{formation.places} participants</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"formation-footer\">\r\n                <button \r\n                  className={`request-btn ${isFormationDemandee(formation.id) ? 'demande-envoyee' : ''}`}\r\n                  onClick={() => handleRequestFormation(formation)}\r\n                  disabled={isSubmitting || isFormationDemandee(formation.id)}\r\n                >\r\n                  {isSubmitting ? 'Envoi en cours...' : \r\n                   isFormationDemandee(formation.id) ? 'Demande envoy√©e' : \r\n                   'Demander cette formation'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-formations\">\r\n            <p>Aucune formation disponible ne correspond √† vos crit√®res.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {filteredFormations.length > 0 && (\r\n        <div className=\"pagination\">\r\n          <button \r\n            className=\"page-btn\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage(currentPage - 1)}\r\n          >\r\n            Pr√©c√©dent\r\n          </button>\r\n          \r\n          <div className=\"page-info\">\r\n            Page {currentPage} sur {totalPages}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"page-btn\"\r\n            disabled={currentPage === totalPages}\r\n            onClick={() => setCurrentPage(currentPage + 1)}\r\n          >\r\n            Suivant\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {showConfirmation && (\r\n        <div className={`toast-message ${error ? 'error' : 'success'}`}>\r\n          <div className=\"toast-content\">\r\n            <span className=\"toast-icon\">{error ? '‚ö†Ô∏è' : '‚úì'}</span>\r\n            <p>{error || confirmationMessage}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n<style>\r\n        {`\r\n        /* Styles g√©n√©raux */\r\n        .container {\r\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n          max-width: 1200px;\r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          background-color: '#334155';\r\n          min-height: 100vh;\r\n        }\r\n\r\n        /* Header */\r\n        .header {\r\n          text-align: center;\r\n          margin-bottom: 40px;\r\n          padding: 20px 0;\r\n        }\r\n\r\n        .header h1 {\r\n          color: #1e40af;\r\n          font-size: 2.2rem;\r\n          margin-bottom: 10px;\r\n          position: relative;\r\n          display: inline-block;\r\n          padding-bottom: 15px;\r\n        }\r\n\r\n        .header h1::after {\r\n          content: \"\";\r\n          position: absolute;\r\n          bottom: 0;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          width: 60%;\r\n          height: 4px;\r\n          background: linear-gradient(90deg, #1e40af, #3b82f6);\r\n          border-radius: 2px;\r\n        }\r\n\r\n        .header p {\r\n          color: #6b7280;\r\n          font-size: 1.1rem;\r\n        }\r\n\r\n        /* Filtres */\r\n        .filters {\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          padding: 20px;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n          margin-bottom: 30px;\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 20px;\r\n          align-items: center;\r\n        }\r\n\r\n        .search-container {\r\n          flex: 1;\r\n          min-width: 200px;\r\n          position: relative;\r\n        }\r\n\r\n        .search-input {\r\n          width: 100%;\r\n          padding: 12px 20px 12px 45px;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 8px;\r\n          font-size: 1rem;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .search-input:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n        }\r\n\r\n        .search-icon {\r\n          position: absolute;\r\n          left: 15px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          color: #9ca3af;\r\n        }\r\n\r\n        /* Grille de formations */\r\n        .formations-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n          gap: 25px;\r\n          margin-bottom: 30px;\r\n        }\r\n\r\n        .formation-card {\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          overflow: hidden;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n          transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        .formation-card:hover {\r\n          transform: translateY(-5px);\r\n          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n        }\r\n\r\n        .formation-header {\r\n          padding: 20px;\r\n          background-color: #ebf5ff;\r\n          border-bottom: 1px solid #dbeafe;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .formation-header h3 {\r\n          margin: 0;\r\n          color: #1e40af;\r\n          font-size: 1.2rem;\r\n        }\r\n\r\n        .places-badge {\r\n          background-color: #bfdbfe;\r\n          color: #1e40af;\r\n          padding: 4px 8px;\r\n          border-radius: 999px;\r\n          font-size: 0.8rem;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .places-badge.low-places {\r\n          background-color: #fecaca;\r\n          color: #b91c1c;\r\n        }\r\n\r\n        .formation-content {\r\n          padding: 20px;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .formation-description {\r\n          margin-top: 0;\r\n          margin-bottom: 20px;\r\n          color: #4b5563;\r\n          line-height: 1.5;\r\n        }\r\n\r\n        .formation-details {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n          gap: 15px;\r\n        }\r\n\r\n        .detail-item {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n        }\r\n\r\n        .detail-icon {\r\n          font-size: 1.2rem;\r\n          color: #6b7280;\r\n        }\r\n\r\n        .formation-footer {\r\n          padding: 15px 20px;\r\n          background-color: #f9fafb;\r\n          border-top: 1px solid #e5e7eb;\r\n        }\r\n\r\n        .request-btn {\r\n          width: 100%;\r\n          padding: 10px;\r\n          background-color: #2563eb;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 6px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .request-btn:hover:not(:disabled) {\r\n          background-color: #1d4ed8;\r\n        }\r\n        \r\n        .request-btn.disabled, \r\n        .request-btn:disabled {\r\n          background-color: #9ca3af;\r\n          cursor: not-allowed;\r\n        }\r\n        \r\n        .request-btn.demande-envoyee {\r\n          background-color: #9ca3af;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        .no-formations {\r\n          grid-column: 1 / -1;\r\n          padding: 40px;\r\n          text-align: center;\r\n          background-color: white;\r\n          border-radius: 12px;\r\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .no-formations p {\r\n          color: #6b7280;\r\n          font-size: 1.1rem;\r\n        }\r\n\r\n        /* Pagination */\r\n        .pagination {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          gap: 15px;\r\n          margin-top: 30px;\r\n          margin-bottom: 30px;\r\n        }\r\n\r\n        .page-btn {\r\n          padding: 8px 16px;\r\n          background-color: white;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 6px;\r\n          color: #4b5563;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s;\r\n        }\r\n\r\n        .page-btn:hover:not(:disabled) {\r\n          background-color: #f3f4f6;\r\n          border-color: #9ca3af;\r\n        }\r\n\r\n        .page-btn:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        .page-info {\r\n          color: #4b5563;\r\n          font-weight: 500;\r\n        }\r\n\r\n        /* Toast de confirmation */\r\n        .toast-message {\r\n          position: fixed;\r\n          bottom: 30px;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          border-radius: 12px;\r\n          padding: 5px;\r\n          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n          z-index: 1000;\r\n          animation: slideUp 0.3s ease, fadeOut 0.5s ease 2.5s;\r\n          min-width: 300px;\r\n          max-width: 600px;\r\n        }\r\n\r\n        .toast-message.success {\r\n          background-color: #34d399;\r\n          color: white;\r\n        }\r\n\r\n        .toast-message.error {\r\n          background-color: #f87171;\r\n          color: white;\r\n        }\r\n\r\n        .toast-content {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n          padding: 15px 20px;\r\n        }\r\n\r\n        .toast-icon {\r\n          font-size: 1.2rem;\r\n          background-color: white;\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 50%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          flex-shrink: 0;\r\n        }\r\n\r\n        .toast-message.success .toast-icon {\r\n          color: #34d399;\r\n        }\r\n\r\n        .toast-message.error .toast-icon {\r\n          color: #f87171;\r\n        }\r\n\r\n        .toast-content p {\r\n          margin: 0;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        /* Animations */\r\n        @keyframes slideUp {\r\n          from {\r\n            transform: translate(-50%, 100%);\r\n            opacity: 0;\r\n          }\r\n          to {\r\n            transform: translate(-50%, 0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @keyframes fadeOut {\r\n          from {\r\n            opacity: 1;\r\n          }\r\n          to {\r\n            opacity: 0;\r\n          }\r\n        }\r\n\r\n        /* Responsive */\r\n        @media (max-width: 768px) {\r\n          .formations-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .filters {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n          }\r\n          \r\n          .toast-message {\r\n            width: 90%;\r\n          }\r\n        }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardDemandeFormation;","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardDemandeAvance.js",["292","293","294"],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Dropdowns\\TableDropdown.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\Condidature.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardCondidature.js",["295","296"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Search, Check, X, Eye, Filter } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\n// CSS encapsul√© avec pr√©fixe \"gp-\" (coh√©rent avec Gestion Personnel)\r\nconst encapsulatedStyles = `\r\n  .gp-candidature-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .gp-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gp-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .gp-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n\r\n  .gp-input-field {\r\n    width: 100%;\r\n    padding: 0.5rem 0.5rem 0.5rem 2rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-input-field:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-filter-dropdown {\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-filter-dropdown:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gp-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gp-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gp-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gp-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gp-status-badge {\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-status-pending {\r\n    background-color: #fef3c7;\r\n    color: #d97706;\r\n  }\r\n  \r\n  .gp-status-accepted {\r\n    background-color: #d1fae5;\r\n    color: #059669;\r\n  }\r\n  \r\n  .gp-status-rejected {\r\n    background-color: #fee2e2;\r\n    color: #dc2626;\r\n  }\r\n  \r\n  .gp-action-button {\r\n    padding: 0.375rem;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n    margin-right: 0.5rem;\r\n  }\r\n  \r\n  .gp-accept-button {\r\n    background-color: #d1fae5;\r\n    color: #059669;\r\n  }\r\n  \r\n  .gp-accept-button:hover {\r\n    background-color: #a7f3d0;\r\n  }\r\n  \r\n  .gp-reject-button {\r\n    background-color: #fee2e2;\r\n    color: #dc2626;\r\n  }\r\n  \r\n  .gp-reject-button:hover {\r\n    background-color: #fecaca;\r\n  }\r\n  \r\n  .gp-view-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n  }\r\n  \r\n  .gp-view-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n  \r\n  .gp-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .gp-modal-overlay {\r\n    position: fixed;\r\n    inset: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-modal-container {\r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    width: 100%;\r\n    max-width: 28rem;\r\n  }\r\n  \r\n  .gp-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-modal-close {\r\n    color: #6b7280;\r\n    transition: color 0.2s ease;\r\n  }\r\n  \r\n  .gp-modal-close:hover {\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-modal-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .gp-btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-btn-cancel {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-btn-cancel:hover {\r\n    background-color: #e5e7eb;\r\n  }\r\n  \r\n  .gp-btn-confirm {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n  }\r\n  \r\n  .gp-btn-confirm:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .gp-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n  \r\n  .gp-candidate-details {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-detail-item {\r\n    display: flex;\r\n    margin-bottom: 0.75rem;\r\n  }\r\n  \r\n  .gp-detail-label {\r\n    font-weight: 500;\r\n    color: #6b7280;\r\n    width: 120px;\r\n  }\r\n  \r\n  .gp-detail-value {\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-cv-download {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: #3b82f6;\r\n    font-weight: 500;\r\n    margin-top: 1rem;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .gp-cv-download:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\n// Toast component for notifications\r\nconst Toast = ({ message, type, onClose }) => {\r\n  const toastClass =\r\n    type === \"success\"\r\n      ? \"gp-toast-success\"\r\n      : type === \"error\"\r\n      ? \"gp-toast-error\"\r\n      : \"gp-toast-info\";\r\n\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onClose();\r\n    }, 3000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className={`gp-toast ${toastClass}`}>\r\n      {type === \"success\" && <Check size={20} />}\r\n      {type === \"error\" && <X size={20} />}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function CardCandidature({ color = \"light\" }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [candidatures, setCandidatures] = useState([]);\r\n  const [selectedCandidature, setSelectedCandidature] = useState(null);\r\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\r\n  const [isStatusModalOpen, setIsStatusModalOpen] = useState(false);\r\n  const [statusAction, setStatusAction] = useState(null);\r\n  const [toast, setToast] = useState({ affiche: false, message: \"\", type: \"\" });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch candidatures on component mount\r\n  useEffect(() => {\r\n    fetchCandidatures();\r\n  }, []);\r\n\r\n  const fetchCandidatures = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.get(\"/allcondidature\");\r\n    \r\n      const formattedCandidatures = response.data.map(candidature => ({\r\n        ...candidature,\r\n        status: candidature.status || \"pending\",\r\n        // Si le poste n'existe pas dans les donn√©es, attribuer une valeur par d√©faut\r\n        poste: candidature.poste || \"Non sp√©cifi√©\"\r\n      }));\r\n      setCandidatures(formattedCandidatures);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching candidatures:\", error);\r\n      afficherToast(\"Erreur lors du chargement des candidatures\", \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredCandidatures = candidatures\r\n    .filter((candidature) => {\r\n      // Filter by search term\r\n      const searchMatch = \r\n        candidature.nom.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        candidature.prenom.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        candidature.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (candidature.posteTitle && candidature.posteTitle.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      \r\n      // Filter by status\r\n      const statusMatch = \r\n        filterStatus === \"all\" || \r\n        candidature.status === filterStatus;\r\n      \r\n      return searchMatch && statusMatch;\r\n    })\r\n    .sort((a, b) => {\r\n      // Sort by date (newest first)\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n  const afficherToast = (message, type) => {\r\n    setToast({ affiche: true, message, type });\r\n  };\r\n\r\n  const fermerToast = () => {\r\n    setToast({ ...toast, affiche: false });\r\n  };\r\n\r\n  const handleViewCandidature = (candidature) => {\r\n    setSelectedCandidature(candidature);\r\n    setIsViewModalOpen(true);\r\n  };\r\n\r\n  const handleStatusAction = (action, candidature) => {\r\n    setSelectedCandidature(candidature);\r\n    setStatusAction(action);\r\n    setIsStatusModalOpen(true);\r\n  };\r\n\r\n  const handleConfirmStatusChange = async () => {\r\n    try {\r\n      // Update the status in the API\r\n      await axios.put(`/updatecondidature/${selectedCandidature._id}`, {\r\n        status: statusAction\r\n      });\r\n\r\n      // Update local state\r\n      const updatedCandidatures = candidatures.map((candidature) =>\r\n        candidature._id === selectedCandidature._id\r\n          ? { ...candidature, status: statusAction }\r\n          : candidature\r\n      );\r\n\r\n      setCandidatures(updatedCandidatures);\r\n      setIsStatusModalOpen(false);\r\n      \r\n      const actionText = statusAction === \"accepted\" ? \"accept√©e\" : \"refus√©e\";\r\n      afficherToast(`Candidature ${actionText} avec succ√®s`, \"success\");\r\n    } catch (error) {\r\n      console.error(\"Error updating candidature status:\", error);\r\n      afficherToast(\"Erreur lors de la mise √† jour du statut\", \"error\");\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    switch(status) {\r\n      case 'accepted':\r\n        return <span className=\"gp-status-badge gp-status-accepted\">Accept√©e</span>;\r\n      case 'rejected':\r\n        return <span className=\"gp-status-badge gp-status-rejected\">Refus√©e</span>;\r\n      default:\r\n        return <span className=\"gp-status-badge gp-status-pending\">En attente</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{encapsulatedStyles}</style>\r\n      <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\">\r\n        <div className=\"gp-candidature-container\">\r\n          <div className=\"gp-header-section\">\r\n            <h1\r\n              className=\"gp-modal-title\"\r\n              style={{ fontSize: \"1.5rem\", marginBottom: \"1.5rem\" }}\r\n            >\r\n              Liste des candidatures\r\n            </h1>\r\n\r\n            {/* Search and filter section */}\r\n            <div className=\"gp-search-container\">\r\n              <div className=\"gp-search-input\">\r\n                <Search className=\"gp-search-icon\" size={16} /> \r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par nom, pr√©nom, email ou poste...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"gp-input-field\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <select\r\n                  className=\"gp-filter-dropdown\"\r\n                  value={filterStatus}\r\n                  onChange={(e) => setFilterStatus(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Tous les statuts</option>\r\n                  <option value=\"pending\">En attente</option>\r\n                  <option value=\"accepted\">Accept√©s</option>\r\n                  <option value=\"rejected\">Refus√©s</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Candidatures table */}\r\n            <div className=\"gp-table-container\">\r\n              <table className=\"gp-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"gp-th\">Nom</th>\r\n                    <th className=\"gp-th\">Pr√©nom</th>\r\n                    <th className=\"gp-th\">Email</th>\r\n                    <th className=\"gp-th\">Poste</th>\r\n                    <th className=\"gp-th\">T√©l√©phone</th>\r\n                    <th className=\"gp-th\">Date</th>\r\n                    <th className=\"gp-th\">Statut</th>\r\n                    <th className=\"gp-th\" style={{ textAlign: \"center\" }}>\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {isLoading ? (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"8\"\r\n                        className=\"gp-td\"\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"#6b7280\",\r\n                          padding: \"1.5rem 0\",\r\n                        }}\r\n                      >\r\n                        Chargement des candidatures...\r\n                      </td>\r\n                    </tr>\r\n                  ) : filteredCandidatures.length > 0 ? (\r\n                    filteredCandidatures.map((candidature) => (\r\n                      <tr className=\"gp-tr\" key={candidature._id}>\r\n                        <td className=\"gp-td\">{candidature.nom}</td>\r\n                        <td className=\"gp-td\">{candidature.prenom}</td>\r\n                        <td className=\"gp-td\">{candidature.email}</td>\r\n                        <td className=\"gp-td\">{candidature.posteTitle}</td>\r\n                        <td className=\"gp-td\">{candidature.tel}</td>\r\n                        <td className=\"gp-td\">{formatDate(candidature.createdAt)}</td>\r\n                        <td className=\"gp-td\">\r\n                          {getStatusBadge(candidature.status)}\r\n                        </td>\r\n                        <td className=\"gp-td\">\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <button\r\n                              onClick={() => handleViewCandidature(candidature)}\r\n                              className=\"gp-action-button gp-view-button\"\r\n                              title=\"Voir d√©tails\"\r\n                            >\r\n                              <Eye size={16} />\r\n                            </button>\r\n                            \r\n                            {candidature.status === \"pending\" && (\r\n                              <>\r\n                                <button\r\n                                  onClick={() => handleStatusAction(\"accepted\", candidature)}\r\n                                  className=\"gp-action-button gp-accept-button\"\r\n                                  title=\"Accepter\"\r\n                                >\r\n                                  <Check size={16} />\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleStatusAction(\"rejected\", candidature)}\r\n                                  className=\"gp-action-button gp-reject-button\"\r\n                                  title=\"Refuser\"\r\n                                >\r\n                                  <X size={16} />\r\n                                </button>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"8\"\r\n                        className=\"gp-td\"\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"#6b7280\",\r\n                          padding: \"1.5rem 0\",\r\n                        }}\r\n                      >\r\n                        Aucune candidature trouv√©e\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"gp-pagination\">\r\n              <div style={{ fontSize: \"0.875rem\", color: \"#6b7280\" }}>\r\n                Affichage de {filteredCandidatures.length} sur{\" \"}\r\n                {candidatures.length} candidatures\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View candidature details modal */}\r\n        {isViewModalOpen && selectedCandidature && (\r\n          <div className=\"gp-modal-overlay\">\r\n            <div className=\"gp-modal-container\" style={{ maxWidth: \"32rem\" }}>\r\n              <div className=\"gp-modal-header\">\r\n                <h2 className=\"gp-modal-title\">D√©tails de la candidature</h2>\r\n                <button onClick={() => setIsViewModalOpen(false)} className=\"gp-modal-close\">\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"gp-candidate-details\">\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Nom:</span>\r\n                  <span className=\"gp-detail-value\">{selectedCandidature.nom}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Pr√©nom:</span>\r\n                  <span className=\"gp-detail-value\">{selectedCandidature.prenom}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Email:</span>\r\n                  <span className=\"gp-detail-value\">{selectedCandidature.email}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">T√©l√©phone:</span>\r\n                  <span className=\"gp-detail-value\">{selectedCandidature.tel}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Poste:</span>\r\n                  <span className=\"gp-detail-value\">{selectedCandidature.posteTitle}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Adresse:</span>\r\n                  <span className=\"gp-detail-value\">{selectedCandidature.adresse}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Date:</span>\r\n                  <span className=\"gp-detail-value\">{formatDate(selectedCandidature.createdAt)}</span>\r\n                </div>\r\n                <div className=\"gp-detail-item\">\r\n                  <span className=\"gp-detail-label\">Statut:</span>\r\n                  <span className=\"gp-detail-value\">{getStatusBadge(selectedCandidature.status)}</span>\r\n                </div>\r\n                \r\n                <a \r\n                  href={`http://localhost:5000/cv/${selectedCandidature.cv}`} \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"gp-cv-download\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n                    <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n                    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n                  </svg>\r\n                  T√©l√©charger le CV\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"gp-modal-footer\">\r\n                <button\r\n                  onClick={() => setIsViewModalOpen(false)}\r\n                  className=\"gp-btn gp-btn-cancel\"\r\n                >\r\n                  Fermer\r\n                </button>\r\n                \r\n                {selectedCandidature.status === \"pending\" && (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        setIsViewModalOpen(false);\r\n                        handleStatusAction(\"accepted\", selectedCandidature);\r\n                      }}\r\n                      className=\"gp-btn gp-btn-confirm\"\r\n                      style={{ backgroundColor: \"#059669\" }}\r\n                    >\r\n                      Accepter\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setIsViewModalOpen(false);\r\n                        handleStatusAction(\"rejected\", selectedCandidature);\r\n                      }}\r\n                      className=\"gp-btn gp-btn-confirm\"\r\n                      style={{ backgroundColor: \"#dc2626\" }}\r\n                    >\r\n                      Refuser\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Confirm status change modal */}\r\n        {isStatusModalOpen && selectedCandidature && (\r\n          <div className=\"gp-modal-overlay\">\r\n            <div className=\"gp-modal-container\">\r\n              <div className=\"gp-modal-header\">\r\n                <h2 className=\"gp-modal-title\">Confirmation</h2>\r\n                <button onClick={() => setIsStatusModalOpen(false)} className=\"gp-modal-close\">\r\n                  <X size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              <div>\r\n                <p style={{ marginBottom: \"1.5rem\", color: \"#4b5563\" }}>\r\n                  √ätes-vous s√ªr de vouloir {statusAction === \"accepted\" ? \"accepter\" : \"refuser\"} la candidature de{\" \"}\r\n                  <strong>{selectedCandidature.nom} {selectedCandidature.prenom}</strong> pour le poste de <strong>{selectedCandidature.posteTitle}</strong> ?\r\n                </p>\r\n\r\n                <div className=\"gp-modal-footer\">\r\n                  <button\r\n                    onClick={() => setIsStatusModalOpen(false)}\r\n                    className=\"gp-btn gp-btn-cancel\"\r\n                  >\r\n                    Annuler\r\n                  </button>\r\n                  <button\r\n                    onClick={handleConfirmStatusChange}\r\n                    className=\"gp-btn gp-btn-confirm\"\r\n                    style={{\r\n                      backgroundColor: statusAction === \"accepted\" ? \"#059669\" : \"#dc2626\",\r\n                    }}\r\n                  >\r\n                    {statusAction === \"accepted\" ? \"Accepter\" : \"Refuser\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Toast notifications */}\r\n        {toast.affiche && (\r\n          <Toast\r\n            message={toast.message}\r\n            type={toast.type}\r\n            onClose={fermerToast}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nCardCandidature.propTypes = {\r\n  color: PropTypes.string,\r\n};","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\components\\Cards\\CardProfile.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\auth\\Forget.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\DemandeF.js",["297","298"],"import { useState, useEffect } from \"react\";\r\nimport { Search, AlertCircle, Check, X, Eye } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\n// CSS encapsul√© avec pr√©fixe \"gf-\" (Gestion Formations)\r\nconst encapsulatedStyles = `\r\n  .gf-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n  \r\n  .gf-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gf-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    margin-bottom: 1.5rem;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gf-search-container {\r\n    position: relative;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gf-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gf-search-input {\r\n    width: 100%;\r\n    padding: 0.5rem 0.75rem 0.5rem 2.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  .gf-search-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gf-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gf-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gf-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gf-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gf-tr {\r\n    transition: background-color 0.2s ease;\r\n  }\r\n  \r\n  .gf-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gf-nom {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gf-prenom {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gf-formation-titre {\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #111827;\r\n  }\r\n  \r\n  .gf-date {\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  .gf-badge {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gf-badge-obligatoire {\r\n    background-color: #dbeafe;\r\n    color: #1e40af;\r\n  }\r\n  \r\n  .gf-badge-optionnel {\r\n    background-color: #ede9fe;\r\n    color: #5b21b6;\r\n  }\r\n  \r\n  .gf-status-badge {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    width: fit-content;\r\n  }\r\n  \r\n  .gf-status-accepte {\r\n    background-color: #dcfce7;\r\n    color: #166534;\r\n  }\r\n  \r\n  .gf-status-en-cours {\r\n    background-color: #fef3c7;\r\n    color: #92400e;\r\n  }\r\n  \r\n  .gf-status-refuse {\r\n    background-color: #fee2e2;\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gf-view-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    color: #4b5563;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gf-view-button:hover {\r\n    background-color: #f9fafb;\r\n    border-color: #9ca3af;\r\n  }\r\n  \r\n  .gf-view-button:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    ring: 2px solid #14b8a6;\r\n  }\r\n  \r\n  .gf-footer {\r\n    padding: 1rem;\r\n    background-color: #f9fafb;\r\n    border-top: 1px solid #e5e7eb;\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n  }\r\n  \r\n  /* Styles pour les actions */\r\n  .gf-actions {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .gf-action-button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1.75rem;\r\n    height: 1.75rem;\r\n    border-radius: 0.375rem;\r\n    color: #6b7280;\r\n    background-color: white;\r\n    border: 1px solid #e5e7eb;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gf-action-button:hover {\r\n    background-color: #f9fafb;\r\n    color: #111827;\r\n    border-color: #d1d5db;\r\n  }\r\n  \r\n  .gf-action-button-accepter:hover {\r\n    color: #047857;\r\n    background-color: #ecfdf5;\r\n    border-color: #a7f3d0;\r\n  }\r\n  \r\n  .gf-action-button-accepter {\r\n    color: #047857;\r\n  }\r\n  \r\n  .gf-action-button-refuser {\r\n    color: #b91c1c;\r\n  }\r\n  \r\n  .gf-action-button-refuser:hover {\r\n    color: #dc2626;\r\n    background-color: #fef2f2;\r\n    border-color: #fecaca;\r\n  }\r\n  \r\n  .gf-loading {\r\n    text-align: center;\r\n    padding: 1rem;\r\n    color: #6b7280;\r\n  }\r\n`;\r\n\r\nexport default function GestionFormations() {\r\n  const [formations, setFormations] = useState([]);\r\n  const [formationsFiltrees, setFormationsFiltrees] = useState([]);\r\n  const [recherche, setRecherche] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Charger les donn√©es depuis l'API\r\n  useEffect(() => {\r\n    const fetchFormations = async () => {\r\n      try {\r\n        const response = await axios.get('/alldemandeformation');\r\n        // Transformer les donn√©es pour correspondre √† notre structure\r\n        const formattedData = response.data.map(item => ({\r\n          _id: item._id,\r\n          nom: item.nom,\r\n          prenom: item.prenom,\r\n          titre: item.nomFormation,\r\n          statut: item.statut.toLowerCase().replace(' ', '_'),\r\n          dateDemande: item.dateDemande\r\n        }));\r\n        \r\n        setFormations(formattedData);\r\n        setFormationsFiltrees(formattedData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Erreur lors du chargement des formations:\", err);\r\n        setError(\"Erreur lors du chargement des formations\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFormations();\r\n  }, []);\r\n\r\n  // Formater la date pour l'affichage\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR');\r\n  };\r\n\r\n  // Filtrage des formations bas√© sur la recherche\r\n  const filtrerFormations = (terme) => {\r\n    setRecherche(terme);\r\n    if (!terme.trim()) {\r\n      setFormationsFiltrees(formations);\r\n      return;\r\n    }\r\n    \r\n    const termeLower = terme.toLowerCase();\r\n    const resultats = formations.filter(formation => {\r\n      return (\r\n        formation.nom.toLowerCase().includes(termeLower) ||\r\n        formation.prenom.toLowerCase().includes(termeLower) ||\r\n        formation.titre.toLowerCase().includes(termeLower)\r\n      );\r\n    });\r\n    \r\n    setFormationsFiltrees(resultats);\r\n  };\r\n\r\n  // Mapping des statuts API vers les statuts d'affichage\r\n  const mapStatus = (status) => {\r\n    switch (status) {\r\n      case 'accepte':\r\n      case 'approuv√©e':\r\n        return 'Accept√©';\r\n      case 'en_cours':\r\n      case 'en_attente':\r\n        return 'En cours';\r\n      case 'refuse':\r\n      case 'rejet√©e':\r\n        return 'Refus√©';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  // Mettre √† jour le statut d'une formation\r\n  const updateStatut = async (id, nouveauStatut) => {\r\n    try {\r\n      // Convertir notre statut vers le format attendu par le backend\r\n      const backendStatut = nouveauStatut === 'accepte' ? 'Approuv√©e' : \r\n                          nouveauStatut === 'refuse' ? 'Rejet√©e' : 'En attente';\r\n      \r\n      await axios.put(`/api/demandeformation/${id}`, { statut: backendStatut });\r\n      \r\n      // Mise √† jour de l'√©tat local\r\n      const formationsUpdated = formations.map(formation => {\r\n        if (formation._id === id) {\r\n          return {\r\n            ...formation, \r\n            statut: nouveauStatut\r\n          };\r\n        }\r\n        return formation;\r\n      });\r\n      \r\n      setFormations(formationsUpdated);\r\n      setFormationsFiltrees(\r\n        formationsUpdated.filter(formation => {\r\n          if (recherche.trim() === \"\") return true;\r\n          \r\n          const termeLower = recherche.toLowerCase();\r\n          return (\r\n            formation.nom.toLowerCase().includes(termeLower) ||\r\n            formation.prenom.toLowerCase().includes(termeLower) ||\r\n            formation.titre.toLowerCase().includes(termeLower)\r\n          );\r\n        })\r\n      );\r\n      \r\n      alert(`La formation a √©t√© ${mapStatus(nouveauStatut).toLowerCase()}.`);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la mise √† jour:\", err);\r\n      alert(\"Erreur lors de la mise √† jour de la formation.\");\r\n    }\r\n  };\r\n\r\n  // Actions des boutons\r\n  const handleAccepter = (id) => updateStatut(id, 'accepte');\r\n  const handleRefuser = (id) => updateStatut(id, 'refuse');\r\n\r\n  // Rendu du statut avec l'ic√¥ne appropri√©e\r\n  const renderStatus = (status) => {\r\n    const displayStatus = mapStatus(status);\r\n    \r\n    switch (status) {\r\n      case \"accepte\":\r\n      case \"approuv√©e\":\r\n        return (\r\n          <div className=\"gf-status-badge gf-status-accepte\">\r\n            <Check size={14} />\r\n            <span>Accept√©</span>\r\n          </div>\r\n        );\r\n      case \"en_cours\":\r\n      case \"en_attente\":\r\n        return (\r\n          <div className=\"gf-status-badge gf-status-en-cours\">\r\n            <AlertCircle size={14} />\r\n            <span>En cours</span>\r\n          </div>\r\n        );\r\n      case \"refuse\":\r\n      case \"rejet√©e\":\r\n        return (\r\n          <div className=\"gf-status-badge gf-status-refuse\">\r\n            <X size={14} />\r\n            <span>Refus√©</span>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Injection du CSS encapsul√© */}\r\n      <style>{encapsulatedStyles}</style>\r\n      \r\n      <div className=\"gf-container\">\r\n        {/* En-t√™te et recherche */}\r\n        <div className=\"gf-header-section\">\r\n          <h1 className=\"gf-title\">\r\n            Gestion des Formations\r\n          </h1>\r\n          \r\n          {/* Barre de recherche */}\r\n          <div className=\"gf-search-container\">\r\n            <div className=\"gf-search-icon\">\r\n              <Search size={18} />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"gf-search-input\"\r\n              placeholder=\"Rechercher par nom, pr√©nom ou titre de formation...\"\r\n              value={recherche}\r\n              onChange={(e) => filtrerFormations(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Affichage des erreurs */}\r\n        {error && (\r\n          <div className=\"gf-error\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tableau des formations */}\r\n        <div className=\"gf-table-container\">\r\n          <table className=\"gf-table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"gf-th\">Nom</th>\r\n                <th className=\"gf-th\">Pr√©nom</th>\r\n                <th className=\"gf-th\">Titre de Formation</th>\r\n                <th className=\"gf-th\">Statut</th>\r\n                <th className=\"gf-th\">Date de demande</th>\r\n                <th className=\"gf-th\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loading ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"gf-td gf-loading\">\r\n                    Chargement en cours...\r\n                  </td>\r\n                </tr>\r\n              ) : formationsFiltrees.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"gf-td\" style={{ textAlign: 'center' }}>\r\n                    {recherche ? \"Aucune formation ne correspond √† votre recherche\" : \"Aucune formation trouv√©e\"}\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                formationsFiltrees.map((formation) => (\r\n                  <tr key={formation._id} className=\"gf-tr\">\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-nom\">{formation.nom}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-prenom\">{formation.prenom}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-formation-titre\">{formation.titre}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      {renderStatus(formation.statut)}\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-date\">{formatDate(formation.dateDemande)}</div>\r\n                    </td>\r\n                    <td className=\"gf-td\">\r\n                      <div className=\"gf-actions\">\r\n                        {(formation.statut === \"en_cours\" || formation.statut === \"en_attente\") && (\r\n                          <>\r\n                            <button \r\n                              className=\"gf-action-button gf-action-button-accepter\" \r\n                              onClick={() => handleAccepter(formation._id)}\r\n                              title=\"Accepter\"\r\n                            >\r\n                              <Check size={16} />\r\n                            </button>\r\n                            <button \r\n                              className=\"gf-action-button gf-action-button-refuser\" \r\n                              onClick={() => handleRefuser(formation._id)}\r\n                              title=\"Refuser\"\r\n                            >\r\n                              <X size={16} />\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        {/* Information sur les r√©sultats */}\r\n        <div className=\"gf-footer\">\r\n          Affichage de {formationsFiltrees.length} sur {formations.length} formations\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\DemandeA.js",[],"C:\\Users\\Mega-PC\\Projet-pfe-ubcirh25\\Frontend\\src\\views\\admin\\DemandeC.js",["299","300"],{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"301","replacedBy":"305"},{"ruleId":"303","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":14},{"ruleId":"307","severity":1,"message":"311","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":15},{"ruleId":"307","severity":1,"message":"312","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":19},{"ruleId":"307","severity":1,"message":"313","line":2,"column":25,"nodeType":"309","messageId":"310","endLine":2,"endColumn":33},{"ruleId":"314","severity":1,"message":"315","line":142,"column":6,"nodeType":"316","endLine":142,"endColumn":31,"suggestions":"317"},{"ruleId":"307","severity":1,"message":"318","line":238,"column":13,"nodeType":"309","messageId":"310","endLine":238,"endColumn":21},{"ruleId":"319","severity":1,"message":"320","line":27,"column":15,"nodeType":"321","endLine":27,"endColumn":75},{"ruleId":"322","severity":1,"message":"323","line":27,"column":15,"nodeType":"321","endLine":27,"endColumn":75},{"ruleId":"319","severity":1,"message":"320","line":28,"column":15,"nodeType":"321","endLine":28,"endColumn":74},{"ruleId":"322","severity":1,"message":"323","line":28,"column":15,"nodeType":"321","endLine":28,"endColumn":74},{"ruleId":"319","severity":1,"message":"320","line":29,"column":15,"nodeType":"321","endLine":29,"endColumn":73},{"ruleId":"322","severity":1,"message":"323","line":29,"column":15,"nodeType":"321","endLine":29,"endColumn":73},{"ruleId":"307","severity":1,"message":"324","line":26,"column":9,"nodeType":"309","messageId":"310","endLine":26,"endColumn":25},{"ruleId":"307","severity":1,"message":"325","line":151,"column":9,"nodeType":"309","messageId":"310","endLine":151,"endColumn":21},{"ruleId":"307","severity":1,"message":"326","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":19},{"ruleId":"307","severity":1,"message":"327","line":550,"column":17,"nodeType":"309","messageId":"310","endLine":550,"endColumn":25},{"ruleId":"301","replacedBy":"328"},{"ruleId":"303","replacedBy":"329"},{"ruleId":"301","replacedBy":"330"},{"ruleId":"303","replacedBy":"331"},{"ruleId":"307","severity":1,"message":"332","line":321,"column":7,"nodeType":"309","messageId":"310","endLine":321,"endColumn":14},{"ruleId":"314","severity":1,"message":"333","line":359,"column":6,"nodeType":"316","endLine":359,"endColumn":8,"suggestions":"334"},{"ruleId":"307","severity":1,"message":"335","line":2,"column":41,"nodeType":"309","messageId":"310","endLine":2,"endColumn":44},{"ruleId":"307","severity":1,"message":"327","line":365,"column":17,"nodeType":"309","messageId":"310","endLine":365,"endColumn":25},{"ruleId":"307","severity":1,"message":"336","line":497,"column":11,"nodeType":"309","messageId":"310","endLine":497,"endColumn":24},{"ruleId":"307","severity":1,"message":"318","line":139,"column":15,"nodeType":"309","messageId":"310","endLine":139,"endColumn":23},{"ruleId":"307","severity":1,"message":"318","line":101,"column":13,"nodeType":"309","messageId":"310","endLine":101,"endColumn":21},{"ruleId":"307","severity":1,"message":"337","line":12,"column":10,"nodeType":"309","messageId":"310","endLine":12,"endColumn":15},{"ruleId":"307","severity":1,"message":"338","line":13,"column":10,"nodeType":"309","messageId":"310","endLine":13,"endColumn":17},{"ruleId":"307","severity":1,"message":"339","line":15,"column":10,"nodeType":"309","messageId":"310","endLine":15,"endColumn":25},{"ruleId":"307","severity":1,"message":"340","line":3,"column":33,"nodeType":"309","messageId":"310","endLine":3,"endColumn":39},{"ruleId":"314","severity":1,"message":"341","line":332,"column":6,"nodeType":"316","endLine":332,"endColumn":8,"suggestions":"342"},{"ruleId":"307","severity":1,"message":"335","line":2,"column":41,"nodeType":"309","messageId":"310","endLine":2,"endColumn":44},{"ruleId":"307","severity":1,"message":"336","line":373,"column":11,"nodeType":"309","messageId":"310","endLine":373,"endColumn":24},{"ruleId":"307","severity":1,"message":"343","line":2,"column":18,"nodeType":"309","messageId":"310","endLine":2,"endColumn":29},{"ruleId":"307","severity":1,"message":"344","line":2,"column":67,"nodeType":"309","messageId":"310","endLine":2,"endColumn":78},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],["345"],["346"],"no-unused-vars","'Signin' is defined but never used.","Identifier","unusedVar","'Postule' is defined but never used.","'AdminNavbar' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applyFilters'. Either include it or remove the dependency array.","ArrayExpression",["347"],"'response' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'validatePassword' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'HeaderStats' is defined but never used.","'setError' is assigned a value but never used.",["345"],["346"],["345"],["346"],"'API_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOffers'. Either include it or remove the dependency array.",["348"],"'Eye' is defined but never used.","'displayStatus' is assigned a value but never used.","'error' is assigned a value but never used.","'success' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'Filter' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCandidatures'. Either include it or remove the dependency array.",["349"],"'AlertCircle' is defined but never used.","'ChevronDown' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [applyFilters, dateFilter, jobListings]",{"range":"356","text":"357"},"Update the dependencies array to be: [fetchOffers]",{"range":"358","text":"359"},"Update the dependencies array to be: [fetchCandidatures]",{"range":"360","text":"361"},[4428,4453],"[applyFilters, dateFilter, jobListings]",[7630,7632],"[fetchOffers]",[6948,6950],"[fetchCandidatures]"]