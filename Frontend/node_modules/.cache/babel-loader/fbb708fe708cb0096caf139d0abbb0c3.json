{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mega-PC\\\\Projet-pfe-ubcirh25\\\\Frontend\\\\src\\\\components\\\\Cards\\\\CardPersonnels.js\",\n  _s = $RefreshSig$();\n{/* const encapsulatedStyles = `\r\n  .gp-personnel-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .gp-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gp-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .gp-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gp-tab-button {\r\n    padding: 0.5rem 1rem;\r\n    border-bottom: 2px solid transparent;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-tab-button.gp-active {\r\n    border-bottom-color: #14b8a6;\r\n    color: #14b8a6;\r\n  }\r\n  \r\n  .gp-tab-button:hover:not(.gp-active) {\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gp-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gp-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gp-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gp-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gp-department-badge {\r\n    background-color: #e6fffa;\r\n    color: #047857;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-status-badge {\r\n    background-color: #dcfce7;\r\n    color: #166534;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-action-button {\r\n    padding: 0.375rem;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-view-button {\r\n    background-color: #e6fffa;\r\n    color: #0d9488;\r\n  }\r\n  \r\n  .gp-view-button:hover {\r\n    background-color: #ccfbf1;\r\n  }\r\n  \r\n  .gp-edit-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n  }\r\n  \r\n  .gp-edit-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n  \r\n  .gp-delete-button {\r\n    background-color: #fee2e2;\r\n    color: #ef4444;\r\n  }\r\n  \r\n  .gp-delete-button:hover {\r\n    background-color: #fecaca;\r\n  }\r\n  \r\n  .gp-add-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-add-button:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .gp-page-button {\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.875rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-page-button.gp-active {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    border-color: #14b8a6;\r\n  }\r\n  \r\n  .gp-page-button:hover:not(.gp-active) {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gp-employee-image {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    border-radius: 9999px;\r\n    object-fit: cover;\r\n    border: 2px solid #99f6e4;\r\n  }\r\n  \r\n  .gp-modal-overlay {\r\n    position: fixed;\r\n    inset: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-modal-container {\r\n    max-height: 90vh;\r\n    overflow-y: auto; \r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    width: 100%;\r\n    max-width: 35rem;\r\n  }\r\n  \r\n  .gp-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-modal-close {\r\n    color: #6b7280;\r\n    transition: color 0.2s ease;\r\n  }\r\n  \r\n  .gp-modal-close:hover {\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gp-form-label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-form-input {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-form-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-form-input:disabled {\r\n    background-color: #f3f4f6;\r\n  }\r\n  \r\n  .gp-form-select {\r\n    width: 100%;\r\n   \r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-form-select:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-modal-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .gp-btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-btn-cancel {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-btn-cancel:hover {\r\n    background-color: #e5e7eb;\r\n  }\r\n  \r\n  .gp-btn-save {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n  }\r\n  \r\n  .gp-btn-save:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-details-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-details-image {\r\n    width: 6rem;\r\n    height: 6rem;\r\n    border-radius: 9999px;\r\n    margin-bottom: 0.75rem;\r\n    object-fit: cover;\r\n    border: 3px solid #99f6e4;\r\n  }\r\n  \r\n  .gp-details-name {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-details-department {\r\n    color: #6b7280;\r\n  }\r\n  \r\n  .gp-details-row {\r\n    display: flex;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    padding-bottom: 0.75rem;\r\n    margin-bottom: 0.75rem;\r\n  }\r\n  \r\n  .gp-details-label {\r\n    width: 33.333333%;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-details-value {\r\n    color: #4b5563;\r\n  }\r\n  \r\n  .gp-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .gp-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n  \r\n  .gp-toast-info {\r\n    background-color: #3b82f6;\r\n  }\r\n \n  .gp-password-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n \n  .gp-password-input {\r\n    flex: 1;\r\n  }\r\n \n  .gp-copy-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n    padding: 0.5rem;\r\n    border-radius: 0.375rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n \n  .gp-copy-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n \n  .gp-generate-button {\r\n    background-color: #e6fffa;\r\n    color: #0d9488;\r\n    padding: 0.5rem;\r\n    border-radius: 0.375rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.75rem;\r\n    margin-top: 0.25rem;\r\n  }\r\n \n  .gp-generate-button:hover {\r\n    background-color: #ccfbf1;\r\n  }\r\n \n  .gp-conge-badge {\r\n    background-color: #f0f9ff;\r\n    color: #0369a1;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-salary-badge {\r\n    background-color: #f0fdf4;\r\n    color: #15803d;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n \n  .gp-image-upload-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n \n  .gp-image-preview {\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: cover;\r\n    border-radius: 8px;\r\n    border: 1px dashed #ccc;\r\n  }\r\n `;*/}\nimport { useState, useEffect } from 'react';\nimport { Search, Edit, Trash, Plus, X, Check, Filter, Eye, Copy } from 'lucide-react';\nimport PersonnelService from '../services/personnelService';\n\n// CSS encapsulé avec préfixe \"gp-\" (inchangé, pour simplifier)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst encapsulatedStyles = `\n  // Votre CSS existant...\n`;\n\n// Fonction pour générer un mot de passe aléatoire\nconst generatePassword = () => {\n  const length = 10;\n  const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()\";\n  let password = \"\";\n  for (let i = 0; i < length; i++) {\n    password += charset.charAt(Math.floor(Math.random() * charset.length));\n  }\n  return password;\n};\n\n// Composant Modal pour les détails (inchangé)\nconst DetailsModal = ({\n  employe,\n  onClose\n}) => {\n  // Code inchangé...\n};\n\n// Composant de toast pour les notifications (inchangé)\n_c = DetailsModal;\nconst Toast = ({\n  message,\n  type,\n  onClose\n}) => {\n  // Code inchangé...\n};\n\n// Composant principal de gestion du personnel\n_c2 = Toast;\nexport default function GestionPersonnel() {\n  _s();\n  // État pour stocker les données des employés\n  const [employes, setEmployes] = useState([]);\n  const [employesAffiches, setEmployesAffiches] = useState([]);\n  const [recherche, setRecherche] = useState(\"\");\n  const [filtreType, setFiltreType] = useState(\"nom\");\n  const [filtreDepartement, setFiltreDepartement] = useState(\"tous\");\n  const [modalOuvert, setModalOuvert] = useState(false);\n  const [detailsModalOuvert, setDetailsModalOuvert] = useState(false);\n  const [suppressionModalOuvert, setSuppressionModalOuvert] = useState(false);\n  const [employeActuel, setEmployeActuel] = useState(null);\n  const [employeDetails, setEmployeDetails] = useState(null);\n  const [employeASupprimer, setEmployeASupprimer] = useState(null);\n  const [toast, setToast] = useState({\n    affiche: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [imagePreview, setImagePreview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Nouvel employé vide pour le formulaire d'ajout\n  const employeVide = {\n    nom: \"\",\n    prenom: \"\",\n    email: \"\",\n    tel: \"\",\n    departement: \"\",\n    sexe: \"\",\n    salaire: \"\",\n    soldedeconge: 30,\n    password: generatePassword(),\n    image: \"\"\n  };\n\n  // Charger les employés au chargement du composant\n  useEffect(() => {\n    fetchEmployes();\n  }, []);\n\n  // Fonction pour récupérer les employés depuis l'API\n  const fetchEmployes = async () => {\n    try {\n      setIsLoading(true);\n      const response = await PersonnelService.getAllPersonnel();\n      if (response.success) {\n        // Adapter les données du backend pour correspondre au format du frontend\n        const adaptedData = response.data.map(emp => ({\n          id: emp._id,\n          nom: emp.nom,\n          prenom: emp.prenom,\n          email: emp.email,\n          telephone: emp.tel,\n          departement: emp.departement,\n          sexe: emp.sexe,\n          salaire: emp.salaire,\n          soldeConge: emp.soldedeconge,\n          // Si l'image est stockée sous forme de chemin relatif, ajoutez le chemin de base\n          image: emp.image ? `http://localhost:5000/${emp.image}` : \"\"\n        }));\n        setEmployes(adaptedData);\n      } else {\n        afficherToast(\"Erreur lors de la récupération des employés\", \"error\");\n      }\n    } catch (error) {\n      console.error(\"Erreur:\", error);\n      afficherToast(\"Erreur de connexion au serveur\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filtrer les employés en fonction de la recherche et du département\n  useEffect(() => {\n    let filtres = [...employes];\n\n    // Filtre par département\n    if (filtreDepartement !== \"tous\") {\n      filtres = filtres.filter(e => e.departement === filtreDepartement);\n    }\n\n    // Filtre par recherche\n    if (recherche !== \"\") {\n      filtres = filtres.filter(employe => {\n        if (filtreType === \"nom\") {\n          return employe.nom.toLowerCase().includes(recherche.toLowerCase()) || employe.prenom.toLowerCase().includes(recherche.toLowerCase());\n        } else if (filtreType === \"telephone\") {\n          return employe.telephone.toString().includes(recherche);\n        } else if (filtreType === \"id\") {\n          return employe.id.toString().includes(recherche);\n        }\n        return true;\n      });\n    }\n    setEmployesAffiches(filtres);\n  }, [recherche, filtreType, filtreDepartement, employes]);\n\n  // Afficher un toast\n  const afficherToast = (message, type) => {\n    setToast({\n      affiche: true,\n      message,\n      type\n    });\n  };\n\n  // Fermer le toast\n  const fermerToast = () => {\n    setToast({\n      ...toast,\n      affiche: false\n    });\n  };\n\n  // Ouvrir le modal pour ajouter/modifier un employé\n  const ouvrirModal = (employe = null) => {\n    if (employe) {\n      setEmployeActuel(employe);\n      setImagePreview(employe.image || null);\n    } else {\n      setEmployeActuel({\n        ...employeVide,\n        password: generatePassword()\n      });\n      setImagePreview(null);\n    }\n    setModalOuvert(true);\n  };\n\n  // Gérer l'upload d'image\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setEmployeActuel(prev => ({\n          ...prev,\n          image: reader.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Fermer le modal\n  const fermerModal = () => {\n    setModalOuvert(false);\n    setEmployeActuel(null);\n    setImagePreview(null);\n  };\n\n  // Autres fonctions de gestion des modals (inchangées)\n  const ouvrirDetailsModal = employe => {\n    setEmployeDetails(employe);\n    setDetailsModalOuvert(true);\n  };\n  const fermerDetailsModal = () => {\n    setDetailsModalOuvert(false);\n    setEmployeDetails(null);\n  };\n  const ouvrirSuppressionModal = employe => {\n    setEmployeASupprimer(employe);\n    setSuppressionModalOuvert(true);\n  };\n  const fermerSuppressionModal = () => {\n    setSuppressionModalOuvert(false);\n    setEmployeASupprimer(null);\n  };\n\n  // Gérer les changements dans le formulaire\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeActuel(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Générer un nouveau mot de passe\n  const genererNouveauMotDePasse = () => {\n    setEmployeActuel(prev => ({\n      ...prev,\n      password: generatePassword()\n    }));\n  };\n\n  // Copier le mot de passe dans le presse-papiers\n  const copierMotDePasse = () => {\n    navigator.clipboard.writeText(employeActuel.password);\n    afficherToast(\"Mot de passe copié !\", \"success\");\n  };\n\n  // Sauvegarder l'employé (ajout ou modification)\n  const sauvegarderEmploye = async () => {\n    // Vérifier si tous les champs obligatoires sont remplis\n    if (!employeActuel.nom || !employeActuel.prenom || !employeActuel.email || !employeActuel.telephone || !employeActuel.departement || !employeActuel.sexe) {\n      afficherToast(\"Veuillez remplir tous les champs obligatoires\", \"error\");\n      return;\n    }\n    if (employeActuel.salaire && isNaN(employeActuel.salaire)) {\n      afficherToast(\"Le salaire doit être un nombre valide\", \"error\");\n      return;\n    }\n    try {\n      setIsLoading(true);\n\n      // Adapter les données pour le format du backend\n      const personnelData = {\n        nom: employeActuel.nom,\n        prenom: employeActuel.prenom,\n        email: employeActuel.email,\n        tel: employeActuel.telephone,\n        departement: employeActuel.departement,\n        sexe: employeActuel.sexe.toLowerCase(),\n        // le backend attend 'homme' ou 'femme' en minuscules\n        salaire: employeActuel.salaire,\n        soldedeconge: employeActuel.soldeConge,\n        password: employeActuel.password,\n        image: employeActuel.image\n      };\n      let response;\n      if (employeActuel.id) {\n        // Mise à jour d'un employé existant\n        if (employeActuel.image && employeActuel.image.startsWith('data:')) {\n          // Mise à jour avec nouvelle image\n          response = await PersonnelService.updatePersonnelWithImage(employeActuel.id, personnelData);\n        } else {\n          // Mise à jour sans nouvelle image\n          response = await PersonnelService.updatePersonnel(employeActuel.id, personnelData);\n        }\n        afficherToast(\"Employé modifié avec succès\", \"success\");\n      } else {\n        // Ajout d'un nouvel employé\n        if (employeActuel.image) {\n          // Ajout avec image\n          response = await PersonnelService.addPersonnelWithImage(personnelData);\n        } else {\n          // Ajout sans image\n          response = await PersonnelService.addPersonnel(personnelData);\n        }\n        afficherToast(\"Employé ajouté avec succès\", \"success\");\n      }\n\n      // Recharger la liste des employés\n      fetchEmployes();\n      fermerModal();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Erreur:\", error);\n      afficherToast(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Une erreur est survenue\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Supprimer un employé après confirmation\n  const confirmerSuppression = async () => {\n    if (employeASupprimer) {\n      try {\n        setIsLoading(true);\n        await PersonnelService.deletePersonnel(employeASupprimer.id);\n        afficherToast(\"Employé supprimé avec succès\", \"error\");\n        fetchEmployes(); // Recharger la liste\n        fermerSuppressionModal();\n      } catch (error) {\n        console.error(\"Erreur:\", error);\n        afficherToast(\"Erreur lors de la suppression\", \"error\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: encapsulatedStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gp-personnel-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '1rem',\n            color: '#14b8a6'\n          },\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gp-table-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(GestionPersonnel, \"+T7nh4hclwoawdVdf06Jer7+Zhk=\");\n_c3 = GestionPersonnel;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DetailsModal\");\n$RefreshReg$(_c2, \"Toast\");\n$RefreshReg$(_c3, \"GestionPersonnel\");","map":{"version":3,"names":["useState","useEffect","Search","Edit","Trash","Plus","X","Check","Filter","Eye","Copy","PersonnelService","jsxDEV","_jsxDEV","Fragment","_Fragment","encapsulatedStyles","generatePassword","length","charset","password","i","charAt","Math","floor","random","DetailsModal","employe","onClose","_c","Toast","message","type","_c2","GestionPersonnel","_s","employes","setEmployes","employesAffiches","setEmployesAffiches","recherche","setRecherche","filtreType","setFiltreType","filtreDepartement","setFiltreDepartement","modalOuvert","setModalOuvert","detailsModalOuvert","setDetailsModalOuvert","suppressionModalOuvert","setSuppressionModalOuvert","employeActuel","setEmployeActuel","employeDetails","setEmployeDetails","employeASupprimer","setEmployeASupprimer","toast","setToast","affiche","imagePreview","setImagePreview","isLoading","setIsLoading","employeVide","nom","prenom","email","tel","departement","sexe","salaire","soldedeconge","image","fetchEmployes","response","getAllPersonnel","success","adaptedData","data","map","emp","id","_id","telephone","soldeConge","afficherToast","error","console","filtres","filter","e","toLowerCase","includes","toString","fermerToast","ouvrirModal","handleImageUpload","file","target","files","reader","FileReader","onloadend","result","prev","readAsDataURL","fermerModal","ouvrirDetailsModal","fermerDetailsModal","ouvrirSuppressionModal","fermerSuppressionModal","handleChange","name","value","genererNouveauMotDePasse","copierMotDePasse","navigator","clipboard","writeText","sauvegarderEmploye","isNaN","personnelData","startsWith","updatePersonnelWithImage","updatePersonnel","addPersonnelWithImage","addPersonnel","_error$response","_error$response$data","confirmerSuppression","deletePersonnel","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","display","justifyContent","padding","color","_c3","$RefreshReg$"],"sources":["C:/Users/Mega-PC/Projet-pfe-ubcirh25/Frontend/src/components/Cards/CardPersonnels.js"],"sourcesContent":["{/* const encapsulatedStyles = `\r\n  .gp-personnel-container {\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .gp-header-section {\r\n    padding: 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n  }\r\n  \r\n  .gp-search-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-search-input {\r\n    flex: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .gp-search-icon {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .gp-tab-button {\r\n    padding: 0.5rem 1rem;\r\n    border-bottom: 2px solid transparent;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-tab-button.gp-active {\r\n    border-bottom-color: #14b8a6;\r\n    color: #14b8a6;\r\n  }\r\n  \r\n  .gp-tab-button:hover:not(.gp-active) {\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .gp-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .gp-th {\r\n    text-align: left;\r\n    padding: 0.75rem 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #6b7280;\r\n    background-color: #f9fafb;\r\n    border-bottom: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .gp-td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    color: #374151;\r\n    border-bottom: 1px solid #f3f4f6;\r\n  }\r\n  \r\n  .gp-tr:hover {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gp-department-badge {\r\n    background-color: #e6fffa;\r\n    color: #047857;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-status-badge {\r\n    background-color: #dcfce7;\r\n    color: #166534;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-action-button {\r\n    padding: 0.375rem;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-view-button {\r\n    background-color: #e6fffa;\r\n    color: #0d9488;\r\n  }\r\n  \r\n  .gp-view-button:hover {\r\n    background-color: #ccfbf1;\r\n  }\r\n  \r\n  .gp-edit-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n  }\r\n  \r\n  .gp-edit-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n  \r\n  .gp-delete-button {\r\n    background-color: #fee2e2;\r\n    color: #ef4444;\r\n  }\r\n  \r\n  .gp-delete-button:hover {\r\n    background-color: #fecaca;\r\n  }\r\n  \r\n  .gp-add-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-add-button:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-pagination {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .gp-page-button {\r\n    padding: 0.375rem 0.75rem;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 0.375rem;\r\n    font-size: 0.875rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-page-button.gp-active {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n    border-color: #14b8a6;\r\n  }\r\n  \r\n  .gp-page-button:hover:not(.gp-active) {\r\n    background-color: #f9fafb;\r\n  }\r\n  \r\n  .gp-employee-image {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    border-radius: 9999px;\r\n    object-fit: cover;\r\n    border: 2px solid #99f6e4;\r\n  }\r\n  \r\n  .gp-modal-overlay {\r\n    position: fixed;\r\n    inset: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-modal-container {\r\n    max-height: 90vh;\r\n    overflow-y: auto; \r\n    background-color: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    padding: 1.5rem;\r\n    width: 100%;\r\n    max-width: 35rem;\r\n  }\r\n  \r\n  .gp-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-modal-close {\r\n    color: #6b7280;\r\n    transition: color 0.2s ease;\r\n  }\r\n  \r\n  .gp-modal-close:hover {\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .gp-form-label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-form-input {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-form-input:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-form-input:disabled {\r\n    background-color: #f3f4f6;\r\n  }\r\n  \r\n  .gp-form-select {\r\n    width: 100%;\r\n   \r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-form-select:focus {\r\n    outline: none;\r\n    border-color: #14b8a6;\r\n    box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.2);\r\n  }\r\n  \r\n  .gp-modal-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .gp-btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 500;\r\n    transition: all 0.2s ease;\r\n  }\r\n  \r\n  .gp-btn-cancel {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-btn-cancel:hover {\r\n    background-color: #e5e7eb;\r\n  }\r\n  \r\n  .gp-btn-save {\r\n    background-color: #14b8a6;\r\n    color: white;\r\n  }\r\n  \r\n  .gp-btn-save:hover {\r\n    background-color: #0d9488;\r\n  }\r\n  \r\n  .gp-details-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .gp-details-image {\r\n    width: 6rem;\r\n    height: 6rem;\r\n    border-radius: 9999px;\r\n    margin-bottom: 0.75rem;\r\n    object-fit: cover;\r\n    border: 3px solid #99f6e4;\r\n  }\r\n  \r\n  .gp-details-name {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .gp-details-department {\r\n    color: #6b7280;\r\n  }\r\n  \r\n  .gp-details-row {\r\n    display: flex;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    padding-bottom: 0.75rem;\r\n    margin-bottom: 0.75rem;\r\n  }\r\n  \r\n  .gp-details-label {\r\n    width: 33.333333%;\r\n    font-weight: 500;\r\n    color: #374151;\r\n  }\r\n  \r\n  .gp-details-value {\r\n    color: #4b5563;\r\n  }\r\n  \r\n  .gp-toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 0.375rem;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: white;\r\n    z-index: 50;\r\n  }\r\n  \r\n  .gp-toast-success {\r\n    background-color: #10b981;\r\n  }\r\n  \r\n  .gp-toast-error {\r\n    background-color: #ef4444;\r\n  }\r\n  \r\n  .gp-toast-info {\r\n    background-color: #3b82f6;\r\n  }\r\n\r\n  .gp-password-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .gp-password-input {\r\n    flex: 1;\r\n  }\r\n\r\n  .gp-copy-button {\r\n    background-color: #dbeafe;\r\n    color: #3b82f6;\r\n    padding: 0.5rem;\r\n    border-radius: 0.375rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n  }\r\n\r\n  .gp-copy-button:hover {\r\n    background-color: #bfdbfe;\r\n  }\r\n\r\n  .gp-generate-button {\r\n    background-color: #e6fffa;\r\n    color: #0d9488;\r\n    padding: 0.5rem;\r\n    border-radius: 0.375rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.75rem;\r\n    margin-top: 0.25rem;\r\n  }\r\n\r\n  .gp-generate-button:hover {\r\n    background-color: #ccfbf1;\r\n  }\r\n\r\n  .gp-conge-badge {\r\n    background-color: #f0f9ff;\r\n    color: #0369a1;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .gp-salary-badge {\r\n    background-color: #f0fdf4;\r\n    color: #15803d;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 9999px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .gp-image-upload-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .gp-image-preview {\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: cover;\r\n    border-radius: 8px;\r\n    border: 1px dashed #ccc;\r\n  }\r\n`;*/ }\r\nimport { useState, useEffect } from 'react';\r\nimport { Search, Edit, Trash, Plus, X, Check, Filter, Eye, Copy } from 'lucide-react';\r\nimport PersonnelService from '../services/personnelService';\r\n\r\n// CSS encapsulé avec préfixe \"gp-\" (inchangé, pour simplifier)\r\nconst encapsulatedStyles = `\r\n  // Votre CSS existant...\r\n`;\r\n\r\n// Fonction pour générer un mot de passe aléatoire\r\nconst generatePassword = () => {\r\n  const length = 10;\r\n  const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()\";\r\n  let password = \"\";\r\n  for (let i = 0; i < length; i++) {\r\n    password += charset.charAt(Math.floor(Math.random() * charset.length));\r\n  }\r\n  return password;\r\n};\r\n\r\n// Composant Modal pour les détails (inchangé)\r\nconst DetailsModal = ({ employe, onClose }) => {\r\n  // Code inchangé...\r\n};\r\n\r\n// Composant de toast pour les notifications (inchangé)\r\nconst Toast = ({ message, type, onClose }) => {\r\n  // Code inchangé...\r\n};\r\n\r\n// Composant principal de gestion du personnel\r\nexport default function GestionPersonnel() {\r\n  // État pour stocker les données des employés\r\n  const [employes, setEmployes] = useState([]);\r\n  const [employesAffiches, setEmployesAffiches] = useState([]);\r\n  const [recherche, setRecherche] = useState(\"\");\r\n  const [filtreType, setFiltreType] = useState(\"nom\");\r\n  const [filtreDepartement, setFiltreDepartement] = useState(\"tous\");\r\n  const [modalOuvert, setModalOuvert] = useState(false);\r\n  const [detailsModalOuvert, setDetailsModalOuvert] = useState(false);\r\n  const [suppressionModalOuvert, setSuppressionModalOuvert] = useState(false);\r\n  const [employeActuel, setEmployeActuel] = useState(null);\r\n  const [employeDetails, setEmployeDetails] = useState(null);\r\n  const [employeASupprimer, setEmployeASupprimer] = useState(null);\r\n  const [toast, setToast] = useState({ affiche: false, message: \"\", type: \"\" });\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Nouvel employé vide pour le formulaire d'ajout\r\n  const employeVide = { \r\n    nom: \"\", \r\n    prenom: \"\",\r\n    email: \"\",\r\n    tel: \"\", \r\n    departement: \"\", \r\n    sexe: \"\",\r\n    salaire: \"\",\r\n    soldedeconge: 30,\r\n    password: generatePassword(),\r\n    image: \"\"\r\n  };\r\n  \r\n  // Charger les employés au chargement du composant\r\n  useEffect(() => {\r\n    fetchEmployes();\r\n  }, []);\r\n  \r\n  // Fonction pour récupérer les employés depuis l'API\r\n  const fetchEmployes = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await PersonnelService.getAllPersonnel();\r\n      if (response.success) {\r\n        // Adapter les données du backend pour correspondre au format du frontend\r\n        const adaptedData = response.data.map(emp => ({\r\n          id: emp._id,\r\n          nom: emp.nom,\r\n          prenom: emp.prenom,\r\n          email: emp.email,\r\n          telephone: emp.tel,\r\n          departement: emp.departement,\r\n          sexe: emp.sexe,\r\n          salaire: emp.salaire,\r\n          soldeConge: emp.soldedeconge,\r\n          // Si l'image est stockée sous forme de chemin relatif, ajoutez le chemin de base\r\n          image: emp.image ? `http://localhost:5000/${emp.image}` : \"\"\r\n        }));\r\n        setEmployes(adaptedData);\r\n      } else {\r\n        afficherToast(\"Erreur lors de la récupération des employés\", \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur:\", error);\r\n      afficherToast(\"Erreur de connexion au serveur\", \"error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Filtrer les employés en fonction de la recherche et du département\r\n  useEffect(() => {\r\n    let filtres = [...employes];\r\n    \r\n    // Filtre par département\r\n    if (filtreDepartement !== \"tous\") {\r\n      filtres = filtres.filter(e => e.departement === filtreDepartement);\r\n    }\r\n    \r\n    // Filtre par recherche\r\n    if (recherche !== \"\") {\r\n      filtres = filtres.filter(employe => {\r\n        if (filtreType === \"nom\") {\r\n          return employe.nom.toLowerCase().includes(recherche.toLowerCase()) || \r\n                 employe.prenom.toLowerCase().includes(recherche.toLowerCase());\r\n        } else if (filtreType === \"telephone\") {\r\n          return employe.telephone.toString().includes(recherche);\r\n        } else if (filtreType === \"id\") {\r\n          return employe.id.toString().includes(recherche);\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n    \r\n    setEmployesAffiches(filtres);\r\n  }, [recherche, filtreType, filtreDepartement, employes]);\r\n\r\n  // Afficher un toast\r\n  const afficherToast = (message, type) => {\r\n    setToast({ affiche: true, message, type });\r\n  };\r\n\r\n  // Fermer le toast\r\n  const fermerToast = () => {\r\n    setToast({ ...toast, affiche: false });\r\n  };\r\n\r\n  // Ouvrir le modal pour ajouter/modifier un employé\r\n  const ouvrirModal = (employe = null) => {\r\n    if (employe) {\r\n      setEmployeActuel(employe);\r\n      setImagePreview(employe.image || null);\r\n    } else {\r\n      setEmployeActuel({ \r\n        ...employeVide,\r\n        password: generatePassword()\r\n      });\r\n      setImagePreview(null);\r\n    }\r\n    setModalOuvert(true);\r\n  };\r\n  \r\n  // Gérer l'upload d'image\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        setEmployeActuel(prev => ({ ...prev, image: reader.result }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Fermer le modal\r\n  const fermerModal = () => {\r\n    setModalOuvert(false);\r\n    setEmployeActuel(null);\r\n    setImagePreview(null);\r\n  };\r\n  \r\n  // Autres fonctions de gestion des modals (inchangées)\r\n  const ouvrirDetailsModal = (employe) => {\r\n    setEmployeDetails(employe);\r\n    setDetailsModalOuvert(true);\r\n  };\r\n  \r\n  const fermerDetailsModal = () => {\r\n    setDetailsModalOuvert(false);\r\n    setEmployeDetails(null);\r\n  };\r\n\r\n  const ouvrirSuppressionModal = (employe) => {\r\n    setEmployeASupprimer(employe);\r\n    setSuppressionModalOuvert(true);\r\n  };\r\n\r\n  const fermerSuppressionModal = () => {\r\n    setSuppressionModalOuvert(false);\r\n    setEmployeASupprimer(null);\r\n  };\r\n\r\n  // Gérer les changements dans le formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEmployeActuel(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Générer un nouveau mot de passe\r\n  const genererNouveauMotDePasse = () => {\r\n    setEmployeActuel(prev => ({ ...prev, password: generatePassword() }));\r\n  };\r\n\r\n  // Copier le mot de passe dans le presse-papiers\r\n  const copierMotDePasse = () => {\r\n    navigator.clipboard.writeText(employeActuel.password);\r\n    afficherToast(\"Mot de passe copié !\", \"success\");\r\n  };\r\n\r\n  // Sauvegarder l'employé (ajout ou modification)\r\n  const sauvegarderEmploye = async () => {\r\n    // Vérifier si tous les champs obligatoires sont remplis\r\n    if (!employeActuel.nom || !employeActuel.prenom || !employeActuel.email || \r\n        !employeActuel.telephone || !employeActuel.departement || !employeActuel.sexe) {\r\n      afficherToast(\"Veuillez remplir tous les champs obligatoires\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (employeActuel.salaire && isNaN(employeActuel.salaire)) {\r\n      afficherToast(\"Le salaire doit être un nombre valide\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      // Adapter les données pour le format du backend\r\n      const personnelData = {\r\n        nom: employeActuel.nom,\r\n        prenom: employeActuel.prenom,\r\n        email: employeActuel.email,\r\n        tel: employeActuel.telephone,\r\n        departement: employeActuel.departement,\r\n        sexe: employeActuel.sexe.toLowerCase(), // le backend attend 'homme' ou 'femme' en minuscules\r\n        salaire: employeActuel.salaire,\r\n        soldedeconge: employeActuel.soldeConge,\r\n        password: employeActuel.password,\r\n        image: employeActuel.image\r\n      };\r\n\r\n      let response;\r\n      \r\n      if (employeActuel.id) {\r\n        // Mise à jour d'un employé existant\r\n        if (employeActuel.image && employeActuel.image.startsWith('data:')) {\r\n          // Mise à jour avec nouvelle image\r\n          response = await PersonnelService.updatePersonnelWithImage(employeActuel.id, personnelData);\r\n        } else {\r\n          // Mise à jour sans nouvelle image\r\n          response = await PersonnelService.updatePersonnel(employeActuel.id, personnelData);\r\n        }\r\n        afficherToast(\"Employé modifié avec succès\", \"success\");\r\n      } else {\r\n        // Ajout d'un nouvel employé\r\n        if (employeActuel.image) {\r\n          // Ajout avec image\r\n          response = await PersonnelService.addPersonnelWithImage(personnelData);\r\n        } else {\r\n          // Ajout sans image\r\n          response = await PersonnelService.addPersonnel(personnelData);\r\n        }\r\n        afficherToast(\"Employé ajouté avec succès\", \"success\");\r\n      }\r\n      \r\n      // Recharger la liste des employés\r\n      fetchEmployes();\r\n      fermerModal();\r\n      \r\n    } catch (error) {\r\n      console.error(\"Erreur:\", error);\r\n      afficherToast(error.response?.data?.message || \"Une erreur est survenue\", \"error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Supprimer un employé après confirmation\r\n  const confirmerSuppression = async () => {\r\n    if (employeASupprimer) {\r\n      try {\r\n        setIsLoading(true);\r\n        await PersonnelService.deletePersonnel(employeASupprimer.id);\r\n        afficherToast(\"Employé supprimé avec succès\", \"error\");\r\n        fetchEmployes(); // Recharger la liste\r\n        fermerSuppressionModal();\r\n      } catch (error) {\r\n        console.error(\"Erreur:\", error);\r\n        afficherToast(\"Erreur lors de la suppression\", \"error\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* CSS et UI inchangés */}\r\n      <style>{encapsulatedStyles}</style>\r\n      \r\n      <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded\">\r\n        <div className=\"gp-personnel-container\">\r\n          {/* En-tête, recherche, etc. */}\r\n          {/* ... code inchangé ... */}\r\n          \r\n          {/* Afficher un indicateur de chargement */}\r\n          {isLoading && (\r\n            <div style={{ \r\n              display: 'flex', \r\n              justifyContent: 'center', \r\n              padding: '1rem',\r\n              color: '#14b8a6'\r\n            }}>\r\n              Chargement...\r\n            </div>\r\n          )}\r\n          \r\n          {/* Tableau des employés */}\r\n          <div className=\"gp-table-container\">\r\n            {/* ... code inchangé ... */}\r\n          </div>\r\n          \r\n          {/* ... reste du code UI inchangé ... */}\r\n        </div>\r\n        \r\n        {/* Modals et toast (inchangés) */}\r\n      </div>\r\n    </>\r\n  );\r\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}