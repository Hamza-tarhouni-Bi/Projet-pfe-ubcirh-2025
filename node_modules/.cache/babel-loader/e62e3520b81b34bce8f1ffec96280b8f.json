{"ast":null,"code":"{/*import React, { useState } from 'react';\r\n \n const SalaryAdvanceForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    amount: '',\r\n    reason: '',\r\n    repaymentMonths: '1',\r\n    repaymentDate: '',\r\n    urgencyLevel: 'normal',\r\n    additionalInfo: ''\r\n  });\r\n  \r\n  const [submitted, setSubmitted] = useState(false);\r\n  \r\n  const styles = {\r\n    container: {\r\n      padding: '20px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f7f8fc'\r\n    },\r\n    pageTitle: {\r\n      fontSize: '28px',\r\n      fontWeight: 'bold',\r\n      color: '#2563EB',\r\n      textAlign: 'center',\r\n      margin: '0 0 20px 0'\r\n    },\r\n    pageSubtitle: {\r\n      fontSize: '16px',\r\n      color: '#666',\r\n      textAlign: 'center',\r\n      margin: '0 0 30px 0'\r\n    },\r\n    card: {\r\n      maxWidth: '800px',\r\n      margin: '0 auto',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden'\r\n    },\r\n    header: {\r\n      backgroundColor: '#2563EB',\r\n      padding: '15px 20px',\r\n      color: '#FFFFFF'\r\n    },\r\n    title: {\r\n      fontSize: '16px',\r\n      fontWeight: 'bold',\r\n      margin: '0'\r\n    },\r\n    formContainer: {\r\n      padding: '24px'\r\n    },\r\n    formGrid: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '20px',\r\n      marginBottom: '24px'\r\n    },\r\n    formGroup: {\r\n      marginBottom: '16px'\r\n    },\r\n    label: {\r\n      display: 'block',\r\n      marginBottom: '6px',\r\n      fontSize: '14px',\r\n      fontWeight: '500',\r\n      color: '#333333'\r\n    },\r\n    input: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px'\r\n    },\r\n    select: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px',\r\n      backgroundColor: '#FFFFFF'\r\n    },\r\n    textarea: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px',\r\n      minHeight: '100px',\r\n      resize: 'vertical'\r\n    },\r\n    radioGroup: {\r\n      display: 'flex',\r\n      gap: '16px',\r\n      marginTop: '8px'\r\n    },\r\n    radioLabel: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      fontSize: '14px',\r\n      cursor: 'pointer'\r\n    },\r\n    radio: {\r\n      marginRight: '6px'\r\n    },\r\n    infoBox: {\r\n      backgroundColor: '#f0f7ff',\r\n      borderLeft: '4px solid #2563EB',\r\n      padding: '12px',\r\n      marginBottom: '20px'\r\n    },\r\n    infoText: {\r\n      color: '#333333',\r\n      fontSize: '14px',\r\n      margin: '0'\r\n    },\r\n    buttonContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      gap: '12px',\r\n      marginTop: '16px'\r\n    },\r\n    cancelButton: {\r\n      padding: '10px 16px',\r\n      backgroundColor: '#FFFFFF',\r\n      color: '#333333',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      fontWeight: '500'\r\n    },\r\n    submitButton: {\r\n      padding: '10px 16px',\r\n      backgroundColor: '#2563EB',\r\n      color: '#FFFFFF',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      fontWeight: '500'\r\n    },\r\n    successAlert: {\r\n      backgroundColor: '#f0f7ff',\r\n      borderLeft: '4px solid #2563EB',\r\n      padding: '12px',\r\n      marginBottom: '20px',\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    successIcon: {\r\n      color: '#2563EB',\r\n      marginRight: '8px'\r\n    },\r\n    successText: {\r\n      color: '#333333',\r\n      fontSize: '14px',\r\n      margin: '0'\r\n    },\r\n    summaryTitle: {\r\n      fontSize: '18px',\r\n      fontWeight: '600',\r\n      color: '#333333',\r\n      marginBottom: '16px'\r\n    },\r\n    summaryCard: {\r\n      backgroundColor: '#F5F5F5',\r\n      padding: '16px',\r\n      borderRadius: '4px',\r\n      marginBottom: '24px'\r\n    },\r\n    summaryGrid: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '16px'\r\n    },\r\n    summaryLabel: {\r\n      fontSize: '12px',\r\n      color: '#757575',\r\n      marginBottom: '4px'\r\n    },\r\n    summaryValue: {\r\n      fontSize: '14px',\r\n      fontWeight: '500',\r\n      color: '#333333'\r\n    },\r\n    colSpan2: {\r\n      gridColumn: 'span 2'\r\n    },\r\n    progressBar: {\r\n      height: '4px',\r\n      backgroundColor: '#E0E0E0',\r\n      borderRadius: '2px',\r\n      marginTop: '6px',\r\n      overflow: 'hidden'\r\n    },\r\n    progressFill: {\r\n      height: '100%',\r\n      backgroundColor: '#2563EB',\r\n      width: '0%',\r\n      transition: 'width 0.3s ease'\r\n    },\r\n    amountContainer: {\r\n      position: 'relative'\r\n    },\r\n    currencySymbol: {\r\n      position: 'absolute',\r\n      left: '10px',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      color: '#757575'\r\n    },\r\n    amountInput: {\r\n      width: '100%',\r\n      padding: '10px 10px 10px 30px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px'\r\n    },\r\n    divider: {\r\n      margin: '24px 0',\r\n      height: '1px',\r\n      backgroundColor: '#EEEEEE'\r\n    },\r\n    formSection: {\r\n      marginBottom: '24px'\r\n    },\r\n    sectionTitle: {\r\n      fontSize: '16px',\r\n      fontWeight: '600',\r\n      color: '#333333',\r\n      marginBottom: '16px'\r\n    }\r\n  };\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n  \r\n  const calculateRepaymentAmount = () => {\r\n    if (!formData.amount) return 0;\r\n    \r\n    const amount = parseFloat(formData.amount);\r\n    const months = parseInt(formData.repaymentMonths);\r\n    \r\n    if (isNaN(amount) || isNaN(months) || months === 0) return 0;\r\n    \r\n    return (amount / months).toFixed(2);\r\n  };\r\n  \r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.pageTitle}>Demande de Congé</h1>\r\n      <p style={styles.pageSubtitle}>Découvrez et soumettez vos demandes de congés en quelques clics</p>\r\n      \r\n      <div style={styles.card}>\r\n        <div style={styles.header}>\r\n          <h2 style={styles.title}>Demande d'Avance sur Salaire</h2>\r\n        </div>\r\n        \r\n        {submitted ? (\r\n          <div style={styles.formContainer}>\r\n            <div style={styles.successAlert}>\r\n              <span style={styles.successIcon}>✓</span>\r\n              <p style={styles.successText}>\r\n                Votre demande d'avance sur salaire a été soumise avec succès!\r\n              </p>\r\n            </div>\r\n            \r\n            <h2 style={styles.summaryTitle}>Récapitulatif de votre demande</h2>\r\n            \r\n            <div style={styles.summaryCard}>\r\n              <div style={styles.summaryGrid}>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Montant demandé</p>\r\n                  <p style={styles.summaryValue}>{parseFloat(formData.amount).toLocaleString('fr-FR')} DT</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Durée de remboursement</p>\r\n                  <p style={styles.summaryValue}>{formData.repaymentMonths} mois</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Mensualité</p>\r\n                  <p style={styles.summaryValue}>{calculateRepaymentAmount()} DT/mois</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Niveau d'urgence</p>\r\n                  <p style={styles.summaryValue}>{\r\n                    formData.urgencyLevel === 'high' ? 'Urgent' : \r\n                    formData.urgencyLevel === 'medium' ? 'Modéré' : 'Normal'\r\n                  }</p>\r\n                </div>\r\n                <div style={styles.colSpan2}>\r\n                  <p style={styles.summaryLabel}>Motif de la demande</p>\r\n                  <p style={styles.summaryValue}>{formData.reason}</p>\r\n                </div>\r\n                {formData.additionalInfo && (\r\n                  <div style={styles.colSpan2}>\r\n                    <p style={styles.summaryLabel}>Informations complémentaires</p>\r\n                    <p style={styles.summaryValue}>{formData.additionalInfo}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.infoBox}>\r\n              <p style={styles.infoText}>\r\n                Votre demande sera examinée par le service des ressources humaines dans les plus brefs délais. \r\n                Vous recevrez une notification lorsque celle-ci sera traitée.\r\n              </p>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={() => setSubmitted(false)} \r\n              style={styles.submitButton}\r\n            >\r\n              Nouvelle demande\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit} style={styles.formContainer}>\r\n            <div style={styles.formSection}>\r\n              <h3 style={styles.sectionTitle}>Informations de la demande</h3>\r\n              \r\n              <div style={styles.formGrid}>\r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"amount\">\r\n                    Montant demandé (DT)\r\n                  </label>\r\n                  <div style={styles.amountContainer}>\r\n                    <span style={styles.currencySymbol}>DT</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"amount\"\r\n                      name=\"amount\"\r\n                      value={formData.amount}\r\n                      onChange={handleChange}\r\n                      style={styles.amountInput}\r\n                      min=\"100\"\r\n                      step=\"50\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"reason\">\r\n                    Motif de la demande\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"reason\"\r\n                    name=\"reason\"\r\n                    value={formData.reason}\r\n                    onChange={handleChange}\r\n                    style={styles.input}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.divider}></div>\r\n            \r\n            <div style={styles.formSection}>\r\n              <h3 style={styles.sectionTitle}>Modalités de remboursement</h3>\r\n              \r\n              <div style={styles.formGrid}>\r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"repaymentMonths\">\r\n                    Durée de remboursement\r\n                  </label>\r\n                  <select\r\n                    id=\"repaymentMonths\"\r\n                    name=\"repaymentMonths\"\r\n                    value={formData.repaymentMonths}\r\n                    onChange={handleChange}\r\n                    style={styles.select}\r\n                    required\r\n                  >\r\n                    <option value=\"1\">1 mois</option>\r\n                    <option value=\"2\">2 mois</option>\r\n                    <option value=\"3\">3 mois</option>\r\n                    <option value=\"4\">4 mois</option>\r\n                    <option value=\"5\">5 mois</option>\r\n                    <option value=\"6\">6 mois</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"repaymentDate\">\r\n                    Date du premier remboursement\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"repaymentDate\"\r\n                    name=\"repaymentDate\"\r\n                    value={formData.repaymentDate}\r\n                    onChange={handleChange}\r\n                    style={styles.input}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {formData.amount && formData.repaymentMonths && (\r\n                <div style={styles.infoBox}>\r\n                  <p style={styles.infoText}>\r\n                    Montant mensuel à rembourser: <strong>{calculateRepaymentAmount()} DT</strong>\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div style={styles.divider}></div>\r\n            \r\n            <div style={styles.formSection}>\r\n              <h3 style={styles.sectionTitle}>Informations complémentaires</h3>\r\n              \r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>\r\n                  Niveau d'urgence\r\n                </label>\r\n                <div style={styles.radioGroup}>\r\n                  <label style={styles.radioLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"urgencyLevel\"\r\n                      value=\"normal\"\r\n                      checked={formData.urgencyLevel === 'normal'}\r\n                      onChange={handleChange}\r\n                      style={styles.radio}\r\n                    />\r\n                    Normal\r\n                  </label>\r\n                  <label style={styles.radioLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"urgencyLevel\"\r\n                      value=\"medium\"\r\n                      checked={formData.urgencyLevel === 'medium'}\r\n                      onChange={handleChange}\r\n                      style={styles.radio}\r\n                    />\r\n                    Modéré\r\n                  </label>\r\n                  <label style={styles.radioLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"urgencyLevel\"\r\n                      value=\"high\"\r\n                      checked={formData.urgencyLevel === 'high'}\r\n                      onChange={handleChange}\r\n                      style={styles.radio}\r\n                    />\r\n                    Urgent\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label} htmlFor=\"additionalInfo\">\r\n                  Informations complémentaires (optionnel)\r\n                </label>\r\n                <textarea\r\n                  id=\"additionalInfo\"\r\n                  name=\"additionalInfo\"\r\n                  value={formData.additionalInfo}\r\n                  onChange={handleChange}\r\n                  style={styles.textarea}\r\n                  placeholder=\"Précisez ici toute information que vous jugez utile pour le traitement de votre demande...\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.infoBox}>\r\n              <p style={styles.infoText}>\r\n                <strong>Note:</strong> Conformément à la politique de l'entreprise, le montant maximum d'une avance sur salaire \r\n                est limité à 50% de votre salaire mensuel net. Le remboursement sera effectué par prélèvement \r\n                automatique sur vos prochains salaires.\r\n              </p>\r\n            </div>\r\n            \r\n            <div style={styles.buttonContainer}>\r\n              <button\r\n                type=\"button\"\r\n                style={styles.cancelButton}\r\n              >\r\n                Annuler\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                style={styles.submitButton}\r\n              >\r\n                Soumettre la demande\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n };\r\n \n export default SalaryAdvanceForm;*/}","map":{"version":3,"names":[],"sources":["C:/Users/Mega-PC/Projet-pfe-ubcirh25/src/views/Test.js"],"sourcesContent":["{/*import React, { useState } from 'react';\r\n\r\nconst SalaryAdvanceForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    amount: '',\r\n    reason: '',\r\n    repaymentMonths: '1',\r\n    repaymentDate: '',\r\n    urgencyLevel: 'normal',\r\n    additionalInfo: ''\r\n  });\r\n  \r\n  const [submitted, setSubmitted] = useState(false);\r\n  \r\n  const styles = {\r\n    container: {\r\n      padding: '20px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f7f8fc'\r\n    },\r\n    pageTitle: {\r\n      fontSize: '28px',\r\n      fontWeight: 'bold',\r\n      color: '#2563EB',\r\n      textAlign: 'center',\r\n      margin: '0 0 20px 0'\r\n    },\r\n    pageSubtitle: {\r\n      fontSize: '16px',\r\n      color: '#666',\r\n      textAlign: 'center',\r\n      margin: '0 0 30px 0'\r\n    },\r\n    card: {\r\n      maxWidth: '800px',\r\n      margin: '0 auto',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden'\r\n    },\r\n    header: {\r\n      backgroundColor: '#2563EB',\r\n      padding: '15px 20px',\r\n      color: '#FFFFFF'\r\n    },\r\n    title: {\r\n      fontSize: '16px',\r\n      fontWeight: 'bold',\r\n      margin: '0'\r\n    },\r\n    formContainer: {\r\n      padding: '24px'\r\n    },\r\n    formGrid: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '20px',\r\n      marginBottom: '24px'\r\n    },\r\n    formGroup: {\r\n      marginBottom: '16px'\r\n    },\r\n    label: {\r\n      display: 'block',\r\n      marginBottom: '6px',\r\n      fontSize: '14px',\r\n      fontWeight: '500',\r\n      color: '#333333'\r\n    },\r\n    input: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px'\r\n    },\r\n    select: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px',\r\n      backgroundColor: '#FFFFFF'\r\n    },\r\n    textarea: {\r\n      width: '100%',\r\n      padding: '10px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px',\r\n      minHeight: '100px',\r\n      resize: 'vertical'\r\n    },\r\n    radioGroup: {\r\n      display: 'flex',\r\n      gap: '16px',\r\n      marginTop: '8px'\r\n    },\r\n    radioLabel: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      fontSize: '14px',\r\n      cursor: 'pointer'\r\n    },\r\n    radio: {\r\n      marginRight: '6px'\r\n    },\r\n    infoBox: {\r\n      backgroundColor: '#f0f7ff',\r\n      borderLeft: '4px solid #2563EB',\r\n      padding: '12px',\r\n      marginBottom: '20px'\r\n    },\r\n    infoText: {\r\n      color: '#333333',\r\n      fontSize: '14px',\r\n      margin: '0'\r\n    },\r\n    buttonContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      gap: '12px',\r\n      marginTop: '16px'\r\n    },\r\n    cancelButton: {\r\n      padding: '10px 16px',\r\n      backgroundColor: '#FFFFFF',\r\n      color: '#333333',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      fontWeight: '500'\r\n    },\r\n    submitButton: {\r\n      padding: '10px 16px',\r\n      backgroundColor: '#2563EB',\r\n      color: '#FFFFFF',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      fontWeight: '500'\r\n    },\r\n    successAlert: {\r\n      backgroundColor: '#f0f7ff',\r\n      borderLeft: '4px solid #2563EB',\r\n      padding: '12px',\r\n      marginBottom: '20px',\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    successIcon: {\r\n      color: '#2563EB',\r\n      marginRight: '8px'\r\n    },\r\n    successText: {\r\n      color: '#333333',\r\n      fontSize: '14px',\r\n      margin: '0'\r\n    },\r\n    summaryTitle: {\r\n      fontSize: '18px',\r\n      fontWeight: '600',\r\n      color: '#333333',\r\n      marginBottom: '16px'\r\n    },\r\n    summaryCard: {\r\n      backgroundColor: '#F5F5F5',\r\n      padding: '16px',\r\n      borderRadius: '4px',\r\n      marginBottom: '24px'\r\n    },\r\n    summaryGrid: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '16px'\r\n    },\r\n    summaryLabel: {\r\n      fontSize: '12px',\r\n      color: '#757575',\r\n      marginBottom: '4px'\r\n    },\r\n    summaryValue: {\r\n      fontSize: '14px',\r\n      fontWeight: '500',\r\n      color: '#333333'\r\n    },\r\n    colSpan2: {\r\n      gridColumn: 'span 2'\r\n    },\r\n    progressBar: {\r\n      height: '4px',\r\n      backgroundColor: '#E0E0E0',\r\n      borderRadius: '2px',\r\n      marginTop: '6px',\r\n      overflow: 'hidden'\r\n    },\r\n    progressFill: {\r\n      height: '100%',\r\n      backgroundColor: '#2563EB',\r\n      width: '0%',\r\n      transition: 'width 0.3s ease'\r\n    },\r\n    amountContainer: {\r\n      position: 'relative'\r\n    },\r\n    currencySymbol: {\r\n      position: 'absolute',\r\n      left: '10px',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      color: '#757575'\r\n    },\r\n    amountInput: {\r\n      width: '100%',\r\n      padding: '10px 10px 10px 30px',\r\n      border: '1px solid #DDDDDD',\r\n      borderRadius: '4px',\r\n      fontSize: '14px'\r\n    },\r\n    divider: {\r\n      margin: '24px 0',\r\n      height: '1px',\r\n      backgroundColor: '#EEEEEE'\r\n    },\r\n    formSection: {\r\n      marginBottom: '24px'\r\n    },\r\n    sectionTitle: {\r\n      fontSize: '16px',\r\n      fontWeight: '600',\r\n      color: '#333333',\r\n      marginBottom: '16px'\r\n    }\r\n  };\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n  \r\n  const calculateRepaymentAmount = () => {\r\n    if (!formData.amount) return 0;\r\n    \r\n    const amount = parseFloat(formData.amount);\r\n    const months = parseInt(formData.repaymentMonths);\r\n    \r\n    if (isNaN(amount) || isNaN(months) || months === 0) return 0;\r\n    \r\n    return (amount / months).toFixed(2);\r\n  };\r\n  \r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.pageTitle}>Demande de Congé</h1>\r\n      <p style={styles.pageSubtitle}>Découvrez et soumettez vos demandes de congés en quelques clics</p>\r\n      \r\n      <div style={styles.card}>\r\n        <div style={styles.header}>\r\n          <h2 style={styles.title}>Demande d'Avance sur Salaire</h2>\r\n        </div>\r\n        \r\n        {submitted ? (\r\n          <div style={styles.formContainer}>\r\n            <div style={styles.successAlert}>\r\n              <span style={styles.successIcon}>✓</span>\r\n              <p style={styles.successText}>\r\n                Votre demande d'avance sur salaire a été soumise avec succès!\r\n              </p>\r\n            </div>\r\n            \r\n            <h2 style={styles.summaryTitle}>Récapitulatif de votre demande</h2>\r\n            \r\n            <div style={styles.summaryCard}>\r\n              <div style={styles.summaryGrid}>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Montant demandé</p>\r\n                  <p style={styles.summaryValue}>{parseFloat(formData.amount).toLocaleString('fr-FR')} DT</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Durée de remboursement</p>\r\n                  <p style={styles.summaryValue}>{formData.repaymentMonths} mois</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Mensualité</p>\r\n                  <p style={styles.summaryValue}>{calculateRepaymentAmount()} DT/mois</p>\r\n                </div>\r\n                <div>\r\n                  <p style={styles.summaryLabel}>Niveau d'urgence</p>\r\n                  <p style={styles.summaryValue}>{\r\n                    formData.urgencyLevel === 'high' ? 'Urgent' : \r\n                    formData.urgencyLevel === 'medium' ? 'Modéré' : 'Normal'\r\n                  }</p>\r\n                </div>\r\n                <div style={styles.colSpan2}>\r\n                  <p style={styles.summaryLabel}>Motif de la demande</p>\r\n                  <p style={styles.summaryValue}>{formData.reason}</p>\r\n                </div>\r\n                {formData.additionalInfo && (\r\n                  <div style={styles.colSpan2}>\r\n                    <p style={styles.summaryLabel}>Informations complémentaires</p>\r\n                    <p style={styles.summaryValue}>{formData.additionalInfo}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.infoBox}>\r\n              <p style={styles.infoText}>\r\n                Votre demande sera examinée par le service des ressources humaines dans les plus brefs délais. \r\n                Vous recevrez une notification lorsque celle-ci sera traitée.\r\n              </p>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={() => setSubmitted(false)} \r\n              style={styles.submitButton}\r\n            >\r\n              Nouvelle demande\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit} style={styles.formContainer}>\r\n            <div style={styles.formSection}>\r\n              <h3 style={styles.sectionTitle}>Informations de la demande</h3>\r\n              \r\n              <div style={styles.formGrid}>\r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"amount\">\r\n                    Montant demandé (DT)\r\n                  </label>\r\n                  <div style={styles.amountContainer}>\r\n                    <span style={styles.currencySymbol}>DT</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"amount\"\r\n                      name=\"amount\"\r\n                      value={formData.amount}\r\n                      onChange={handleChange}\r\n                      style={styles.amountInput}\r\n                      min=\"100\"\r\n                      step=\"50\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"reason\">\r\n                    Motif de la demande\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"reason\"\r\n                    name=\"reason\"\r\n                    value={formData.reason}\r\n                    onChange={handleChange}\r\n                    style={styles.input}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.divider}></div>\r\n            \r\n            <div style={styles.formSection}>\r\n              <h3 style={styles.sectionTitle}>Modalités de remboursement</h3>\r\n              \r\n              <div style={styles.formGrid}>\r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"repaymentMonths\">\r\n                    Durée de remboursement\r\n                  </label>\r\n                  <select\r\n                    id=\"repaymentMonths\"\r\n                    name=\"repaymentMonths\"\r\n                    value={formData.repaymentMonths}\r\n                    onChange={handleChange}\r\n                    style={styles.select}\r\n                    required\r\n                  >\r\n                    <option value=\"1\">1 mois</option>\r\n                    <option value=\"2\">2 mois</option>\r\n                    <option value=\"3\">3 mois</option>\r\n                    <option value=\"4\">4 mois</option>\r\n                    <option value=\"5\">5 mois</option>\r\n                    <option value=\"6\">6 mois</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div style={styles.formGroup}>\r\n                  <label style={styles.label} htmlFor=\"repaymentDate\">\r\n                    Date du premier remboursement\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"repaymentDate\"\r\n                    name=\"repaymentDate\"\r\n                    value={formData.repaymentDate}\r\n                    onChange={handleChange}\r\n                    style={styles.input}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {formData.amount && formData.repaymentMonths && (\r\n                <div style={styles.infoBox}>\r\n                  <p style={styles.infoText}>\r\n                    Montant mensuel à rembourser: <strong>{calculateRepaymentAmount()} DT</strong>\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div style={styles.divider}></div>\r\n            \r\n            <div style={styles.formSection}>\r\n              <h3 style={styles.sectionTitle}>Informations complémentaires</h3>\r\n              \r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>\r\n                  Niveau d'urgence\r\n                </label>\r\n                <div style={styles.radioGroup}>\r\n                  <label style={styles.radioLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"urgencyLevel\"\r\n                      value=\"normal\"\r\n                      checked={formData.urgencyLevel === 'normal'}\r\n                      onChange={handleChange}\r\n                      style={styles.radio}\r\n                    />\r\n                    Normal\r\n                  </label>\r\n                  <label style={styles.radioLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"urgencyLevel\"\r\n                      value=\"medium\"\r\n                      checked={formData.urgencyLevel === 'medium'}\r\n                      onChange={handleChange}\r\n                      style={styles.radio}\r\n                    />\r\n                    Modéré\r\n                  </label>\r\n                  <label style={styles.radioLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"urgencyLevel\"\r\n                      value=\"high\"\r\n                      checked={formData.urgencyLevel === 'high'}\r\n                      onChange={handleChange}\r\n                      style={styles.radio}\r\n                    />\r\n                    Urgent\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label} htmlFor=\"additionalInfo\">\r\n                  Informations complémentaires (optionnel)\r\n                </label>\r\n                <textarea\r\n                  id=\"additionalInfo\"\r\n                  name=\"additionalInfo\"\r\n                  value={formData.additionalInfo}\r\n                  onChange={handleChange}\r\n                  style={styles.textarea}\r\n                  placeholder=\"Précisez ici toute information que vous jugez utile pour le traitement de votre demande...\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.infoBox}>\r\n              <p style={styles.infoText}>\r\n                <strong>Note:</strong> Conformément à la politique de l'entreprise, le montant maximum d'une avance sur salaire \r\n                est limité à 50% de votre salaire mensuel net. Le remboursement sera effectué par prélèvement \r\n                automatique sur vos prochains salaires.\r\n              </p>\r\n            </div>\r\n            \r\n            <div style={styles.buttonContainer}>\r\n              <button\r\n                type=\"button\"\r\n                style={styles.cancelButton}\r\n              >\r\n                Annuler\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                style={styles.submitButton}\r\n              >\r\n                Soumettre la demande\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalaryAdvanceForm;*/}\r\n"],"mappingsoCApgBC","ignoreList":[]},"metadata":{},"sourceType":"module"}